{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@vue+repl@3.4.0/node_modules/@vue/repl/dist/chunks/highlight-CJzieDKQ.js"],
  "sourcesContent": ["import { C as CancellationTokenSource, E as Emitter, K as KeyCode, a as KeyMod, M as MarkerSeverity, b as MarkerTag, P as Position, R as Range, S as Selection, c as SelectionDirection, T as Token, U as Uri, e as editor, l as languages } from './MonacoEditor-ze5X_NMk.js';\nimport 'vue';\nimport './_commonjsHelpers-9Q-OoQuc.js';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst monaco = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({\n    __proto__: null,\n    CancellationTokenSource,\n    Emitter,\n    KeyCode,\n    KeyMod,\n    MarkerSeverity,\n    MarkerTag,\n    Position,\n    Range,\n    Selection,\n    SelectionDirection,\n    Token,\n    Uri,\n    editor,\n    languages\n}, Symbol.toStringTag, { value: 'Module' }));\n\nvar FontStyle;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n    FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n    FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n    FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n    FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n})(FontStyle || (FontStyle = {}));\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n({\n    InDebugMode: (typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG'])\n});\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n    function toBinaryStr(encodedTokenAttributes) {\n        return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n    }\n    EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n    function print(encodedTokenAttributes) {\n        const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    }\n    EncodedTokenAttributes.print = print;\n    function getLanguageId(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 255 /* EncodedTokenDataConsts.LANGUAGEID_MASK */) >>>\n            0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */);\n    }\n    EncodedTokenAttributes.getLanguageId = getLanguageId;\n    function getTokenType(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 768 /* EncodedTokenDataConsts.TOKEN_TYPE_MASK */) >>>\n            8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */);\n    }\n    EncodedTokenAttributes.getTokenType = getTokenType;\n    function containsBalancedBrackets(encodedTokenAttributes) {\n        return (encodedTokenAttributes & 1024 /* EncodedTokenDataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n    function getFontStyle(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 30720 /* EncodedTokenDataConsts.FONT_STYLE_MASK */) >>>\n            11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */);\n    }\n    EncodedTokenAttributes.getFontStyle = getFontStyle;\n    function getForeground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 16744448 /* EncodedTokenDataConsts.FOREGROUND_MASK */) >>>\n            15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getForeground = getForeground;\n    function getBackground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 4278190080 /* EncodedTokenDataConsts.BACKGROUND_MASK */) >>>\n            24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getBackground = getBackground;\n    /**\n     * Updates the fields in `metadata`.\n     * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n     */\n    function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n        let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n        let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 8 /* OptionalStandardTokenType.NotSet */) {\n            _tokenType = fromOptionalTokenType(tokenType);\n        }\n        if (containsBalancedBrackets !== null) {\n            _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n        }\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return (((_languageId << 0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */) |\n            (_tokenType << 8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */) |\n            (_containsBalancedBracketsBit <<\n                10 /* EncodedTokenDataConsts.BALANCED_BRACKETS_OFFSET */) |\n            (_fontStyle << 11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */) |\n            (_foreground << 15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */) |\n            (_background << 24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */)) >>>\n            0);\n    }\n    EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes || (EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n    return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n    return standardType;\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createMatchers(selector, matchesName) {\n    const results = [];\n    const tokenizer = newTokenizer(selector);\n    let token = tokenizer.next();\n    while (token !== null) {\n        let priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${token} in scope selector`);\n            }\n            token = tokenizer.next();\n        }\n        let matcher = parseConjunction();\n        results.push({ matcher, priority });\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            const expressionToNegate = parseOperand();\n            return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            const expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            const identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return matcherInput => matchesName(identifiers, matcherInput);\n        }\n        return null;\n    }\n    function parseConjunction() {\n        const matchers = [];\n        let matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n    }\n    function parseInnerExpression() {\n        const matchers = [];\n        let matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n    }\n}\nfunction isIdentifier(token) {\n    return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    let match = regex.exec(input);\n    return {\n        next: () => {\n            if (!match) {\n                return null;\n            }\n            const res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction disposeOnigString(str) {\n    if (typeof str.dispose === 'function') {\n        str.dispose();\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction clone(something) {\n    return doClone(something);\n}\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    let r = {};\n    for (let key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target, ...sources) {\n    sources.forEach(source => {\n        for (let key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nfunction basename(path) {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    }\n    else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    }\n    else {\n        return path.substr(~idx + 1);\n    }\n}\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n    static hasCaptures(regexSource) {\n        if (regexSource === null) {\n            return false;\n        }\n        CAPTURING_REGEX_SOURCE.lastIndex = 0;\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    }\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                let result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    let len1 = a.length;\n    let len2 = b.length;\n    if (len1 === len2) {\n        for (let i = 0; i < len1; i++) {\n            let res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nclass CachedFn {\n    fn;\n    cache = new Map();\n    constructor(fn) {\n        this.fn = fn;\n    }\n    get(key) {\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        const value = this.fn(key);\n        this.cache.set(key, value);\n        return value;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n    scopeName;\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n    scopeName;\n    ruleName;\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nclass ExternalReferenceCollector {\n    _references = [];\n    _seenReferenceKeys = new Set();\n    get references() {\n        return this._references;\n    }\n    visitedRule = new Set();\n    add(reference) {\n        const key = reference.toKey();\n        if (this._seenReferenceKeys.has(key)) {\n            return;\n        }\n        this._seenReferenceKeys.add(key);\n        this._references.push(reference);\n    }\n}\nclass ScopeDependencyProcessor {\n    repo;\n    initialScopeName;\n    seenFullScopeRequests = new Set();\n    seenPartialScopeRequests = new Set();\n    Q;\n    constructor(repo, initialScopeName) {\n        this.repo = repo;\n        this.initialScopeName = initialScopeName;\n        this.seenFullScopeRequests.add(this.initialScopeName);\n        this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n    }\n    processQueue() {\n        const q = this.Q;\n        this.Q = [];\n        const deps = new ExternalReferenceCollector();\n        for (const dep of q) {\n            collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n        }\n        for (const dep of deps.references) {\n            if (dep instanceof TopLevelRuleReference) {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed\n                    continue;\n                }\n                this.seenFullScopeRequests.add(dep.scopeName);\n                this.Q.push(dep);\n            }\n            else {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed in full\n                    continue;\n                }\n                if (this.seenPartialScopeRequests.has(dep.toKey())) {\n                    // already processed\n                    continue;\n                }\n                this.seenPartialScopeRequests.add(dep.toKey());\n                this.Q.push(dep);\n            }\n        }\n    }\n}\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n    const selfGrammar = repo.lookup(reference.scopeName);\n    if (!selfGrammar) {\n        if (reference.scopeName === baseGrammarScopeName) {\n            throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n        }\n        return;\n    }\n    const baseGrammar = repo.lookup(baseGrammarScopeName);\n    if (reference instanceof TopLevelRuleReference) {\n        collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n    }\n    else {\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { baseGrammar, selfGrammar, repository: selfGrammar.repository }, result);\n    }\n    const injections = repo.injections(reference.scopeName);\n    if (injections) {\n        for (const injection of injections) {\n            result.add(new TopLevelRuleReference(injection));\n        }\n    }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n    if (context.repository && context.repository[ruleName]) {\n        const rule = context.repository[ruleName];\n        collectExternalReferencesInRules([rule], context, result);\n    }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n    if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n        collectExternalReferencesInRules(context.selfGrammar.patterns, { ...context, repository: context.selfGrammar.repository }, result);\n    }\n    if (context.selfGrammar.injections) {\n        collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), { ...context, repository: context.selfGrammar.repository }, result);\n    }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n    for (const rule of rules) {\n        if (result.visitedRule.has(rule)) {\n            continue;\n        }\n        result.visitedRule.add(rule);\n        const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n        if (Array.isArray(rule.patterns)) {\n            collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n        }\n        const include = rule.include;\n        if (!include) {\n            continue;\n        }\n        const reference = parseInclude(include);\n        switch (reference.kind) {\n            case 0 /* IncludeReferenceKind.Base */:\n                collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n                break;\n            case 1 /* IncludeReferenceKind.Self */:\n                collectExternalReferencesInTopLevelRule(context, result);\n                break;\n            case 2 /* IncludeReferenceKind.RelativeReference */:\n                collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n                break;\n            case 3 /* IncludeReferenceKind.TopLevelReference */:\n            case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n                const selfGrammar = reference.scopeName === context.selfGrammar.scopeName\n                    ? context.selfGrammar\n                    : reference.scopeName === context.baseGrammar.scopeName\n                        ? context.baseGrammar\n                        : undefined;\n                if (selfGrammar) {\n                    const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n                    if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n                        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n                    }\n                    else {\n                        collectExternalReferencesInTopLevelRule(newContext, result);\n                    }\n                }\n                else {\n                    if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n                        result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n                    }\n                    else {\n                        result.add(new TopLevelRuleReference(reference.scopeName));\n                    }\n                }\n                break;\n        }\n    }\n}\nclass BaseReference {\n    kind = 0 /* IncludeReferenceKind.Base */;\n}\nclass SelfReference {\n    kind = 1 /* IncludeReferenceKind.Self */;\n}\nclass RelativeReference {\n    ruleName;\n    kind = 2 /* IncludeReferenceKind.RelativeReference */;\n    constructor(ruleName) {\n        this.ruleName = ruleName;\n    }\n}\nclass TopLevelReference {\n    scopeName;\n    kind = 3 /* IncludeReferenceKind.TopLevelReference */;\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n}\nclass TopLevelRepositoryReference {\n    scopeName;\n    ruleName;\n    kind = 4 /* IncludeReferenceKind.TopLevelRepositoryReference */;\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n}\nfunction parseInclude(include) {\n    if (include === '$base') {\n        return new BaseReference();\n    }\n    else if (include === '$self') {\n        return new SelfReference();\n    }\n    const indexOfSharp = include.indexOf(\"#\");\n    if (indexOfSharp === -1) {\n        return new TopLevelReference(include);\n    }\n    else if (indexOfSharp === 0) {\n        return new RelativeReference(include.substring(1));\n    }\n    else {\n        const scopeName = include.substring(0, indexOfSharp);\n        const ruleName = include.substring(indexOfSharp + 1);\n        return new TopLevelRepositoryReference(scopeName, ruleName);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\n// This is a special constant to indicate that the end regexp matched.\nconst endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nconst whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n    return id;\n}\nfunction ruleIdToNumber(id) {\n    return id;\n}\nclass Rule {\n    $location;\n    id;\n    _nameIsCapturing;\n    _name;\n    _contentNameIsCapturing;\n    _contentName;\n    constructor($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n        return `${this.constructor.name}#${this.id} @ ${location}`;\n    }\n    getName(lineText, captureIndices) {\n        if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n            return this._name;\n        }\n        return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    }\n    getContentName(lineText, captureIndices) {\n        if (!this._contentNameIsCapturing || this._contentName === null) {\n            return this._contentName;\n        }\n        return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    }\n}\nclass CaptureRule extends Rule {\n    retokenizeCapturedWithRuleId;\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        super($location, id, name, contentName);\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n    }\n    dispose() {\n        // nothing to dispose\n    }\n    collectPatterns(grammar, out) {\n        throw new Error('Not supported!');\n    }\n    compile(grammar, endRegexSource) {\n        throw new Error('Not supported!');\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Not supported!');\n    }\n}\nclass MatchRule extends Rule {\n    _match;\n    captures;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, match, captures) {\n        super($location, id, name, null);\n        this._match = new RegExpSource(match, this.id);\n        this.captures = captures;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._match);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass IncludeOnlyRule extends Rule {\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, contentName, patterns) {\n        super($location, id, name, contentName);\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    collectPatterns(grammar, out) {\n        for (const pattern of this.patterns) {\n            const rule = grammar.getRule(pattern);\n            rule.collectPatterns(grammar, out);\n        }\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass BeginEndRule extends Rule {\n    _begin;\n    beginCaptures;\n    _end;\n    endHasBackReferences;\n    endCaptures;\n    applyEndPatternLast;\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n        this.endHasBackReferences = this._end.hasBackReferences;\n        this.endCaptures = endCaptures;\n        this.applyEndPatternLast = applyEndPatternLast || false;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n            }\n            else {\n                this._cachedCompiledPatterns.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass BeginWhileRule extends Rule {\n    _begin;\n    beginCaptures;\n    whileCaptures;\n    _while;\n    whileHasBackReferences;\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    _cachedCompiledWhilePatterns;\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this.whileCaptures = whileCaptures;\n        this._while = new RegExpSource(_while, whileRuleId);\n        this.whileHasBackReferences = this._while.hasBackReferences;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n        this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n        if (this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns.dispose();\n            this._cachedCompiledWhilePatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(grammar, endRegexSource) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n        }\n        return this._cachedCompiledWhilePatterns;\n    }\n}\nclass RuleFactory {\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule((id) => {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    }\n    static getCompiledRuleId(desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule((id) => {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (typeof desc.begin === 'undefined') {\n                    if (desc.repository) {\n                        repository = mergeObjects({}, repository, desc.repository);\n                    }\n                    let patterns = desc.patterns;\n                    if (typeof patterns === 'undefined' && desc.include) {\n                        patterns = [{ include: desc.include }];\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    }\n    static _compileCaptures(captures, helper, repository) {\n        let r = [];\n        if (captures) {\n            // Find the maximum capture id\n            let maximumCaptureId = 0;\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (let i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                let retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    }\n    static _compilePatterns(patterns, helper, repository) {\n        let r = [];\n        if (patterns) {\n            for (let i = 0, len = patterns.length; i < len; i++) {\n                const pattern = patterns[i];\n                let ruleId = -1;\n                if (pattern.include) {\n                    const reference = parseInclude(pattern.include);\n                    switch (reference.kind) {\n                        case 0 /* IncludeReferenceKind.Base */:\n                        case 1 /* IncludeReferenceKind.Self */:\n                            ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                            break;\n                        case 2 /* IncludeReferenceKind.RelativeReference */:\n                            // Local include found in `repository`\n                            let localIncludedRule = repository[reference.ruleName];\n                            if (localIncludedRule) {\n                                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                            }\n                            break;\n                        case 3 /* IncludeReferenceKind.TopLevelReference */:\n                        case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n                            const externalGrammarName = reference.scopeName;\n                            const externalGrammarInclude = reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */\n                                ? reference.ruleName\n                                : null;\n                            // External include\n                            const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                            if (externalGrammar) {\n                                if (externalGrammarInclude) {\n                                    let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                    if (externalIncludedRule) {\n                                        ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                    }\n                                }\n                                else {\n                                    ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                                }\n                            }\n                            break;\n                    }\n                }\n                else {\n                    ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (ruleId !== -1) {\n                    const rule = helper.getRule(ruleId);\n                    let skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(ruleId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    }\n}\nclass RegExpSource {\n    source;\n    ruleId;\n    hasAnchor;\n    hasBackReferences;\n    _anchorCache;\n    constructor(regExpSource, ruleId) {\n        if (regExpSource) {\n            const len = regExpSource.length;\n            let lastPushedPos = 0;\n            let output = [];\n            let hasAnchor = false;\n            for (let pos = 0; pos < len; pos++) {\n                const ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        const nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        else {\n            this._anchorCache = null;\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    clone() {\n        return new RegExpSource(this.source, this.ruleId);\n    }\n    setSource(newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    }\n    resolveBackReferences(lineText, captureIndices) {\n        let capturedValues = captureIndices.map((capture) => {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n            return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    }\n    _buildAnchorCache() {\n        let A0_G0_result = [];\n        let A0_G1_result = [];\n        let A1_G0_result = [];\n        let A1_G1_result = [];\n        let pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    }\n    resolveAnchors(allowA, allowG) {\n        if (!this.hasAnchor || !this._anchorCache) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    }\n}\nclass RegExpSourceList {\n    _items;\n    _hasAnchors;\n    _cached;\n    _anchorCache;\n    constructor() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        if (this._cached) {\n            this._cached.dispose();\n            this._cached = null;\n        }\n        if (this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0.dispose();\n            this._anchorCache.A0_G0 = null;\n        }\n        if (this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1.dispose();\n            this._anchorCache.A0_G1 = null;\n        }\n        if (this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0.dispose();\n            this._anchorCache.A1_G0 = null;\n        }\n        if (this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1.dispose();\n            this._anchorCache.A1_G1 = null;\n        }\n    }\n    push(item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    unshift(item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._disposeCaches();\n            this._items[index].setSource(newSource);\n        }\n    }\n    compile(onigLib) {\n        if (!this._cached) {\n            let regExps = this._items.map(e => e.source);\n            this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(onigLib, allowA, allowG) {\n        if (!this._hasAnchors) {\n            return this.compile(onigLib);\n        }\n        else {\n            if (allowA) {\n                if (allowG) {\n                    if (!this._anchorCache.A1_G1) {\n                        this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    if (!this._anchorCache.A1_G0) {\n                        this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    if (!this._anchorCache.A0_G1) {\n                        this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    if (!this._anchorCache.A0_G0) {\n                        this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    }\n    _resolveAnchors(onigLib, allowA, allowG) {\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n        return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n}\nclass CompiledRule {\n    regExps;\n    rules;\n    scanner;\n    constructor(onigLib, regExps, rules) {\n        this.regExps = regExps;\n        this.rules = rules;\n        this.scanner = onigLib.createOnigScanner(regExps);\n    }\n    dispose() {\n        if (typeof this.scanner.dispose === \"function\") {\n            this.scanner.dispose();\n        }\n    }\n    toString() {\n        const r = [];\n        for (let i = 0, len = this.rules.length; i < len; i++) {\n            r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n        }\n        return r.join(\"\\n\");\n    }\n    findNextMatchSync(string, startPosition, options) {\n        const result = this.scanner.findNextMatchSync(string, startPosition, options);\n        if (!result) {\n            return null;\n        }\n        return {\n            ruleId: this.rules[result.index],\n            captureIndices: result.captureIndices,\n        };\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass Theme {\n    _colorMap;\n    _defaults;\n    _root;\n    static createFromRawTheme(source, colorMap) {\n        return this.createFromParsedTheme(parseTheme(source), colorMap);\n    }\n    static createFromParsedTheme(source, colorMap) {\n        return resolveParsedThemeRules(source, colorMap);\n    }\n    _cachedMatchRoot = new CachedFn((scopeName) => this._root.match(scopeName));\n    constructor(_colorMap, _defaults, _root) {\n        this._colorMap = _colorMap;\n        this._defaults = _defaults;\n        this._root = _root;\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(scopePath) {\n        if (scopePath === null) {\n            return this._defaults;\n        }\n        const scopeName = scopePath.scopeName;\n        const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n        const effectiveRule = matchingTrieElements.find((v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n        if (!effectiveRule) {\n            return null;\n        }\n        return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n    }\n}\nclass ScopeStack {\n    parent;\n    scopeName;\n    static push(path, scopeNames) {\n        for (const name of scopeNames) {\n            path = new ScopeStack(path, name);\n        }\n        return path;\n    }\n    static from(...segments) {\n        let result = null;\n        for (let i = 0; i < segments.length; i++) {\n            result = new ScopeStack(result, segments[i]);\n        }\n        return result;\n    }\n    constructor(parent, scopeName) {\n        this.parent = parent;\n        this.scopeName = scopeName;\n    }\n    push(scopeName) {\n        return new ScopeStack(this, scopeName);\n    }\n    getSegments() {\n        let item = this;\n        const result = [];\n        while (item) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        result.reverse();\n        return result;\n    }\n    toString() {\n        return this.getSegments().join(' ');\n    }\n    extends(other) {\n        if (this === other) {\n            return true;\n        }\n        if (this.parent === null) {\n            return false;\n        }\n        return this.parent.extends(other);\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let item = this;\n        while (item && item !== base) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        return item === base ? result.reverse() : undefined;\n    }\n}\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n    if (parentScopes === null) {\n        return true;\n    }\n    let index = 0;\n    let scopePattern = parentScopes[index];\n    while (scopePath) {\n        if (_matchesScope(scopePath.scopeName, scopePattern)) {\n            index++;\n            if (index === parentScopes.length) {\n                return true;\n            }\n            scopePattern = parentScopes[index];\n        }\n        scopePath = scopePath.parent;\n    }\n    return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n    return scopePattern === scopeName || (scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.');\n}\nclass StyleAttributes {\n    fontStyle;\n    foregroundId;\n    backgroundId;\n    constructor(fontStyle, foregroundId, backgroundId) {\n        this.fontStyle = fontStyle;\n        this.foregroundId = foregroundId;\n        this.backgroundId = backgroundId;\n    }\n}\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    let settings = source.settings;\n    let result = [], resultLen = 0;\n    for (let i = 0, len = settings.length; i < len; i++) {\n        let entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        let scopes;\n        if (typeof entry.scope === 'string') {\n            let _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* FontStyle.None */;\n            let segments = entry.settings.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                let segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* FontStyle.Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* FontStyle.Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* FontStyle.Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* FontStyle.Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.settings.foreground === 'string' && isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        let background = null;\n        if (typeof entry.settings.background === 'string' && isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            let _scope = scopes[j].trim();\n            let segments = _scope.split(' ');\n            let scope = segments[segments.length - 1];\n            let parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\nclass ParsedThemeRule {\n    scope;\n    parentScopes;\n    index;\n    fontStyle;\n    foreground;\n    background;\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        let r = strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* FontStyle.None */;\n    let defaultForeground = '#000000';\n    let defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        let incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* FontStyle.NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    let colorMap = new ColorMap(_colorMap);\n    let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* FontStyle.NotSet */, 0, 0), []);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        let rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n    _isFrozen;\n    _lastColorId;\n    _id2color;\n    _color2id;\n    constructor(_colorMap) {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n        if (Array.isArray(_colorMap)) {\n            this._isFrozen = true;\n            for (let i = 0, len = _colorMap.length; i < len; i++) {\n                this._color2id[_colorMap[i]] = i;\n                this._id2color[i] = _colorMap[i];\n            }\n        }\n        else {\n            this._isFrozen = false;\n        }\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        let value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        if (this._isFrozen) {\n            throw new Error(`Missing color in color map - ${color}`);\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nclass ThemeTrieElementRule {\n    scopeDepth;\n    parentScopes;\n    fontStyle;\n    foreground;\n    background;\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(arr) {\n        let r = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    }\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    }\n}\nclass ThemeTrieElement {\n    _mainRule;\n    _children;\n    _rulesWithParentScopes;\n    constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n        this._mainRule = _mainRule;\n        this._children = _children;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n    }\n    static _sortBySpecificity(arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    }\n    static _cmpBySpecificity(a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            const aParentScopes = a.parentScopes;\n            const bParentScopes = b.parentScopes;\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (let i = 0; i < aParentScopesLen; i++) {\n                    const aLen = aParentScopes[i].length;\n                    const bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    }\n    match(scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        let child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    }\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            let rule = this._rulesWithParentScopes[i];\n            if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* FontStyle.NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass BasicScopeAttributes {\n    languageId;\n    tokenType;\n    constructor(languageId, tokenType) {\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n    }\n}\nclass BasicScopeAttributesProvider {\n    _defaultAttributes;\n    _embeddedLanguagesMatcher;\n    constructor(initialLanguageId, embeddedLanguages) {\n        this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* OptionalStandardTokenType.NotSet */);\n        this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(scopeName) {\n        if (scopeName === null) {\n            return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n        }\n        return this._getBasicScopeAttributes.get(scopeName);\n    }\n    static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n    _getBasicScopeAttributes = new CachedFn((scopeName) => {\n        const languageId = this._scopeToLanguage(scopeName);\n        const standardTokenType = this._toStandardTokenType(scopeName);\n        return new BasicScopeAttributes(languageId, standardTokenType);\n    });\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    _scopeToLanguage(scope) {\n        return this._embeddedLanguagesMatcher.match(scope) || 0;\n    }\n    _toStandardTokenType(scopeName) {\n        const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 8 /* OptionalStandardTokenType.NotSet */;\n        }\n        switch (m[1]) {\n            case \"comment\":\n                return 1 /* OptionalStandardTokenType.Comment */;\n            case \"string\":\n                return 2 /* OptionalStandardTokenType.String */;\n            case \"regex\":\n                return 3 /* OptionalStandardTokenType.RegEx */;\n            case \"meta.embedded\":\n                return 0 /* OptionalStandardTokenType.Other */;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n    static STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n}\nclass ScopeMatcher {\n    values;\n    scopesRegExp;\n    constructor(values) {\n        if (values.length === 0) {\n            this.values = null;\n            this.scopesRegExp = null;\n        }\n        else {\n            this.values = new Map(values);\n            // create the regex\n            const escapedScopes = values.map(([scopeName, value]) => escapeRegExpCharacters(scopeName));\n            escapedScopes.sort();\n            escapedScopes.reverse(); // Longest scope first\n            this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(scope) {\n        if (!this.scopesRegExp) {\n            return undefined;\n        }\n        const m = scope.match(this.scopesRegExp);\n        if (!m) {\n            // no scopes matched\n            return undefined;\n        }\n        return this.values.get(m[1]);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass TokenizeStringResult {\n    stack;\n    stoppedEarly;\n    constructor(stack, stoppedEarly) {\n        this.stack = stack;\n        this.stoppedEarly = stoppedEarly;\n    }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n    const lineLength = lineText.content.length;\n    let STOP = false;\n    let anchorPosition = -1;\n    if (checkWhileConditions) {\n        const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n        stack = whileCheckResult.stack;\n        linePos = whileCheckResult.linePos;\n        isFirstLine = whileCheckResult.isFirstLine;\n        anchorPosition = whileCheckResult.anchorPosition;\n    }\n    const startTime = Date.now();\n    while (!STOP) {\n        if (timeLimit !== 0) {\n            const elapsedTime = Date.now() - startTime;\n            if (elapsedTime > timeLimit) {\n                return new TokenizeStringResult(stack, true);\n            }\n        }\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    return new TokenizeStringResult(stack, false);\n    function scanNext() {\n        const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        const captureIndices = r.captureIndices;\n        const matchedRuleId = r.matchedRuleId;\n        const hasAdvanced = captureIndices && captureIndices.length > 0\n            ? captureIndices[0].end > linePos\n            : false;\n        if (matchedRuleId === endRuleId) {\n            // We matched the `end` for this rule => pop it\n            const poppedRule = stack.getRule(grammar);\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.withContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            const popped = stack;\n            stack = stack.parent;\n            anchorPosition = popped.getAnchorPos();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            const _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            const beforePush = stack;\n            // push it on the stack rule\n            const scopeName = _rule.getName(lineText.content, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n            if (_rule instanceof BeginEndRule) {\n                const pushedRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof BeginWhileRule) {\n                const pushedRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                const matchingRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n}\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    let anchorPosition = (stack.beginRuleCapturedEOL ? 0 : -1);\n    const whileRules = [];\n    for (let node = stack; node; node = node.pop()) {\n        const nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n        const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (r) {\n            const matchedRuleId = r.ruleId;\n            if (matchedRuleId !== whileRuleId) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    const injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    const matchResultScore = matchResult.captureIndices[0].start;\n    const injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    const rule = stack.getRule(grammar);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: r.ruleId\n        };\n    }\n    return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    let bestMatchRating = Number.MAX_VALUE;\n    let bestMatchCaptureIndices = null;\n    let bestMatchRuleId;\n    let bestMatchResultPriority = 0;\n    const scopes = stack.contentNameScopesList.getScopeNames();\n    for (let i = 0, len = injections.length; i < len; i++) {\n        const injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        const rule = grammar.getRule(injection.ruleId);\n        const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n        const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (!matchResult) {\n            continue;\n        }\n        const matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = matchResult.ruleId;\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* FindOption.None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* FindOption.None */ };\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    const lineTextContent = lineText.content;\n    const len = Math.min(captures.length, captureIndices.length);\n    const localStack = [];\n    const maxEnd = captureIndices[0].end;\n    for (let i = 0; i < len; i++) {\n        const captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        const captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            const scopeName = captureRule.getName(lineTextContent, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n            const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n            const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n            const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n            _tokenizeString(grammar, onigSubStr, (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens, false, /* no time limit */ 0);\n            disposeOnigString(onigSubStr);\n            continue;\n        }\n        const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nclass LocalStackElement {\n    scopes;\n    endPos;\n    constructor(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n    return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    const matchers = createMatchers(selector, nameMatcher);\n    const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (const matcher of matchers) {\n        result.push({\n            debugSelector: selector,\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    let lastIndex = 0;\n    return identifers.every(identifier => {\n        for (let i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    const len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n    _rootScopeName;\n    balancedBracketSelectors;\n    _onigLib;\n    _rootId;\n    _lastRuleId;\n    _ruleId2desc;\n    _includedGrammars;\n    _grammarRepository;\n    _grammar;\n    _injections;\n    _basicScopeAttributesProvider;\n    _tokenTypeMatchers;\n    get themeProvider() { return this._grammarRepository; }\n    constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n        this._rootScopeName = _rootScopeName;\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._onigLib = _onigLib;\n        this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [null];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._injections = null;\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (const selector of Object.keys(tokenTypes)) {\n                const matchers = createMatchers(selector, nameMatcher);\n                for (const matcher of matchers) {\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector],\n                    });\n                }\n            }\n        }\n    }\n    dispose() {\n        for (const rule of this._ruleId2desc) {\n            if (rule) {\n                rule.dispose();\n            }\n        }\n    }\n    createOnigScanner(sources) {\n        return this._onigLib.createOnigScanner(sources);\n    }\n    createOnigString(sources) {\n        return this._onigLib.createOnigString(sources);\n    }\n    getMetadataForScope(scope) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n    }\n    _collectInjections() {\n        const grammarRepository = {\n            lookup: (scopeName) => {\n                if (scopeName === this._rootScopeName) {\n                    return this._grammar;\n                }\n                return this.getExternalGrammar(scopeName);\n            },\n            injections: (scopeName) => {\n                return this._grammarRepository.injections(scopeName);\n            },\n        };\n        const result = [];\n        const scopeName = this._rootScopeName;\n        const grammar = grammarRepository.lookup(scopeName);\n        if (grammar) {\n            // add injections from the current grammar\n            const rawInjections = grammar.injections;\n            if (rawInjections) {\n                for (let expression in rawInjections) {\n                    collectInjections(result, expression, rawInjections[expression], this, grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            const injectionScopeNames = this._grammarRepository.injections(scopeName);\n            if (injectionScopeNames) {\n                injectionScopeNames.forEach((injectionScopeName) => {\n                    const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n                    if (injectionGrammar) {\n                        const selector = injectionGrammar.injectionSelector;\n                        if (selector) {\n                            collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n                        }\n                    }\n                });\n            }\n        }\n        result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n        return result;\n    }\n    getInjections() {\n        if (this._injections === null) {\n            this._injections = this._collectInjections();\n        }\n        return this._injections;\n    }\n    registerRule(factory) {\n        const id = ++this._lastRuleId;\n        const result = factory(ruleIdFromNumber(id));\n        this._ruleId2desc[id] = result;\n        return result;\n    }\n    getRule(ruleId) {\n        return this._ruleId2desc[ruleIdToNumber(ruleId)];\n    }\n    getExternalGrammar(scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n        return undefined;\n    }\n    tokenizeLine(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, false, timeLimit);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    tokenizeLine2(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, true, timeLimit);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n        if (this._rootId === -1) {\n            this._rootId = RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n            // This ensures ids are deterministic, and thus equal in renderer and webworker.\n            this.getInjections();\n        }\n        let isFirstLine;\n        if (!prevState || prevState === StateStackImpl.NULL) {\n            isFirstLine = true;\n            const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n            const defaultStyle = this.themeProvider.getDefaults();\n            const defaultMetadata = EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n            const rootScopeName = this.getRule(this._rootId).getName(null, null);\n            let scopeList;\n            if (rootScopeName) {\n                scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n            }\n            else {\n                scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n            }\n            prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + \"\\n\";\n        const onigLineText = this.createOnigString(lineText);\n        const lineLength = onigLineText.content.length;\n        const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n        const r = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n        disposeOnigString(onigLineText);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: r.stack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n}\nfunction initGrammar(grammar, base) {\n    grammar = clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nclass AttributedScopeStack {\n    parent;\n    scopePath;\n    tokenAttributes;\n    static fromExtension(namesScopeList, contentNameScopesList) {\n        let current = namesScopeList;\n        let scopeNames = namesScopeList?.scopePath ?? null;\n        for (const frame of contentNameScopesList) {\n            scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n            current = new AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n        }\n        return current;\n    }\n    static createRoot(scopeName, tokenAttributes) {\n        return new AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n    }\n    static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n        const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n        const scopePath = new ScopeStack(null, scopeName);\n        const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n        const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n        return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n    }\n    get scopeName() { return this.scopePath.scopeName; }\n    /**\n     * Invariant:\n     * ```\n     * if (parent && !scopePath.extends(parent.scopePath)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(parent, scopePath, tokenAttributes) {\n        this.parent = parent;\n        this.scopePath = scopePath;\n        this.tokenAttributes = tokenAttributes;\n    }\n    toString() {\n        return this.getScopeNames().join(' ');\n    }\n    equals(other) {\n        return AttributedScopeStack.equals(this, other);\n    }\n    static equals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        let foreground = 0;\n        let background = 0;\n        if (styleAttributes !== null) {\n            fontStyle = styleAttributes.fontStyle;\n            foreground = styleAttributes.foregroundId;\n            background = styleAttributes.backgroundId;\n        }\n        return EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n    }\n    pushAttributed(scopePath, grammar) {\n        if (scopePath === null) {\n            return this;\n        }\n        if (scopePath.indexOf(' ') === -1) {\n            // This is the common case and much faster\n            return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n        }\n        const scopes = scopePath.split(/ /g);\n        let result = this;\n        for (const scope of scopes) {\n            result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n        }\n        return result;\n    }\n    static _pushAttributed(target, scopeName, grammar) {\n        const rawMetadata = grammar.getMetadataForScope(scopeName);\n        const newPath = target.scopePath.push(scopeName);\n        const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n        const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n        return new AttributedScopeStack(target, newPath, metadata);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let self = this;\n        while (self && self !== base) {\n            result.push({\n                encodedTokenAttributes: self.tokenAttributes,\n                scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null),\n            });\n            self = self.parent;\n        }\n        return self === base ? result.reverse() : undefined;\n    }\n}\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStackImpl {\n    parent;\n    ruleId;\n    beginRuleCapturedEOL;\n    endRule;\n    nameScopesList;\n    contentNameScopesList;\n    _stackElementBrand = undefined;\n    // TODO remove me\n    static NULL = new StateStackImpl(null, 0, 0, 0, false, null, null, null);\n    /**\n     * The position on the current line where this state was pushed.\n     * This is relevant only while tokenizing a line, to detect endless loops.\n     * Its value is meaningless across lines.\n     */\n    _enterPos;\n    /**\n     * The captured anchor position when this stack element was pushed.\n     * This is relevant only while tokenizing a line, to restore the anchor position when popping.\n     * Its value is meaningless across lines.\n     */\n    _anchorPos;\n    /**\n     * The depth of the stack.\n     */\n    depth;\n    /**\n     * Invariant:\n     * ```\n     * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n     * \tthrow new Error();\n     * }\n     * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(\n    /**\n     * The previous state on the stack (or null for the root state).\n     */\n    parent, \n    /**\n     * The state (rule) that this element represents.\n     */\n    ruleId, enterPos, anchorPos, \n    /**\n     * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n     */\n    beginRuleCapturedEOL, \n    /**\n     * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n     */\n    endRule, \n    /**\n     * The list of scopes containing the \"name\" for this state.\n     */\n    nameScopesList, \n    /**\n     * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n     * This list **must** contain as an element `scopeName`.\n     */\n    contentNameScopesList) {\n        this.parent = parent;\n        this.ruleId = ruleId;\n        this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n        this.depth = this.parent ? this.parent.depth + 1 : 1;\n        this._enterPos = enterPos;\n        this._anchorPos = anchorPos;\n    }\n    equals(other) {\n        if (other === null) {\n            return false;\n        }\n        return StateStackImpl._equals(this, other);\n    }\n    static _equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    static _structuralEquals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.depth !== b.depth ||\n                a.ruleId !== b.ruleId ||\n                a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    clone() {\n        return this;\n    }\n    static _reset(el) {\n        while (el) {\n            el._enterPos = -1;\n            el._anchorPos = -1;\n            el = el.parent;\n        }\n    }\n    reset() {\n        StateStackImpl._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    }\n    push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n        return new StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(grammar) {\n        return grammar.getRule(this.ruleId);\n    }\n    toString() {\n        const r = [];\n        this._writeString(r, 0);\n        return \"[\" + r.join(\",\") + \"]\";\n    }\n    _writeString(res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n        return outIndex;\n    }\n    withContentNameScopesList(contentNameScopeStack) {\n        if (this.contentNameScopesList === contentNameScopeStack) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n    }\n    withEndRule(endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n    }\n    // Used to warn of endless loops\n    hasSameRuleAs(other) {\n        let el = this;\n        while (el && el._enterPos === other._enterPos) {\n            if (el.ruleId === other.ruleId) {\n                return true;\n            }\n            el = el.parent;\n        }\n        return false;\n    }\n    toStateStackFrame() {\n        return {\n            ruleId: ruleIdToNumber(this.ruleId),\n            beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n            endRule: this.endRule,\n            nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n            contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? [],\n        };\n    }\n    static pushFrame(self, frame) {\n        const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n        return new StateStackImpl(self, ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));\n    }\n}\nclass BalancedBracketSelectors {\n    balancedBracketScopes;\n    unbalancedBracketScopes;\n    allowAny = false;\n    constructor(balancedBracketScopes, unbalancedBracketScopes) {\n        this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {\n            if (selector === '*') {\n                this.allowAny = true;\n                return [];\n            }\n            return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n        });\n        this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && this.unbalancedBracketScopes.length === 0;\n    }\n    get matchesNever() {\n        return this.balancedBracketScopes.length === 0 && !this.allowAny;\n    }\n    match(scopes) {\n        for (const excluder of this.unbalancedBracketScopes) {\n            if (excluder(scopes)) {\n                return false;\n            }\n        }\n        for (const includer of this.balancedBracketScopes) {\n            if (includer(scopes)) {\n                return true;\n            }\n        }\n        return this.allowAny;\n    }\n}\nclass LineTokens {\n    balancedBracketSelectors;\n    _emitBinaryTokens;\n    /**\n     * defined only if `false`.\n     */\n    _lineText;\n    /**\n     * used only if `_emitBinaryTokens` is false.\n     */\n    _tokens;\n    /**\n     * used only if `_emitBinaryTokens` is true.\n     */\n    _binaryTokens;\n    _lastTokenEndIndex;\n    _tokenTypeOverrides;\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        {\n            this._lineText = null;\n        }\n        this._tokens = [];\n        this._binaryTokens = [];\n        this._lastTokenEndIndex = 0;\n    }\n    produce(stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    }\n    produceFromScopes(scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            let metadata = scopesList?.tokenAttributes ?? 0;\n            let containsBalancedBrackets = false;\n            if (this.balancedBracketSelectors?.matchesAlways) {\n                containsBalancedBrackets = true;\n            }\n            if (this._tokenTypeOverrides.length > 0 || (this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever)) {\n                // Only generate scope array when required to improve performance\n                const scopes = scopesList?.getScopeNames() ?? [];\n                for (const tokenType of this._tokenTypeOverrides) {\n                    if (tokenType.matcher(scopes)) {\n                        metadata = EncodedTokenAttributes.set(metadata, 0, toOptionalTokenType(tokenType.type), null, -1 /* FontStyle.NotSet */, 0, 0);\n                    }\n                }\n                if (this.balancedBracketSelectors) {\n                    containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n                }\n            }\n            if (containsBalancedBrackets) {\n                metadata = EncodedTokenAttributes.set(metadata, 0, 8 /* OptionalStandardTokenType.NotSet */, containsBalancedBrackets, -1 /* FontStyle.NotSet */, 0, 0);\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        const scopes = scopesList?.getScopeNames() ?? [];\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    }\n    getResult(stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    }\n    getBinaryResult(stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        const result = new Uint32Array(this._binaryTokens.length);\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass SyncRegistry {\n    _onigLibPromise;\n    _grammars = new Map();\n    _rawGrammars = new Map();\n    _injectionGrammars = new Map();\n    _theme;\n    constructor(theme, _onigLibPromise) {\n        this._onigLibPromise = _onigLibPromise;\n        this._theme = theme;\n    }\n    dispose() {\n        for (const grammar of this._grammars.values()) {\n            grammar.dispose();\n        }\n    }\n    setTheme(theme) {\n        this._theme = theme;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    addGrammar(grammar, injectionScopeNames) {\n        this._rawGrammars.set(grammar.scopeName, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n        }\n    }\n    /**\n     * Lookup a raw grammar.\n     */\n    lookup(scopeName) {\n        return this._rawGrammars.get(scopeName);\n    }\n    /**\n     * Returns the injections for the given grammar\n     */\n    injections(targetScope) {\n        return this._injectionGrammars.get(targetScope);\n    }\n    /**\n     * Get the default theme settings\n     */\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    /**\n     * Match a scope in the theme.\n     */\n    themeMatch(scopePath) {\n        return this._theme.match(scopePath);\n    }\n    /**\n     * Lookup a grammar.\n     */\n    async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        if (!this._grammars.has(scopeName)) {\n            let rawGrammar = this._rawGrammars.get(scopeName);\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars.set(scopeName, createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(scopeName);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * The registry that will hold all grammars.\n */\nlet Registry$1 = class Registry {\n    _options;\n    _syncRegistry;\n    _ensureGrammarCache;\n    constructor(options) {\n        this._options = options;\n        this._syncRegistry = new SyncRegistry(Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n        this._ensureGrammarCache = new Map();\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    setTheme(theme, colorMap) {\n        this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n    }\n    /**\n     * Returns a lookup array for color ids.\n     */\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n        return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    loadGrammar(initialScopeName) {\n        return this._loadGrammar(initialScopeName, 0, null, null, null);\n    }\n    async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n        while (dependencyProcessor.Q.length > 0) {\n            await Promise.all(dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName)));\n            dependencyProcessor.processQueue();\n        }\n        return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n    async _loadSingleGrammar(scopeName) {\n        if (!this._ensureGrammarCache.has(scopeName)) {\n            this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n        }\n        return this._ensureGrammarCache.get(scopeName);\n    }\n    async _doLoadSingleGrammar(scopeName) {\n        const grammar = await this._options.loadGrammar(scopeName);\n        if (grammar) {\n            const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n            this._syncRegistry.addGrammar(grammar, injections);\n        }\n    }\n    /**\n     * Adds a rawGrammar.\n     */\n    async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n        this._syncRegistry.addGrammar(rawGrammar, injections);\n        return (await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages));\n    }\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n     */\n    _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n};\nconst INITIAL = StateStackImpl.NULL;\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n */\nconst MetadataConsts = {\n    LANGUAGEID_MASK: 0b00000000000000000000000011111111,\n    TOKEN_TYPE_MASK: 0b00000000000000000000001100000000,\n    BALANCED_BRACKETS_MASK: 0b00000000000000000000010000000000,\n    FONT_STYLE_MASK: 0b00000000000000000011100000000000,\n    FOREGROUND_MASK: 0b00000000011111111100000000000000,\n    BACKGROUND_MASK: 0b11111111100000000000000000000000,\n    LANGUAGEID_OFFSET: 0,\n    TOKEN_TYPE_OFFSET: 8,\n    BALANCED_BRACKETS_OFFSET: 10,\n    FONT_STYLE_OFFSET: 11,\n    FOREGROUND_OFFSET: 15,\n    BACKGROUND_OFFSET: 24,\n};\nclass StackElementMetadata {\n    static toBinaryStr(metadata) {\n        let r = metadata.toString(2);\n        while (r.length < 32)\n            r = `0${r}`;\n        return r;\n    }\n    // public static printMetadata(metadata: number): void {\n    //   const languageId = StackElementMetadata.getLanguageId(metadata)\n    //   const tokenType = StackElementMetadata.getTokenType(metadata)\n    //   const fontStyle = StackElementMetadata.getFontStyle(metadata)\n    //   const foreground = StackElementMetadata.getForeground(metadata)\n    //   const background = StackElementMetadata.getBackground(metadata)\n    //   console.log({\n    //     languageId,\n    //     tokenType,\n    //     fontStyle,\n    //     foreground,\n    //     background,\n    //   })\n    // }\n    static getLanguageId(metadata) {\n        return (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n    }\n    static getTokenType(metadata) {\n        return (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n    }\n    static getForeground(metadata) {\n        return (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n    }\n    static getBackground(metadata) {\n        return (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n    }\n    static set(metadata, languageId, tokenType, fontStyle, foreground, background) {\n        let _languageId = StackElementMetadata.getLanguageId(metadata);\n        let _tokenType = StackElementMetadata.getTokenType(metadata);\n        let _fontStyle = StackElementMetadata.getFontStyle(metadata);\n        let _foreground = StackElementMetadata.getForeground(metadata);\n        let _background = StackElementMetadata.getBackground(metadata);\n        const _containsBalancedBracketsBit = StackElementMetadata.containsBalancedBrackets(metadata)\n            ? 1\n            : 0;\n        if (languageId !== 0)\n            _languageId = languageId;\n        if (tokenType !== 0 /* TemporaryStandardTokenType.Other */) {\n            _tokenType\n                = tokenType === 8 /* TemporaryStandardTokenType.MetaEmbedded */ ? 0 /* StandardTokenType.Other */ : tokenType;\n        }\n        if (fontStyle !== FontStyle.NotSet)\n            _fontStyle = fontStyle;\n        if (foreground !== 0)\n            _foreground = foreground;\n        if (background !== 0)\n            _background = background;\n        return (((_languageId << MetadataConsts.LANGUAGEID_OFFSET)\n            | (_tokenType << MetadataConsts.TOKEN_TYPE_OFFSET)\n            | (_fontStyle << MetadataConsts.FONT_STYLE_OFFSET)\n            | (_containsBalancedBracketsBit << MetadataConsts.BALANCED_BRACKETS_OFFSET)\n            | (_foreground << MetadataConsts.FOREGROUND_OFFSET)\n            | (_background << MetadataConsts.BACKGROUND_OFFSET))\n            >>> 0);\n    }\n}\n\n/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nconst htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n];\n\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nclass Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property;\n    this.normal = normal;\n    if (space) {\n      this.space = space;\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  let index = -1;\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n\n  return new Schema(property, normal, space)\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n\nclass Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property;\n    /** @type {string} */\n    this.attribute = attribute;\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;\n\nlet powers = 0;\n\nconst boolean = increment();\nconst booleanish = increment();\nconst overloadedBoolean = increment();\nconst number = increment();\nconst spaceSeparated = increment();\nconst commaSeparated = increment();\nconst commaOrSpaceSeparated = increment();\n\nfunction increment() {\n  return 2 ** ++powers\n}\n\nvar types = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  boolean: boolean,\n  booleanish: booleanish,\n  commaOrSpaceSeparated: commaOrSpaceSeparated,\n  commaSeparated: commaSeparated,\n  number: number,\n  overloadedBoolean: overloadedBoolean,\n  spaceSeparated: spaceSeparated\n});\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types);\n\nclass DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1;\n\n    super(property, attribute);\n\n    mark(this, 'space', space);\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index];\n        mark(this, checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\n\nconst own$3 = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nfunction create(definition) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  /** @type {string} */\n  let prop;\n\n  for (prop in definition.properties) {\n    if (own$3.call(definition.properties, prop)) {\n      const value = definition.properties[prop];\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      );\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true;\n      }\n\n      property[prop] = info;\n\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n\nconst xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\n\nconst xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n});\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n\nconst xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n});\n\nconst aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\n\nconst html$3 = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});\n\nconst svg$1 = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});\n\n/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\n\nconst valid = /^data[-\\w.:]+$/i;\nconst dash = /-[a-z]/g;\nconst cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nfunction find(schema, value) {\n  const normal = normalize(value);\n  let prop = value;\n  let Type = Info;\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4);\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab);\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n\n        value = 'data' + dashes;\n      }\n    }\n\n    Type = DefinedInfo;\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nconst html$2 = merge([xml, xlink, xmlns, aria, html$3], 'html');\nconst svg = merge([xml, xlink, xmlns, aria, svg$1], 'svg');\n\n/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own$2 = {}.hasOwnProperty;\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nfunction zwitch(key, options) {\n  const settings = options || {};\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid;\n    const handlers = one.handlers;\n\n    if (value && own$2.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key]);\n      // @ts-expect-error Indexable.\n      fn = own$2.call(handlers, id) ? handlers[id] : one.unknown;\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n\n  // @ts-expect-error: matches!\n  return one\n}\n\n/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nfunction core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  );\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = [];\n  let index = -1;\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'));\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nconst characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n];\n\n/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nconst characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n};\n\n/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nconst dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n];\n\nconst own$1 = {}.hasOwnProperty;\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {};\n\n/** @type {string} */\nlet key;\n\nfor (key in characterEntitiesHtml4) {\n  if (own$1.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key;\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nfunction toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code);\n\n  if (own$1.call(characters, character)) {\n    const name = characters[character];\n    const value = '&' + name;\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n\n/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nfunction formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);\n  /** @type {string|undefined} */\n  let named;\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    );\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons);\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal;\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n\n/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nfunction stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n\n/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n\n/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nfunction ccount(value, character) {\n  const source = String(value);\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0;\n  let index = source.indexOf(character);\n\n  while (index !== -1) {\n    count++;\n    index = source.indexOf(character, index + character.length);\n  }\n\n  return count\n}\n\n/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nfunction stringify$1(values, options) {\n  const settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values;\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nfunction stringify(values) {\n  return values.join(' ').trim()\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g;\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nfunction whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\n\nconst siblingAfter = siblings(1);\nconst siblingBefore = siblings(-1);\n\n/** @type {Array<RootContent>} */\nconst emptyChildren$1 = [];\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren$1;\n    let offset = (index || 0) + increment;\n    let next = siblings[offset];\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nfunction omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n\nconst closing = omission({\n  body: body$1,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html: html$1,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody: tbody$1,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n});\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true);\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n\nconst opening = omission({\n  body,\n  colgroup,\n  head,\n  html: html$4,\n  tbody\n});\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html$4(node) {\n  const head = siblingAfter(node, -1);\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children;\n  /** @type {Array<string>} */\n  const seen = [];\n  let index = -1;\n\n  while (++index < children.length) {\n    const child = children[index];\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName);\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true);\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1, true);\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1);\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n};\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction element(node, index, parent, state) {\n  const schema = state.schema;\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags;\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase());\n  /** @type {Array<string>} */\n  const parts = [];\n  /** @type {string} */\n  let last;\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg;\n  }\n\n  const attrs = serializeAttributes(state, node.properties);\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  );\n\n  state.schema = schema;\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false;\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '');\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1);\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ');\n      }\n\n      parts.push('/');\n    }\n\n    parts.push('>');\n  }\n\n  parts.push(content);\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>');\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = [];\n  let index = -1;\n  /** @type {string} */\n  let key;\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== null && props[key] !== undefined) {\n        const value = serializeAttribute(state, key, props[key]);\n        if (value) values.push(value);\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined;\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' ';\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key);\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1;\n  const y = state.settings.allowDangerousCharacters ? 0 : 1;\n  let quote = state.quote;\n  /** @type {string | undefined} */\n  let result;\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true;\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value);\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  );\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? stringify$1 : stringify)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value);\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    );\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative;\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote;\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction root(node, _1, _2, state) {\n  return state.all(node)\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nconst handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n});\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_);\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {};\n\n/** @type {Array<never>} */\nconst emptyChildren = [];\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nfunction toHtml(tree, options) {\n  const options_ = options || emptyOptions;\n  const quote = options_.quote || '\"';\n  const alternative = quote === '\"' ? \"'\" : '\"';\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html$2,\n    quote,\n    alternative\n  };\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nfunction all(parent) {\n  /** @type {Array<string>} */\n  const results = [];\n  const children = (parent && parent.children) || emptyChildren;\n  let index = -1;\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent);\n  }\n\n  return results.join('')\n}\n\nfunction isPlaintext(lang) {\n    return !lang || ['plaintext', 'txt', 'text', 'plain'].includes(lang);\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B[\", position);\n  if (nextEscape !== -1) {\n    const nextClose = value.indexOf(\"m\", nextEscape);\n    return {\n      sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n      startPosition: nextEscape,\n      position: nextClose + 1\n    };\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence, index) {\n  let offset = 1;\n  const colorMode = sequence[index + offset++];\n  let color;\n  if (colorMode === \"2\") {\n    const rgb = [\n      sequence[index + offset++],\n      sequence[index + offset++],\n      sequence[index + offset]\n    ].map((x) => Number.parseInt(x));\n    if (rgb.length === 3 && !rgb.some((x) => Number.isNaN(x))) {\n      color = {\n        type: \"rgb\",\n        rgb\n      };\n    }\n  } else if (colorMode === \"5\") {\n    const colorIndex = Number.parseInt(sequence[index + offset]);\n    if (!Number.isNaN(colorIndex)) {\n      color = { type: \"table\", index: Number(colorIndex) };\n    }\n  }\n  return [offset, color];\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  for (let i = 0; i < sequence.length; i++) {\n    const code = sequence[i];\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n    const colorReplacements = {\n        ...theme.colorReplacements,\n        ...options?.colorReplacements,\n    };\n    const lines = fileContents.split(/\\r?\\n/);\n    const colorPalette = createColorPalette(Object.fromEntries(namedColors.map(name => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`],\n    ])));\n    const parser = createAnsiSequenceParser();\n    return lines.map(line => parser.parse(line).map((token) => {\n        let color;\n        if (token.decorations.has('reverse'))\n            color = token.background ? colorPalette.value(token.background) : theme.bg;\n        else\n            color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        color = applyColorReplacements(color, colorReplacements);\n        if (token.decorations.has('dim'))\n            color = dimColor(color);\n        let fontStyle = FontStyle.None;\n        if (token.decorations.has('bold'))\n            fontStyle |= FontStyle.Bold;\n        if (token.decorations.has('italic'))\n            fontStyle |= FontStyle.Italic;\n        if (token.decorations.has('underline'))\n            fontStyle |= FontStyle.Underline;\n        return {\n            content: token.value,\n            color,\n            fontStyle,\n        };\n    }));\n}\n/**\n * Adds 50% alpha to a hex color string or the \"-dim\" postfix to a CSS variable\n */\nfunction dimColor(color) {\n    const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n    if (hexMatch) {\n        if (hexMatch[3]) {\n            // convert from #rrggbbaa to #rrggbb(aa/2)\n            const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2)\n                .toString(16)\n                .padStart(2, '0');\n            return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n        }\n        else if (hexMatch[2]) {\n            // convert from #rrggbb to #rrggbb80\n            return `#${hexMatch[1]}${hexMatch[2]}80`;\n        }\n        else {\n            // convert from #rgb to #rrggbb80\n            return `#${Array.from(hexMatch[1])\n                .map(x => `${x}${x}`)\n                .join('')}80`;\n        }\n    }\n    const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n    if (cssVarMatch)\n        return `var(${cssVarMatch[1]}-dim)`;\n    return color;\n}\n\nfunction codeToThemedTokens(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlaintext(lang)) {\n        const lines = code.split(/\\r\\n|\\r|\\n/);\n        return [...lines.map(line => [{ content: line }])];\n    }\n    const { theme, colorMap } = internal.setTheme(themeName);\n    if (lang === 'ansi')\n        return tokenizeAnsiWithTheme(theme, code, options);\n    const _grammar = internal.getLangGrammar(lang);\n    return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    const colorReplacements = {\n        ...theme.colorReplacements,\n        ...options?.colorReplacements,\n    };\n    const lines = code.split(/\\r\\n|\\r|\\n/);\n    let ruleStack = INITIAL;\n    let actual = [];\n    const final = [];\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const line = lines[i];\n        if (line === '') {\n            actual = [];\n            final.push([]);\n            continue;\n        }\n        let resultWithScopes;\n        let tokensWithScopes;\n        let tokensWithScopesIndex;\n        if (options.includeExplanation) {\n            resultWithScopes = grammar.tokenizeLine(line, ruleStack);\n            tokensWithScopes = resultWithScopes.tokens;\n            tokensWithScopesIndex = 0;\n        }\n        const result = grammar.tokenizeLine2(line, ruleStack);\n        const tokensLength = result.tokens.length / 2;\n        for (let j = 0; j < tokensLength; j++) {\n            const startIndex = result.tokens[2 * j];\n            const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n            if (startIndex === nextStartIndex)\n                continue;\n            const metadata = result.tokens[2 * j + 1];\n            const foreground = StackElementMetadata.getForeground(metadata);\n            const foregroundColor = applyColorReplacements(colorMap[foreground], colorReplacements);\n            const fontStyle = StackElementMetadata.getFontStyle(metadata);\n            const token = {\n                content: line.substring(startIndex, nextStartIndex),\n                color: foregroundColor,\n                fontStyle,\n            };\n            if (options.includeExplanation) {\n                token.explanation = [];\n                let offset = 0;\n                while (startIndex + offset < nextStartIndex) {\n                    const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n                    const tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);\n                    offset += tokenWithScopesText.length;\n                    token.explanation.push({\n                        content: tokenWithScopesText,\n                        scopes: explainThemeScopes(theme, tokenWithScopes.scopes),\n                    });\n                    tokensWithScopesIndex += 1;\n                }\n            }\n            actual.push(token);\n        }\n        final.push(actual);\n        actual = [];\n        ruleStack = result.ruleStack;\n    }\n    return final;\n}\nfunction explainThemeScopes(theme, scopes) {\n    const result = [];\n    for (let i = 0, len = scopes.length; i < len; i++) {\n        const parentScopes = scopes.slice(0, i);\n        const scope = scopes[i];\n        result[i] = {\n            scopeName: scope,\n            themeMatches: explainThemeScope(theme, scope, parentScopes),\n        };\n    }\n    return result;\n}\nfunction matchesOne(selector, scope) {\n    const selectorPrefix = `${selector}.`;\n    if (selector === scope || scope.substring(0, selectorPrefix.length) === selectorPrefix)\n        return true;\n    return false;\n}\nfunction matches(selector, selectorParentScopes, scope, parentScopes) {\n    if (!matchesOne(selector, scope))\n        return false;\n    let selectorParentIndex = selectorParentScopes.length - 1;\n    let parentIndex = parentScopes.length - 1;\n    while (selectorParentIndex >= 0 && parentIndex >= 0) {\n        if (matchesOne(selectorParentScopes[selectorParentIndex], parentScopes[parentIndex]))\n            selectorParentIndex -= 1;\n        parentIndex -= 1;\n    }\n    if (selectorParentIndex === -1)\n        return true;\n    return false;\n}\nfunction explainThemeScope(theme, scope, parentScopes) {\n    const result = [];\n    let resultLen = 0;\n    for (let i = 0, len = theme.settings.length; i < len; i++) {\n        const setting = theme.settings[i];\n        let selectors;\n        if (typeof setting.scope === 'string')\n            selectors = setting.scope.split(/,/).map(scope => scope.trim());\n        else if (Array.isArray(setting.scope))\n            selectors = setting.scope;\n        else\n            continue;\n        for (let j = 0, lenJ = selectors.length; j < lenJ; j++) {\n            const rawSelector = selectors[j];\n            const rawSelectorPieces = rawSelector.split(/ /);\n            const selector = rawSelectorPieces[rawSelectorPieces.length - 1];\n            const selectorParentScopes = rawSelectorPieces.slice(0, rawSelectorPieces.length - 1);\n            if (matches(selector, selectorParentScopes, scope, parentScopes)) {\n                // match!\n                result[resultLen++] = setting;\n                // break the loop\n                j = lenJ;\n            }\n        }\n    }\n    return result;\n}\nfunction applyColorReplacements(color, replacements) {\n    return replacements?.[color.toLowerCase()] || color;\n}\n\n/**\n * Get tokens with multiple themes\n */\nfunction codeToTokensWithThemes(internal, code, options) {\n    const themes = Object.entries(options.themes)\n        .filter(i => i[1])\n        .map(i => ({ color: i[0], theme: i[1] }));\n    const tokens = syncThemesTokenization(...themes.map(t => codeToThemedTokens(internal, code, {\n        ...options,\n        theme: t.theme,\n        includeExplanation: false,\n    })));\n    const mergedTokens = tokens[0]\n        .map((line, lineIdx) => line\n        .map((_token, tokenIdx) => {\n        const mergedToken = {\n            content: _token.content,\n            variants: {},\n        };\n        tokens.forEach((t, themeIdx) => {\n            const { content: _, explanation: __, ...styles } = t[lineIdx][tokenIdx];\n            mergedToken.variants[themes[themeIdx].color] = styles;\n        });\n        return mergedToken;\n    }));\n    return mergedTokens;\n}\n/**\n * Break tokens from multiple themes into same tokenization.\n *\n * For example, given two themes that tokenize `console.log(\"hello\")` as:\n *\n * - `console . log (\" hello \")` (6 tokens)\n * - `console .log ( \"hello\" )` (5 tokens)\n *\n * This function will return:\n *\n * - `console . log ( \" hello \" )` (8 tokens)\n * - `console . log ( \" hello \" )` (8 tokens)\n */\nfunction syncThemesTokenization(...themes) {\n    const outThemes = themes.map(() => []);\n    const count = themes.length;\n    for (let i = 0; i < themes[0].length; i++) {\n        const lines = themes.map(t => t[i]);\n        const outLines = outThemes.map(() => []);\n        outThemes.forEach((t, i) => t.push(outLines[i]));\n        const indexes = lines.map(() => 0);\n        const current = lines.map(l => l[0]);\n        while (current.every(t => t)) {\n            const minLength = Math.min(...current.map(t => t.content.length));\n            for (let n = 0; n < count; n++) {\n                const token = current[n];\n                if (token.content.length === minLength) {\n                    outLines[n].push(token);\n                    indexes[n] += 1;\n                    current[n] = lines[n][indexes[n]];\n                }\n                else {\n                    outLines[n].push({\n                        ...token,\n                        content: token.content.slice(0, minLength),\n                    });\n                    current[n] = {\n                        ...token,\n                        content: token.content.slice(minLength),\n                    };\n                }\n            }\n        }\n    }\n    return outThemes;\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n}) {\n    let input = code;\n    for (const transformer of options.transformers || [])\n        input = transformer.preprocess?.call(transformerContext, input, options) || input;\n    let bg;\n    let fg;\n    let tokens;\n    let themeName;\n    let rootStyle;\n    if ('themes' in options) {\n        const { defaultColor = 'light', cssVariablePrefix = '--shiki-', } = options;\n        const themes = Object.entries(options.themes)\n            .filter(i => i[1])\n            .map(i => ({ color: i[0], theme: i[1] }))\n            .sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n        if (themes.length === 0)\n            throw new Error('[shikiji] `themes` option must not be empty');\n        const themeTokens = codeToTokensWithThemes(internal, input, options);\n        if (defaultColor && !themes.find(t => t.color === defaultColor))\n            throw new Error(`[shikiji] \\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n        const themeRegs = themes.map(t => internal.getTheme(t.theme));\n        const themesOrder = themes.map(t => t.color);\n        tokens = themeTokens\n            .map(line => line.map(token => mergeToken(token, themesOrder, cssVariablePrefix, defaultColor)));\n        fg = themes.map((t, idx) => (idx === 0 && defaultColor ? '' : `${cssVariablePrefix + t.color}:`) + themeRegs[idx].fg).join(';');\n        bg = themes.map((t, idx) => (idx === 0 && defaultColor ? '' : `${cssVariablePrefix + t.color}-bg:`) + themeRegs[idx].bg).join(';');\n        themeName = `shiki-themes ${themeRegs.map(t => t.name).join(' ')}`;\n        rootStyle = defaultColor ? undefined : [fg, bg].join(';');\n    }\n    else if ('theme' in options) {\n        tokens = codeToThemedTokens(internal, input, {\n            ...options,\n            includeExplanation: false,\n        });\n        const _theme = internal.getTheme(options.theme);\n        bg = _theme.bg;\n        fg = _theme.fg;\n        themeName = _theme.name;\n    }\n    else {\n        throw new Error('[shikiji] Invalid options, either `theme` or `themes` must be provided');\n    }\n    return tokensToHast(tokens, {\n        ...options,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    }, transformerContext);\n}\n/**\n *\n */\nfunction mergeToken(merged, variantsOrder, cssVariablePrefix, defaultColor) {\n    const token = {\n        content: merged.content,\n        explanation: merged.explanation,\n    };\n    const styles = variantsOrder.map(t => getTokenStyleObject(merged.variants[t]));\n    // Get all style keys, for themes that missing some style, we put `inherit` to override as needed\n    const styleKeys = new Set(styles.flatMap(t => Object.keys(t)));\n    const mergedStyles = styles.reduce((acc, cur, idx) => {\n        for (const key of styleKeys) {\n            const value = cur[key] || 'inherit';\n            if (idx === 0 && defaultColor) {\n                acc[key] = value;\n            }\n            else {\n                const varKey = cssVariablePrefix + variantsOrder[idx] + (key === 'color' ? '' : `-${key}`);\n                if (acc[key])\n                    acc[key] += `;${varKey}:${value}`;\n                else\n                    acc[key] = `${varKey}:${value}`;\n            }\n        }\n        return acc;\n    }, {});\n    token.htmlStyle = defaultColor\n        ? stringifyTokenStyle(mergedStyles)\n        : Object.values(mergedStyles).join(';');\n    return token;\n}\nfunction tokensToHast(tokens, options, transformerContext) {\n    const { mergeWhitespaces = true, transformers = [], } = options;\n    // TODO: remove this in next major version\n    if (options.transforms) {\n        transformers.push(options.transforms);\n        console.warn('[shikiji] `transforms` option is deprecated, use `transformers` instead');\n    }\n    if (mergeWhitespaces === true)\n        tokens = mergeWhitespaceTokens(tokens);\n    else if (mergeWhitespaces === 'never')\n        tokens = splitWhitespaceTokens(tokens);\n    const lines = [];\n    const tree = {\n        type: 'root',\n        children: [],\n    };\n    let preNode = {\n        type: 'element',\n        tagName: 'pre',\n        properties: {\n            class: `shiki ${options.themeName || ''}`,\n            style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n            tabindex: '0',\n            ...Object.fromEntries(Array.from(Object.entries(options.meta || {}))\n                .filter(([key]) => !key.startsWith('_'))),\n        },\n        children: [],\n    };\n    let codeNode = {\n        type: 'element',\n        tagName: 'code',\n        properties: {},\n        children: lines,\n    };\n    const lineNodes = [];\n    const context = {\n        ...transformerContext,\n        get tokens() {\n            return tokens;\n        },\n        get options() {\n            return options;\n        },\n        get root() {\n            return tree;\n        },\n        get pre() {\n            return preNode;\n        },\n        get code() {\n            return codeNode;\n        },\n        get lines() {\n            return lineNodes;\n        },\n    };\n    tokens.forEach((line, idx) => {\n        if (idx)\n            lines.push({ type: 'text', value: '\\n' });\n        let lineNode = {\n            type: 'element',\n            tagName: 'span',\n            properties: { class: 'line' },\n            children: [],\n        };\n        let col = 0;\n        for (const token of line) {\n            let tokenNode = {\n                type: 'element',\n                tagName: 'span',\n                properties: {},\n                children: [{ type: 'text', value: token.content }],\n            };\n            const style = token.htmlStyle || stringifyTokenStyle(getTokenStyleObject(token));\n            if (style)\n                tokenNode.properties.style = style;\n            for (const transformer of transformers)\n                tokenNode = transformer?.token?.call(context, tokenNode, idx + 1, col, lineNode) || tokenNode;\n            lineNode.children.push(tokenNode);\n            col += token.content.length;\n        }\n        for (const transformer of transformers)\n            lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n        lineNodes.push(lineNode);\n        lines.push(lineNode);\n    });\n    for (const transformer of transformers)\n        codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n    preNode.children.push(codeNode);\n    for (const transformer of transformers)\n        preNode = transformer?.pre?.call(context, preNode) || preNode;\n    tree.children.push(preNode);\n    let result = tree;\n    for (const transformer of transformers)\n        result = transformer?.root?.call(context, result) || result;\n    return result;\n}\nfunction getTokenStyleObject(token) {\n    const styles = {};\n    if (token.color)\n        styles.color = token.color;\n    if (token.fontStyle) {\n        if (token.fontStyle & FontStyle.Italic)\n            styles['font-style'] = 'italic';\n        if (token.fontStyle & FontStyle.Bold)\n            styles['font-weight'] = 'bold';\n        if (token.fontStyle & FontStyle.Underline)\n            styles['text-decoration'] = 'underline';\n    }\n    return styles;\n}\nfunction stringifyTokenStyle(token) {\n    return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(';');\n}\nfunction mergeWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        const newLine = [];\n        let carryOnContent = '';\n        line.forEach((token, idx) => {\n            const isUnderline = token.fontStyle && token.fontStyle & FontStyle.Underline;\n            const couldMerge = !isUnderline;\n            if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n                carryOnContent += token.content;\n            }\n            else {\n                if (carryOnContent) {\n                    if (couldMerge) {\n                        newLine.push({\n                            ...token,\n                            content: carryOnContent + token.content,\n                        });\n                    }\n                    else {\n                        newLine.push({\n                            content: carryOnContent,\n                        }, token);\n                    }\n                    carryOnContent = '';\n                }\n                else {\n                    newLine.push(token);\n                }\n            }\n        });\n        return newLine;\n    });\n}\nfunction splitWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            if (token.content.match(/^\\s+$/))\n                return token;\n            const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n            if (!match)\n                return token;\n            const [, leading, content, trailing] = match;\n            if (!leading && !trailing)\n                return token;\n            const expanded = [{\n                    ...token,\n                    content,\n                }];\n            if (leading)\n                expanded.unshift({ content: leading });\n            if (trailing)\n                expanded.push({ content: trailing });\n            return expanded;\n        });\n    });\n}\n\n/**\n * Get highlighted code in HTML.\n */\nfunction codeToHtml(internal, code, options) {\n    const context = {\n        meta: {},\n        options,\n        codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    };\n    let result = toHtml(codeToHast(internal, code, options, context));\n    for (const transformer of options.transformers || [])\n        result = transformer.postprocess?.call(context, result, options) || result;\n    return result;\n}\n\nasync function main(init) {\n    let wasmMemory;\n    let buffer;\n    const binding = {};\n    function updateGlobalBufferAndViews(buf) {\n        buffer = buf;\n        binding.HEAPU8 = new Uint8Array(buf);\n        binding.HEAPU32 = new Uint32Array(buf);\n    }\n    function _emscripten_get_now() {\n        return typeof performance !== 'undefined' ? performance.now() : Date.now();\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n        binding.HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function getHeapMax() {\n        return 2147483648;\n    }\n    function emscripten_realloc_buffer(size) {\n        try {\n            wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n        }\n        catch (e) { }\n    }\n    function _emscripten_resize_heap(requestedSize) {\n        const oldSize = binding.HEAPU8.length;\n        requestedSize = requestedSize >>> 0;\n        const maxHeapSize = getHeapMax();\n        if (requestedSize > maxHeapSize)\n            return false;\n        const alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\n        for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            const replacement = emscripten_realloc_buffer(newSize);\n            if (replacement)\n                return true;\n        }\n        return false;\n    }\n    const asmLibraryArg = {\n        emscripten_get_now: _emscripten_get_now,\n        emscripten_memcpy_big: _emscripten_memcpy_big,\n        emscripten_resize_heap: _emscripten_resize_heap,\n        fd_write: () => 0,\n    };\n    async function createWasm() {\n        const info = {\n            env: asmLibraryArg,\n            wasi_snapshot_preview1: asmLibraryArg,\n        };\n        const exports = await init(info);\n        wasmMemory = exports.memory;\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        Object.assign(binding, exports);\n    }\n    await createWasm();\n    return binding;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\nlet onigBinding = null;\nlet defaultDebugCall = false;\nfunction throwLastOnigError(onigBinding) {\n    throw new Error(onigBinding.UTF8ToString(onigBinding.getLastOnigError()));\n}\nclass UtfString {\n    static _utf8ByteLength(str) {\n        let result = 0;\n        for (let i = 0, len = str.length; i < len; i++) {\n            const charCode = str.charCodeAt(i);\n            let codepoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i + 1 < len) {\n                    const nextCharCode = str.charCodeAt(i + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codepoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (codepoint <= 0x7F)\n                result += 1;\n            else if (codepoint <= 0x7FF)\n                result += 2;\n            else if (codepoint <= 0xFFFF)\n                result += 3;\n            else\n                result += 4;\n            if (wasSurrogatePair)\n                i++;\n        }\n        return result;\n    }\n    utf16Length;\n    utf8Length;\n    utf16Value;\n    utf8Value;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    constructor(str) {\n        const utf16Length = str.length;\n        const utf8Length = UtfString._utf8ByteLength(str);\n        const computeIndicesMapping = (utf8Length !== utf16Length);\n        const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n        if (computeIndicesMapping)\n            utf16OffsetToUtf8[utf16Length] = utf8Length;\n        const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n        if (computeIndicesMapping)\n            utf8OffsetToUtf16[utf8Length] = utf16Length;\n        const utf8Value = new Uint8Array(utf8Length);\n        let i8 = 0;\n        for (let i16 = 0; i16 < utf16Length; i16++) {\n            const charCode = str.charCodeAt(i16);\n            let codePoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i16 + 1 < utf16Length) {\n                    const nextCharCode = str.charCodeAt(i16 + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codePoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (computeIndicesMapping) {\n                utf16OffsetToUtf8[i16] = i8;\n                if (wasSurrogatePair)\n                    utf16OffsetToUtf8[i16 + 1] = i8;\n                if (codePoint <= 0x7F) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                }\n                else if (codePoint <= 0x7FF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                }\n                else if (codePoint <= 0xFFFF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                }\n                else {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                    utf8OffsetToUtf16[i8 + 3] = i16;\n                }\n            }\n            if (codePoint <= 0x7F) {\n                utf8Value[i8++] = codePoint;\n            }\n            else if (codePoint <= 0x7FF) {\n                utf8Value[i8++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else if (codePoint <= 0xFFFF) {\n                utf8Value[i8++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else {\n                utf8Value[i8++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            if (wasSurrogatePair)\n                i16++;\n        }\n        this.utf16Length = utf16Length;\n        this.utf8Length = utf8Length;\n        this.utf16Value = str;\n        this.utf8Value = utf8Value;\n        this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n    }\n    createString(onigBinding) {\n        const result = onigBinding.omalloc(this.utf8Length);\n        onigBinding.HEAPU8.set(this.utf8Value, result);\n        return result;\n    }\n}\nclass OnigString {\n    static LAST_ID = 0;\n    static _sharedPtr = 0; // a pointer to a string of 10000 bytes\n    static _sharedPtrInUse = false;\n    id = (++OnigString.LAST_ID);\n    _onigBinding;\n    content;\n    utf16Length;\n    utf8Length;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    ptr;\n    constructor(str) {\n        if (!onigBinding)\n            throw new Error('Must invoke loadWasm first.');\n        this._onigBinding = onigBinding;\n        this.content = str;\n        const utfString = new UtfString(str);\n        this.utf16Length = utfString.utf16Length;\n        this.utf8Length = utfString.utf8Length;\n        this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n        if (this.utf8Length < 10000 && !OnigString._sharedPtrInUse) {\n            if (!OnigString._sharedPtr)\n                OnigString._sharedPtr = onigBinding.omalloc(10000);\n            OnigString._sharedPtrInUse = true;\n            onigBinding.HEAPU8.set(utfString.utf8Value, OnigString._sharedPtr);\n            this.ptr = OnigString._sharedPtr;\n        }\n        else {\n            this.ptr = utfString.createString(onigBinding);\n        }\n    }\n    convertUtf8OffsetToUtf16(utf8Offset) {\n        if (this.utf8OffsetToUtf16) {\n            if (utf8Offset < 0)\n                return 0;\n            if (utf8Offset > this.utf8Length)\n                return this.utf16Length;\n            return this.utf8OffsetToUtf16[utf8Offset];\n        }\n        return utf8Offset;\n    }\n    convertUtf16OffsetToUtf8(utf16Offset) {\n        if (this.utf16OffsetToUtf8) {\n            if (utf16Offset < 0)\n                return 0;\n            if (utf16Offset > this.utf16Length)\n                return this.utf8Length;\n            return this.utf16OffsetToUtf8[utf16Offset];\n        }\n        return utf16Offset;\n    }\n    dispose() {\n        if (this.ptr === OnigString._sharedPtr)\n            OnigString._sharedPtrInUse = false;\n        else\n            this._onigBinding.ofree(this.ptr);\n    }\n}\nclass OnigScanner {\n    _onigBinding;\n    _ptr;\n    constructor(patterns) {\n        if (!onigBinding)\n            throw new Error('Must invoke loadWasm first.');\n        const strPtrsArr = [];\n        const strLenArr = [];\n        for (let i = 0, len = patterns.length; i < len; i++) {\n            const utfString = new UtfString(patterns[i]);\n            strPtrsArr[i] = utfString.createString(onigBinding);\n            strLenArr[i] = utfString.utf8Length;\n        }\n        const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n        const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n        const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n        for (let i = 0, len = patterns.length; i < len; i++)\n            onigBinding.ofree(strPtrsArr[i]);\n        onigBinding.ofree(strLenPtr);\n        onigBinding.ofree(strPtrsPtr);\n        if (scannerPtr === 0)\n            throwLastOnigError(onigBinding);\n        this._onigBinding = onigBinding;\n        this._ptr = scannerPtr;\n    }\n    dispose() {\n        this._onigBinding.freeOnigScanner(this._ptr);\n    }\n    findNextMatchSync(string, startPosition, arg) {\n        let debugCall = defaultDebugCall;\n        let options = 0 /* FindOption.None */;\n        if (typeof arg === 'number') {\n            if (arg & 8 /* FindOption.DebugCall */)\n                debugCall = true;\n            options = arg;\n        }\n        else if (typeof arg === 'boolean') {\n            debugCall = arg;\n        }\n        if (typeof string === 'string') {\n            string = new OnigString(string);\n            const result = this._findNextMatchSync(string, startPosition, debugCall, options);\n            string.dispose();\n            return result;\n        }\n        return this._findNextMatchSync(string, startPosition, debugCall, options);\n    }\n    _findNextMatchSync(string, startPosition, debugCall, options) {\n        const onigBinding = this._onigBinding;\n        let resultPtr;\n        if (debugCall)\n            resultPtr = onigBinding.findNextOnigScannerMatchDbg(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        else\n            resultPtr = onigBinding.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        if (resultPtr === 0) {\n            // no match\n            return null;\n        }\n        const HEAPU32 = onigBinding.HEAPU32;\n        let offset = resultPtr / 4; // byte offset -> uint32 offset\n        const index = HEAPU32[offset++];\n        const count = HEAPU32[offset++];\n        const captureIndices = [];\n        for (let i = 0; i < count; i++) {\n            const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            captureIndices[i] = {\n                start: beg,\n                end,\n                length: end - beg,\n            };\n        }\n        return {\n            index,\n            captureIndices,\n        };\n    }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.instantiator === 'function');\n}\nfunction isInstantiatorModule(dataOrOptions) {\n    return (typeof dataOrOptions.default === 'function');\n}\nfunction isDataOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.data !== 'undefined');\n}\nfunction isResponse(dataOrOptions) {\n    return (typeof Response !== 'undefined' && dataOrOptions instanceof Response);\n}\nfunction isArrayBuffer(data) {\n    return (typeof ArrayBuffer !== 'undefined' && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)))\n        // eslint-disable-next-line node/prefer-global/buffer\n        || (typeof Buffer !== 'undefined' && Buffer.isBuffer(data))\n        || (typeof SharedArrayBuffer !== 'undefined' && data instanceof SharedArrayBuffer)\n        || (typeof Uint32Array !== 'undefined' && data instanceof Uint32Array);\n}\nlet initPromise;\nfunction loadWasm(options) {\n    if (initPromise)\n        return initPromise;\n    async function _load() {\n        onigBinding = await main(async (info) => {\n            let instance = options;\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (isInstantiatorOptionsObject(instance)) {\n                instance = await instance.instantiator(info);\n            }\n            else if (isInstantiatorModule(instance)) {\n                instance = await instance.default(info);\n            }\n            else {\n                if (isDataOptionsObject(instance))\n                    instance = instance.data;\n                if (isResponse(instance)) {\n                    if (typeof WebAssembly.instantiateStreaming === 'function')\n                        instance = await _makeResponseStreamingLoader(instance)(info);\n                    else\n                        instance = await _makeResponseNonStreamingLoader(instance)(info);\n                }\n                else if (isArrayBuffer(instance)) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n            }\n            if ('instance' in instance)\n                instance = instance.instance;\n            if ('exports' in instance)\n                instance = instance.exports;\n            return instance;\n        });\n    }\n    initPromise = _load();\n    return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n    return importObject => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n    return importObject => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n    return async (importObject) => {\n        const arrayBuffer = await data.arrayBuffer();\n        return WebAssembly.instantiate(arrayBuffer, importObject);\n    };\n}\nfunction createOnigString(str) {\n    return new OnigString(str);\n}\nfunction createOnigScanner(patterns) {\n    return new OnigScanner(patterns);\n}\n\n/**\n * https://github.com/microsoft/vscode/blob/f7f05dee53fb33fe023db2e06e30a89d3094488f/src/vs/platform/theme/common/colorRegistry.ts#L258-L268\n */\nconst VSCODE_FALLBACK_EDITOR_FG = { light: '#333333', dark: '#bbbbbb' };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: '#fffffe', dark: '#1e1e1e' };\nconst RESOLVED_KEY = '__shiki_resolved';\n/**\n * Normalize a textmate theme to shiki theme\n */\nfunction normalizeTheme(rawTheme) {\n    // @ts-expect-error private field\n    if (rawTheme?.[RESOLVED_KEY])\n        return rawTheme;\n    const theme = {\n        ...rawTheme,\n    };\n    // Fallback settings\n    if (theme.tokenColors && !theme.settings) {\n        theme.settings = theme.tokenColors;\n        delete theme.tokenColors;\n    }\n    theme.type ||= 'dark';\n    theme.colorReplacements = { ...theme.colorReplacements };\n    theme.settings ||= [];\n    // Guess fg/bg colors\n    let { bg, fg } = theme;\n    if (!bg || !fg) {\n        /**\n         * First try:\n         * Theme might contain a global `tokenColor` without `name` or `scope`\n         * Used as default value for foreground/background\n         */\n        const globalSetting = theme.settings\n            ? theme.settings.find((s) => !s.name && !s.scope)\n            : undefined;\n        if (globalSetting?.settings?.foreground)\n            fg = globalSetting.settings.foreground;\n        if (globalSetting?.settings?.background)\n            bg = globalSetting.settings.background;\n        /**\n         * Second try:\n         * If there's no global `tokenColor` without `name` or `scope`\n         * Use `editor.foreground` and `editor.background`\n         */\n        if (!fg && theme?.colors?.['editor.foreground'])\n            fg = theme.colors['editor.foreground'];\n        if (!bg && theme?.colors?.['editor.background'])\n            bg = theme.colors['editor.background'];\n        /**\n         * Last try:\n         * If there's no fg/bg color specified in theme, use default\n         */\n        if (!fg)\n            fg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n        if (!bg)\n            bg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n        theme.fg = fg;\n        theme.bg = bg;\n    }\n    // Push a no-scope setting with fallback colors\n    if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n        theme.settings.unshift({\n            settings: {\n                foreground: theme.fg,\n                background: theme.bg,\n            },\n        });\n    }\n    // Push non-hex colors to color replacements, as `vscode-textmate` doesn't support them\n    let replacementCount = 0;\n    const replacementMap = new Map();\n    function getReplacementColor(value) {\n        if (replacementMap.has(value))\n            return replacementMap.get(value);\n        replacementCount += 1;\n        const hex = `#${replacementCount.toString(16).padStart(8, '0').toLowerCase()}`;\n        if (theme.colorReplacements?.[`#${hex}`]) // already exists\n            return getReplacementColor(value);\n        replacementMap.set(value, hex);\n        return hex;\n    }\n    theme.settings = theme.settings.map((setting) => {\n        const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith('#');\n        const replaceBg = setting.settings?.background && !setting.settings.background.startsWith('#');\n        if (!replaceFg && !replaceBg)\n            return setting;\n        const clone = {\n            ...setting,\n            settings: {\n                ...setting.settings,\n            },\n        };\n        if (replaceFg) {\n            const replacement = getReplacementColor(setting.settings.foreground);\n            theme.colorReplacements[replacement] = setting.settings.foreground;\n            clone.settings.foreground = replacement;\n        }\n        if (replaceBg) {\n            const replacement = getReplacementColor(setting.settings.background);\n            theme.colorReplacements[replacement] = setting.settings.background;\n            clone.settings.background = replacement;\n        }\n        return clone;\n    });\n    for (const key of Object.keys(theme.colors || {})) {\n        // Only patch for known keys\n        if (key === 'editor.foreground' || key === 'editor.background' || key.startsWith('terminal.ansi')) {\n            if (!theme.colors[key]?.startsWith('#')) {\n                const replacement = getReplacementColor(theme.colors[key]);\n                theme.colorReplacements[replacement] = theme.colors[key];\n                theme.colors[key] = replacement;\n            }\n        }\n    }\n    Object.defineProperty(theme, RESOLVED_KEY, {\n        enumerable: false,\n        writable: false,\n        value: true,\n    });\n    return theme;\n}\n\nclass Registry extends Registry$1 {\n    _resolver;\n    _themes;\n    _langs;\n    _resolvedThemes = {};\n    _resolvedGrammars = {};\n    _langMap = {};\n    _langGraph = new Map();\n    alias = {};\n    constructor(_resolver, _themes, _langs) {\n        super(_resolver);\n        this._resolver = _resolver;\n        this._themes = _themes;\n        this._langs = _langs;\n        _themes.forEach(t => this.loadTheme(t));\n        _langs.forEach(l => this.loadLanguage(l));\n    }\n    getTheme(theme) {\n        if (typeof theme === 'string')\n            return this._resolvedThemes[theme];\n        else\n            return this.loadTheme(theme);\n    }\n    loadTheme(theme) {\n        const _theme = normalizeTheme(theme);\n        if (_theme.name)\n            this._resolvedThemes[_theme.name] = _theme;\n        return _theme;\n    }\n    getLoadedThemes() {\n        return Object.keys(this._resolvedThemes);\n    }\n    getGrammar(name) {\n        if (this.alias[name]) {\n            const resolved = new Set([name]);\n            while (this.alias[name]) {\n                name = this.alias[name];\n                if (resolved.has(name))\n                    throw new Error(`[shikiji] Circular alias \\`${Array.from(resolved).join(' -> ')} -> ${name}\\``);\n                resolved.add(name);\n            }\n        }\n        return this._resolvedGrammars[name];\n    }\n    async loadLanguage(lang) {\n        if (this.getGrammar(lang.name))\n            return;\n        const embeddedLazilyBy = new Set(Object.values(this._langMap).filter(i => i.embeddedLangsLazy?.includes(lang.name)));\n        this._resolver.addLanguage(lang);\n        const grammarConfig = {\n            balancedBracketSelectors: lang.balancedBracketSelectors || ['*'],\n            unbalancedBracketSelectors: lang.unbalancedBracketSelectors || [],\n        };\n        // @ts-expect-error Private members, set this to override the previous grammar (that can be a stub)\n        this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n        const g = await this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n        this._resolvedGrammars[lang.name] = g;\n        if (lang.aliases) {\n            lang.aliases.forEach((alias) => {\n                this.alias[alias] = lang.name;\n            });\n        }\n        // If there is a language that embeds this language lazily, we need to reload it\n        if (embeddedLazilyBy.size) {\n            for (const e of embeddedLazilyBy) {\n                delete this._resolvedGrammars[e.name];\n                // @ts-expect-error clear cache\n                this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n                // @ts-expect-error clear cache\n                this._syncRegistry?._grammars?.delete(e.scopeName);\n                await this.loadLanguage(this._langMap[e.name]);\n            }\n        }\n    }\n    async init() {\n        this._themes.map(t => this.loadTheme(t));\n        await this.loadLanguages(this._langs);\n    }\n    async loadLanguages(langs) {\n        for (const lang of langs)\n            this.resolveEmbeddedLanguages(lang);\n        const langsGraphArray = Array.from(this._langGraph.entries());\n        const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n        if (missingLangs.length) {\n            const dependents = langsGraphArray\n                .filter(([_, lang]) => lang && lang.embeddedLangs?.some(l => missingLangs.map(([name]) => name).includes(l)))\n                .filter(lang => !missingLangs.includes(lang));\n            throw new Error(`[shikiji] Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(', ')}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(', ')}`);\n        }\n        for (const [_, lang] of langsGraphArray)\n            this._resolver.addLanguage(lang);\n        for (const [_, lang] of langsGraphArray)\n            await this.loadLanguage(lang);\n    }\n    getLoadedLanguages() {\n        return Object.keys({ ...this._resolvedGrammars, ...this.alias });\n    }\n    resolveEmbeddedLanguages(lang) {\n        this._langMap[lang.name] = lang;\n        this._langGraph.set(lang.name, lang);\n        if (lang.embeddedLangs) {\n            for (const embeddedLang of lang.embeddedLangs)\n                this._langGraph.set(embeddedLang, this._langMap[embeddedLang]);\n        }\n    }\n}\n\nclass Resolver {\n    _langs = new Map();\n    _scopeToLang = new Map();\n    _injections = new Map();\n    _onigLibPromise;\n    constructor(onigLibPromise, langs) {\n        this._onigLibPromise = onigLibPromise;\n        langs.forEach(i => this.addLanguage(i));\n    }\n    get onigLib() {\n        return this._onigLibPromise;\n    }\n    getLangRegistration(langIdOrAlias) {\n        return this._langs.get(langIdOrAlias);\n    }\n    async loadGrammar(scopeName) {\n        return this._scopeToLang.get(scopeName);\n    }\n    addLanguage(l) {\n        this._langs.set(l.name, l);\n        if (l.aliases) {\n            l.aliases.forEach((a) => {\n                this._langs.set(a, l);\n            });\n        }\n        this._scopeToLang.set(l.scopeName, l);\n        if (l.injectTo) {\n            l.injectTo.forEach((i) => {\n                if (!this._injections.get(i))\n                    this._injections.set(i, []);\n                this._injections.get(i).push(l.scopeName);\n            });\n        }\n    }\n    getInjections(scopeName) {\n        const scopeParts = scopeName.split('.');\n        let injections = [];\n        for (let i = 1; i <= scopeParts.length; i++) {\n            const subScopeName = scopeParts.slice(0, i).join('.');\n            injections = [...injections, ...(this._injections.get(subScopeName) || [])];\n        }\n        return injections;\n    }\n}\n\n/**\n * Get the minimal shiki context for rendering.\n */\nasync function getShikiInternal(options = {}) {\n    async function normalizeGetter(p) {\n        return Promise.resolve(typeof p === 'function' ? p() : p).then(r => r.default || r);\n    }\n    async function resolveLangs(langs) {\n        return Array.from(new Set((await Promise.all(langs.map(async (lang) => await normalizeGetter(lang).then(r => Array.isArray(r) ? r : [r])))).flat()));\n    }\n    const [themes, langs,] = await Promise.all([\n        Promise.all((options.themes || []).map(normalizeGetter)).then(r => r.map(normalizeTheme)),\n        resolveLangs(options.langs || []),\n        options.loadWasm ? loadWasm(options.loadWasm) : undefined,\n    ]);\n    const resolver = new Resolver(Promise.resolve({\n        createOnigScanner(patterns) {\n            return createOnigScanner(patterns);\n        },\n        createOnigString(s) {\n            return createOnigString(s);\n        },\n    }), langs);\n    const _registry = new Registry(resolver, themes, langs);\n    Object.assign(_registry.alias, options.langAlias);\n    await _registry.init();\n    let _lastTheme;\n    function getLangGrammar(name) {\n        const _lang = _registry.getGrammar(name);\n        if (!_lang)\n            throw new Error(`[shikiji] Language \\`${name}\\` not found, you may need to load it first`);\n        return _lang;\n    }\n    function getTheme(name) {\n        const _theme = _registry.getTheme(name);\n        if (!_theme)\n            throw new Error(`[shikiji] Theme \\`${name}\\` not found, you may need to load it first`);\n        return _theme;\n    }\n    function setTheme(name) {\n        const theme = getTheme(name);\n        if (_lastTheme !== name) {\n            _registry.setTheme(theme);\n            _lastTheme = name;\n        }\n        const colorMap = _registry.getColorMap();\n        return {\n            theme,\n            colorMap,\n        };\n    }\n    function getLoadedThemes() {\n        return _registry.getLoadedThemes();\n    }\n    function getLoadedLanguages() {\n        return _registry.getLoadedLanguages();\n    }\n    async function loadLanguage(...langs) {\n        await _registry.loadLanguages(await resolveLangs(langs));\n    }\n    async function loadTheme(...themes) {\n        await Promise.all(themes.map(async (theme) => _registry.loadTheme(await normalizeGetter(theme))));\n    }\n    function updateAlias(alias) {\n        Object.assign(_registry.alias, alias);\n    }\n    function getAlias() {\n        return _registry.alias;\n    }\n    return {\n        setTheme,\n        getTheme,\n        getLangGrammar,\n        getLoadedThemes,\n        getLoadedLanguages,\n        getAlias,\n        updateAlias,\n        loadLanguage,\n        loadTheme,\n    };\n}\n\nasync function getHighlighterCore(options = {}) {\n    const internal = await getShikiInternal(options);\n    return {\n        codeToThemedTokens: (code, options) => codeToThemedTokens(internal, code, options),\n        codeToTokensWithThemes: (code, options) => codeToTokensWithThemes(internal, code, options),\n        codeToHast: (code, options) => codeToHast(internal, code, options),\n        codeToHtml: (code, options) => codeToHtml(internal, code, options),\n        loadLanguage: internal.loadLanguage,\n        loadTheme: internal.loadTheme,\n        getTheme: internal.getTheme,\n        getLangGrammar: internal.getLangGrammar,\n        setTheme: internal.setTheme,\n        getLoadedThemes: internal.getLoadedThemes,\n        getLoadedLanguages: internal.getLoadedLanguages,\n        getInternalContext: () => internal,\n    };\n}\n\nlet _onigurumaPromise = null;\nasync function getWasmInlined() {\n    if (!_onigurumaPromise) {\n        // @ts-expect-error anyway\n        _onigurumaPromise = import('./onig-4quf_T-L.js')\n            .then(r => ({ data: r.default }));\n    }\n    return _onigurumaPromise;\n}\n\nfunction textmateThemeToMonacoTheme(theme) {\n  let rules = \"rules\" in theme ? theme.rules : void 0;\n  if (!rules) {\n    rules = [];\n    const themeSettings = theme.settings || theme.tokenColors;\n    for (const { scope, settings } of themeSettings) {\n      const scopes = Array.isArray(scope) ? scope : [scope];\n      for (const s of scopes) {\n        if (settings.foreground && s) {\n          rules.push({\n            token: s,\n            foreground: settings.foreground.replace(\"#\", \"\")\n          });\n        }\n      }\n    }\n  }\n  return {\n    base: theme.type === \"light\" ? \"vs\" : \"vs-dark\",\n    inherit: false,\n    colors: theme.colors || {},\n    rules\n  };\n}\nfunction shikijiToMonaco(highlighter, monaco) {\n  const themeMap = /* @__PURE__ */ new Map();\n  const themeIds = highlighter.getLoadedThemes();\n  for (const themeId of themeIds) {\n    const tmTheme = highlighter.getTheme(themeId);\n    const monacoTheme = textmateThemeToMonacoTheme(tmTheme);\n    themeMap.set(themeId, monacoTheme);\n    monaco.editor.defineTheme(themeId, monacoTheme);\n  }\n  let currentTheme = themeIds[0];\n  const _setTheme = monaco.editor.setTheme.bind(monaco.editor);\n  monaco.editor.setTheme = (theme) => {\n    _setTheme(theme);\n    currentTheme = theme;\n  };\n  for (const lang of highlighter.getLoadedLanguages()) {\n    if (monaco.languages.getLanguages().some((l) => l.id === lang)) {\n      monaco.languages.setTokensProvider(lang, {\n        getInitialState() {\n          return new TokenizerState(INITIAL, highlighter);\n        },\n        tokenize(line, state) {\n          const grammar = state.highlighter.getLangGrammar(lang);\n          const { colorMap } = state.highlighter.setTheme(currentTheme);\n          const theme = themeMap.get(currentTheme);\n          const result = grammar.tokenizeLine2(line, state.ruleStack);\n          const colorToScopeMap = /* @__PURE__ */ new Map();\n          theme.rules.forEach((rule) => {\n            const c = rule.foreground?.replace(\"#\", \"\").toLowerCase();\n            if (c && !colorToScopeMap.has(c))\n              colorToScopeMap.set(c, rule.token);\n          });\n          function findScopeByColor(color) {\n            return colorToScopeMap.get(color);\n          }\n          const tokensLength = result.tokens.length / 2;\n          const tokens = [];\n          for (let j = 0; j < tokensLength; j++) {\n            const startIndex = result.tokens[2 * j];\n            const metadata = result.tokens[2 * j + 1];\n            const color = (colorMap[StackElementMetadata.getForeground(metadata)] || \"\").replace(\"#\", \"\").toLowerCase();\n            const scope = findScopeByColor(color) || \"\";\n            tokens.push({\n              startIndex,\n              scopes: scope\n            });\n          }\n          return {\n            endState: new TokenizerState(result.ruleStack, state.highlighter),\n            tokens\n          };\n        }\n      });\n    }\n  }\n}\nclass TokenizerState {\n  constructor(_ruleStack, highlighter) {\n    this._ruleStack = _ruleStack;\n    this.highlighter = highlighter;\n  }\n  get ruleStack() {\n    return this._ruleStack;\n  }\n  clone() {\n    return new TokenizerState(this._ruleStack, this.highlighter);\n  }\n  equals(other) {\n    if (!other || !(other instanceof TokenizerState) || other !== this || other._ruleStack !== this._ruleStack)\n      return false;\n    return true;\n  }\n}\n\nconst lang$n = Object.freeze({ \"displayName\": \"JavaScript\", \"name\": \"javascript\", \"patterns\": [{ \"include\": \"#directives\" }, { \"include\": \"#statements\" }, { \"include\": \"#shebang\" }], \"repository\": { \"access-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.js\" }, \"after-operator-block-as-object-literal\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[:=(,\\\\[?+!>]|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^yield|[^\\\\._$[:alnum:]]yield|^throw|[^\\\\._$[:alnum:]]throw|^in|[^\\\\._$[:alnum:]]in|^of|[^\\\\._$[:alnum:]]of|^typeof|[^\\\\._$[:alnum:]]typeof|&&|\\\\|\\\\||\\\\*)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"name\": \"meta.objectliteral.js\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"patterns\": [{ \"include\": \"#binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"patterns\": [{ \"include\": \"#binding-element-const\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.js\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.js\" } }, \"name\": \"meta.array.literal.js\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"arrow-function\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.async.js\" }, \"2\": { \"name\": \"variable.parameter.js\" } }, \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?==>)\", \"name\": \"meta.arrow.js\" }, { \"begin\": \"(?x) (?:\\n  (?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\n)? ((?<![})!\\\\]])\\\\s*\\n  (?=\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  )\\n)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.arrow.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#arrow-return-type\" }, { \"include\": \"#possibly-arrow-return-type\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.js\" } }, \"end\": \"((?<=\\\\}|\\\\S)(?<!=>)|((?!\\\\{)(?=\\\\S)))(?!\\\\/[\\\\/\\\\*])\", \"name\": \"meta.arrow.js\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }] }] }, \"arrow-return-type\": { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.return.type.arrow.js\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"arrow-return-type-body\": { \"patterns\": [{ \"begin\": \"(?<=[:])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"async-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(async)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.async.js\" }, \"binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#array-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }] }, \"boolean-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))true(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.true.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))false(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.false.js\" }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"{\", \"end\": \"}|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"cast\": { \"patterns\": [{ \"include\": \"#jsx\" }] }, \"class-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(class)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.js\" }, \"4\": { \"name\": \"storage.type.class.js\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.js\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-declaration-or-expression-patterns\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.js\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"class-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(class)\\\\b(?=\\\\s+|[<{]|\\\\/[\\\\/*])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"storage.type.class.js\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.js\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-or-interface-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#decorator\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#string\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#property-accessor\" }, { \"include\": \"#async-modifier\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-or-interface-heritage\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(extends|implements)\\\\b)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js\" }, \"2\": { \"name\": \"punctuation.accessor.js\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)*\\\\s*)\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.inherited-class.js\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"include\": \"#expressionPunctuations\" }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"name\": \"comment.block.documentation.js\", \"patterns\": [{ \"include\": \"#docblock\" }] }, { \"begin\": \"(/\\\\*)(?:\\\\s*((@)internal)(?=\\\\s|(\\\\*/)))?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.js\" }, \"2\": { \"name\": \"storage.type.internaldeclaration.js\" }, \"3\": { \"name\": \"punctuation.decorator.internaldeclaration.js\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"name\": \"comment.block.js\" }, { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.js\" }, \"2\": { \"name\": \"comment.line.double-slash.js\" }, \"3\": { \"name\": \"punctuation.definition.comment.js\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.js\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.js\" } }, \"contentName\": \"comment.line.double-slash.js\", \"end\": \"(?=$)\" }] }, \"control-statement\": { \"patterns\": [{ \"include\": \"#switch-statement\" }, { \"include\": \"#for-loop\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.trycatch.js\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.loop.js\" }, \"2\": { \"name\": \"entity.name.label.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|goto)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.loop.js\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.js\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.switch.js\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(with)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.with.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(package)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(debugger)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.other.debugger.js\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"name\": \"meta.block.js\", \"patterns\": [{ \"include\": \"#statements\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#decorator\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#function-declaration\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#interface-declaration\" }, { \"include\": \"#enum-declaration\" }, { \"include\": \"#namespace-declaration\" }, { \"include\": \"#type-alias-declaration\" }, { \"include\": \"#import-equals-declaration\" }, { \"include\": \"#import-declaration\" }, { \"include\": \"#export-declaration\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(declare|export)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.js\" }] }, \"decorator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.decorator.js\" } }, \"end\": \"(?=\\\\s)\", \"name\": \"meta.decorator.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"destructuring-const\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.js\", \"patterns\": [{ \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.js\", \"patterns\": [{ \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-parameter\": { \"patterns\": [{ \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"name\": \"meta.parameter.object-binding-pattern.js\", \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, { \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"name\": \"meta.paramter.array-binding-pattern.js\", \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }] }, \"destructuring-parameter-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"variable.parameter.js\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.js\", \"patterns\": [{ \"include\": \"#object-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.js\", \"patterns\": [{ \"include\": \"#array-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-variable-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"meta.definition.variable.js variable.other.readwrite.js\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable-rest-const\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"meta.definition.variable.js variable.other.constant.js\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"directives\": { \"begin\": \"^(///)\\\\s*(?=<(reference|amd-dependency|amd-module)(\\\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\\\s*=\\\\s*((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)))+\\\\s*/>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.js\" } }, \"end\": \"(?=$)\", \"name\": \"comment.line.triple-slash.directive.js\", \"patterns\": [{ \"begin\": \"(<)(reference|amd-dependency|amd-module)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.directive.js\" }, \"2\": { \"name\": \"entity.name.tag.directive.js\" } }, \"end\": \"/>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.directive.js\" } }, \"name\": \"meta.tag.js\", \"patterns\": [{ \"match\": \"path|types|no-default-lib|lib|name|resolution-mode\", \"name\": \"entity.other.attribute-name.directive.js\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.js\" }, { \"include\": \"#string\" }] }] }, \"docblock\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.access-type.jsdoc\" } }, \"match\": \"(?x)\\n((@)(?:access|api))\\n\\\\s+\\n(private|protected|public)\\n\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"5\": { \"name\": \"constant.other.email.link.underline.jsdoc\" }, \"6\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"match\": \"(?x)\\n((@)author)\\n\\\\s+\\n(\\n  [^@\\\\s<>*/]\\n  (?:[^@<>*/]|\\\\*[^/])*\\n)\\n(?:\\n  \\\\s*\\n  (<)\\n  ([^>\\\\s]+)\\n  (>)\\n)?\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"keyword.operator.control.jsdoc\" }, \"5\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)borrows) \\\\s+\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <that namepath>\\n\\\\s+ (as) \\\\s+              # as\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <this namepath>\" }, { \"begin\": \"((@)example)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=@|\\\\*/)\", \"name\": \"meta.example.jsdoc\", \"patterns\": [{ \"match\": \"^\\\\s\\\\*\\\\s+\" }, { \"begin\": \"\\\\G(<)caption(>)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"contentName\": \"constant.other.description.jsdoc\", \"end\": \"(</)caption(>)|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } } }, { \"captures\": { \"0\": { \"name\": \"source.embedded.js\" } }, \"match\": \"[^\\\\s@*](?:[^*]|\\\\*[^/])*\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.symbol-type.jsdoc\" } }, \"match\": \"(?x) ((@)kind) \\\\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"4\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)see)\\n\\\\s+\\n(?:\\n  # URL\\n  (\\n    (?=https?://)\\n    (?:[^\\\\s*]|\\\\*[^/])+\\n  )\\n  |\\n  # JSDoc namepath\\n  (\\n    (?!\\n      # Avoid matching bare URIs (also acceptable as links)\\n      https?://\\n      |\\n      # Avoid matching {@inline tags}; we match those below\\n      (?:\\\\[[^\\\\[\\\\]]*\\\\])? # Possible description [preceding]{@tag}\\n      {@(?:link|linkcode|linkplain|tutorial)\\\\b\\n    )\\n    # Matched namepath\\n    (?:[^@\\\\s*/]|\\\\*[^/])+\\n  )\\n)\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n((@)template)\\n\\\\s+\\n# One or more valid identifiers\\n(\\n  [A-Za-z_$]         # First character: non-numeric word character\\n  [\\\\w$.\\\\[\\\\]]*        # Rest of identifier\\n  (?:                # Possible list of additional identifiers\\n    \\\\s* , \\\\s*\\n    [A-Za-z_$]\\n    [\\\\w$.\\\\[\\\\]]*\\n  )*\\n)\" }, { \"begin\": \"(?x)((@)template)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:arg|argument|const|constant|member|namespace|param|var)\\n)\\n\\\\s+\\n(\\n  [A-Za-z_$]\\n  [\\\\w$.\\\\[\\\\]]*\\n)\" }, { \"begin\": \"((@)typedef)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"(?:[^@\\\\s*/]|\\\\*[^/])+\", \"name\": \"entity.name.type.instance.jsdoc\" }] }, { \"begin\": \"((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.optional-value.begin.bracket.square.jsdoc\" }, \"2\": { \"name\": \"keyword.operator.assignment.jsdoc\" }, \"3\": { \"name\": \"source.embedded.js\" }, \"4\": { \"name\": \"punctuation.definition.optional-value.end.bracket.square.jsdoc\" }, \"5\": { \"name\": \"invalid.illegal.syntax.jsdoc\" } }, \"match\": `(?x)\n(\\\\[)\\\\s*\n[\\\\w$]+\n(?:\n  (?:\\\\[\\\\])?                                        # Foo[ ].bar properties within an array\n  \\\\.                                                # Foo.Bar namespaced parameter\n  [\\\\w$]+\n)*\n(?:\n  \\\\s*\n  (=)                                                # [foo=bar] Default parameter value\n  \\\\s*\n  (\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\n    (?>\n      \"(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!\"))|[^*\\\\\\\\])*?\" |                      # [foo=\"bar\"] Double-quoted\n      '(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!'))|[^*\\\\\\\\])*?' |                      # [foo='bar'] Single-quoted\n      \\\\[ (?:(?:\\\\*(?!/))|[^*])*? \\\\] |                                # [foo=[1,2]] Array literal\n      (?:(?:\\\\*(?!/))|\\\\s(?!\\\\s*\\\\])|\\\\[.*?(?:\\\\]|(?=\\\\*/))|[^*\\\\s\\\\[\\\\]])*   # Everything else\n    )*\n  )\n)?\n\\\\s*(?:(\\\\])((?:[^*\\\\s]|\\\\*[^\\\\s/])+)?|(?=\\\\*/))`, \"name\": \"variable.other.jsdoc\" }] }, { \"begin\": \"(?x)\\n(\\n  (@)\\n  (?:define|enum|exception|export|extends|lends|implements|modifies\\n  |namespace|private|protected|returns?|satisfies|suppress|this|throws|type\\n  |yields?)\\n)\\n\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\\n)\\n\\\\s+\\n(\\n  (?:\\n    [^{}@\\\\s*] | \\\\*[^/]\\n  )+\\n)\" }, { \"begin\": `((@)(?:default(?:value)?|license|version))\\\\s+(([''\"]))`, \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.string.begin.jsdoc\" } }, \"contentName\": \"variable.other.jsdoc\", \"end\": \"(\\\\3)|(?=$|\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.string.end.jsdoc\" } } }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"((@)(?:default(?:value)?|license|tutorial|variation|version))\\\\s+([^\\\\s*]+)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\\\b\", \"name\": \"storage.type.class.jsdoc\" }, { \"include\": \"#inline-tags\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"((@)(?:[_$[:alpha:]][_$[:alnum:]]*))(?=\\\\s+)\" }] }, \"enum-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.js\" }, \"4\": { \"name\": \"storage.type.enum.js\" }, \"5\": { \"name\": \"entity.name.type.enum.js\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.js\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"export-declaration\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"keyword.control.as.js\" }, \"3\": { \"name\": \"storage.type.namespace.js\" }, \"4\": { \"name\": \"entity.name.type.module.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)\\\\s+(as)\\\\s+(namespace)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?(?:(?:\\\\s*(=))|(?:\\\\s+(default)(?=\\\\s+)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"keyword.control.type.js\" }, \"3\": { \"name\": \"keyword.operator.assignment.js\" }, \"4\": { \"name\": \"keyword.control.default.js\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.default.js\", \"patterns\": [{ \"include\": \"#interface-declaration\" }, { \"include\": \"#expression\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?\\\\b(?!(\\\\$)|(\\\\s*:))((?=\\\\s*[\\\\{*])|((?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s|,))(?!\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"keyword.control.type.js\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.js\", \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-inside-possibly-arrow-parens\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.operator.rest.js\" }, \"3\": { \"name\": \"entity.name.function.js variable.language.this.js\" }, \"4\": { \"name\": \"entity.name.function.js\" }, \"5\": { \"name\": \"keyword.operator.optional.js\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.operator.rest.js\" }, \"3\": { \"name\": \"variable.parameter.js variable.language.this.js\" }, \"4\": { \"name\": \"variable.parameter.js\" }, \"5\": { \"name\": \"keyword.operator.optional.js\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*[:,]|$)\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.js\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(await)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.flow.js\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?=\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*\\\\*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.js\" } }, \"end\": \"\\\\*\", \"endCaptures\": { \"0\": { \"name\": \"keyword.generator.asterisk.js\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.js\" }, \"2\": { \"name\": \"keyword.generator.asterisk.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s*(\\\\*))?\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))delete(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.delete.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))in(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.in.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))of(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.of.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.instanceof.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.new.js\" }, { \"include\": \"#typeof-operator\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))void(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.void.js\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.js\" }, \"2\": { \"name\": \"storage.modifier.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*($|[;,:})\\\\]]))\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.js\" }, \"2\": { \"name\": \"keyword.control.satisfies.js\" } }, \"end\": \"(?=^|[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisfies)\\\\s+)|(\\\\s+\\\\<))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.spread.js\" }, { \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.js\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.js\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.js\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.js\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.js\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.js\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.js\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.js\" } }, \"match\": \"(?<=[_$[:alnum:]])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.js\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.js\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.js\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.js\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.js\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.js\" }, { \"begin\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)+(?:(/=)|(?:(/)(?![/*]))))\", \"end\": \"(?:(/=)|(?:(/)(?!\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.js\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.js\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.js\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.js\" } }, \"match\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }] }, \"expressionPunctuations\": { \"patterns\": [{ \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-accessor\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#jsx\" }, { \"include\": \"#string\" }, { \"include\": \"#regex\" }, { \"include\": \"#comment\" }, { \"include\": \"#function-expression\" }, { \"include\": \"#class-expression\" }, { \"include\": \"#arrow-function\" }, { \"include\": \"#paren-expression-possibly-arrow\" }, { \"include\": \"#cast\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#new-expr\" }, { \"include\": \"#instanceof-expr\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#function-call\" }, { \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#paren-expression\" }] }, \"field-declaration\": { \"begin\": \"(?x)(?<!\\\\()(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s+)?(?=\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|\\\\}|$))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" } }, \"end\": \"(?x)(?=\\\\}|;|,|$|(^(?!\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|$))))|(?<=\\\\})\", \"name\": \"meta.field.declaration.js\", \"patterns\": [{ \"include\": \"#variable-initializer\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"meta.definition.property.js entity.name.function.js\" }, \"2\": { \"name\": \"keyword.operator.optional.js\" }, \"3\": { \"name\": \"keyword.operator.definiteassignment.js\" } }, \"match\": \"(?x)(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)(?:(\\\\?)|(\\\\!))?(?=\\\\s*\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"match\": \"\\\\#?[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.property.js variable.object.property.js\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.js\" }, { \"match\": \"\\\\!\", \"name\": \"keyword.operator.definiteassignment.js\" }] }, \"for-loop\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))for(?=((\\\\s+|(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*))await)?\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)?(\\\\())\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.js\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"await\", \"name\": \"keyword.control.loop.js\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#return-type\" }, { \"include\": \"#type-function-return-type\" }, { \"include\": \"#decl-block\" }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.js\" }] }, \"function-call\": { \"patterns\": [{ \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"end\": \"(?<=\\\\))(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"name\": \"meta.function-call.js\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#paren-expression\" }] }, { \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"end\": \"(?<=\\\\>)(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"name\": \"meta.function-call.js\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }] }] }, \"function-call-optionals\": { \"patterns\": [{ \"match\": \"\\\\?\\\\.\", \"name\": \"meta.function-call.js punctuation.accessor.optional.js\" }, { \"match\": \"\\\\!\", \"name\": \"meta.function-call.js keyword.operator.definiteassignment.js\" }] }, \"function-call-target\": { \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.js\" }] }, \"function-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.async.js\" }, \"4\": { \"name\": \"storage.type.function.js\" }, \"5\": { \"name\": \"keyword.generator.asterisk.js\" }, \"6\": { \"name\": \"meta.definition.function.js entity.name.function.js\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|(?<=\\\\})\", \"name\": \"meta.function.js\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#function-body\" }] }, \"function-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" }, \"2\": { \"name\": \"storage.type.function.js\" }, \"3\": { \"name\": \"keyword.generator.asterisk.js\" }, \"4\": { \"name\": \"meta.definition.function.js entity.name.function.js\" } }, \"end\": \"(?=;)|(?<=\\\\})\", \"name\": \"meta.function.expression.js\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#function-body\" }] }, \"function-name\": { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.function.js entity.name.function.js\" }, \"function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.js\" } }, \"name\": \"meta.parameters.js\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#parameter-type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.js\" }] }, \"identifiers\": { \"patterns\": [{ \"include\": \"#object-identifiers\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js\" }, \"3\": { \"name\": \"entity.name.function.js\" } }, \"match\": \"(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js\" }, \"3\": { \"name\": \"variable.other.constant.property.js\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js\" }, \"3\": { \"name\": \"variable.other.property.js\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"match\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\", \"name\": \"variable.other.constant.js\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.js\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\s*(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))\\\\s*(?!\\\\{))\", \"end\": \"(?=;|$|\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.js\" }, \"2\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js\" }, \"2\": { \"name\": \"keyword.other.js\" } }, \"name\": \"string.regexp.js\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"include\": \"#statements\" }] }] }, \"import-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type)(?!\\\\s+from))?(?!\\\\s*[:\\\\(])(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"keyword.control.import.js\" }, \"4\": { \"name\": \"keyword.control.type.js\" } }, \"end\": \"(?<!^import|[^\\\\._$[:alnum:]]import)(?=;|$|^)\", \"name\": \"meta.import.js\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"begin\": `(?<=^import|[^\\\\._$[:alnum:]]import)(?!\\\\s*[\"'])`, \"end\": \"\\\\bfrom\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.from.js\" } }, \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }, { \"include\": \"#import-export-declaration\" }] }, \"import-equals-declaration\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(require)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"keyword.control.import.js\" }, \"4\": { \"name\": \"keyword.control.type.js\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.js\" }, \"6\": { \"name\": \"keyword.operator.assignment.js\" }, \"7\": { \"name\": \"keyword.control.require.js\" }, \"8\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"name\": \"meta.import-equals.external.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(?!require\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"keyword.control.import.js\" }, \"4\": { \"name\": \"keyword.control.type.js\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.js\" }, \"6\": { \"name\": \"keyword.operator.assignment.js\" } }, \"end\": \"(?=;|$|^)\", \"name\": \"meta.import-equals.internal.js\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js\" }, \"2\": { \"name\": \"punctuation.accessor.js\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.readwrite.js\" }] }] }, \"import-export-assert-clause\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(assert)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.assert.js\" }, \"2\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object-literal.key.js\" }, { \"match\": \":\", \"name\": \"punctuation.separator.key-value.js\" }] }, \"import-export-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"name\": \"meta.block.js\", \"patterns\": [{ \"include\": \"#import-export-clause\" }] }, \"import-export-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.js\" }, \"2\": { \"name\": \"keyword.control.default.js\" }, \"3\": { \"name\": \"constant.language.import-export-all.js\" }, \"4\": { \"name\": \"variable.other.readwrite.js\" }, \"5\": { \"name\": \"keyword.control.as.js\" }, \"6\": { \"name\": \"keyword.control.default.js\" }, \"7\": { \"name\": \"variable.other.readwrite.alias.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(?:(\\\\btype)\\\\s+)?(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*)))\\\\s+(as)\\\\s+(?:(default(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|([_$[:alpha:]][_$[:alnum:]]*))\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"\\\\*\", \"name\": \"constant.language.import-export-all.js\" }, { \"match\": \"\\\\b(default)\\\\b\", \"name\": \"keyword.control.default.js\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.js\" }, \"2\": { \"name\": \"variable.other.readwrite.alias.js\" } }, \"match\": \"(?:(\\\\btype)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"import-export-declaration\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#import-export-block\" }, { \"match\": \"\\\\bfrom\\\\b\", \"name\": \"keyword.control.from.js\" }, { \"include\": \"#import-export-assert-clause\" }, { \"include\": \"#import-export-clause\" }] }, \"indexer-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"meta.brace.square.js\" }, \"3\": { \"name\": \"variable.parameter.js\" } }, \"end\": \"(\\\\])\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.js\" }, \"2\": { \"name\": \"keyword.operator.optional.js\" } }, \"name\": \"meta.indexer.declaration.js\", \"patterns\": [{ \"include\": \"#type-annotation\" }] }, \"indexer-mapped-type-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([+-])?(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(in)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.modifier.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"meta.brace.square.js\" }, \"4\": { \"name\": \"entity.name.type.js\" }, \"5\": { \"name\": \"keyword.operator.expression.in.js\" } }, \"end\": \"(\\\\])([+-])?\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.js\" }, \"2\": { \"name\": \"keyword.operator.type.modifier.js\" }, \"3\": { \"name\": \"keyword.operator.optional.js\" } }, \"name\": \"meta.indexer.mappedtype.declaration.js\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.as.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\" }, { \"include\": \"#type\" }] }, \"inline-tags\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.bracket.square.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.square.end.jsdoc\" } }, \"match\": \"(\\\\[)[^\\\\]]+(\\\\])(?={@(?:link|linkcode|linkplain|tutorial))\", \"name\": \"constant.other.description.jsdoc\" }, { \"begin\": \"({)((@)(?:link(?:code|plain)?|tutorial))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" }, \"2\": { \"name\": \"storage.type.class.jsdoc\" }, \"3\": { \"name\": \"punctuation.definition.inline.tag.jsdoc\" } }, \"end\": \"}|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"name\": \"entity.name.type.instance.jsdoc\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?=https?://)(?:[^|}\\\\s*]|\\\\*[/])+)(\\\\|)?\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.description.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?:[^{}@\\\\s|*]|\\\\*[^/])+)(\\\\|)?\" }] }] }, \"instanceof-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(instanceof)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.expression.instanceof.js\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|(===|!==|==|!=)|(([\\\\&\\\\~\\\\^\\\\|]\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s+instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"patterns\": [{ \"include\": \"#type\" }] }, \"interface-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(interface)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.js\" }, \"4\": { \"name\": \"storage.type.interface.js\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.interface.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.interface.js\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"jsdoctype\": { \"patterns\": [{ \"begin\": \"\\\\G({)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" } }, \"contentName\": \"entity.name.type.instance.jsdoc\", \"end\": \"((}))\\\\s*|(?=\\\\*/)\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"jsx\": { \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes-in-expression\" }, { \"include\": \"#jsx-tag-in-expression\" }] }, \"jsx-children\": { \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes\" }, { \"include\": \"#jsx-tag\" }, { \"include\": \"#jsx-evaluated-code\" }, { \"include\": \"#jsx-entities\" }] }, \"jsx-entities\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.js\" }, \"3\": { \"name\": \"punctuation.definition.entity.js\" } }, \"match\": \"(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.js\" }] }, \"jsx-evaluated-code\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.js\" } }, \"contentName\": \"meta.embedded.expression.js\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.js\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"jsx-string-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.js\" } }, \"name\": \"string.quoted.double.js\", \"patterns\": [{ \"include\": \"#jsx-entities\" }] }, \"jsx-string-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.js\" } }, \"name\": \"string.quoted.single.js\", \"patterns\": [{ \"include\": \"#jsx-entities\" }] }, \"jsx-tag\": { \"begin\": \"(?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"end\": \"(/>)|(?:(</)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.js\" }, \"2\": { \"name\": \"punctuation.definition.tag.begin.js\" }, \"3\": { \"name\": \"entity.name.tag.namespace.js\" }, \"4\": { \"name\": \"punctuation.separator.namespace.js\" }, \"5\": { \"name\": \"entity.name.tag.js\" }, \"6\": { \"name\": \"support.class.component.js\" }, \"7\": { \"name\": \"punctuation.definition.tag.end.js\" } }, \"name\": \"meta.tag.js\", \"patterns\": [{ \"begin\": \"(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.js\" }, \"2\": { \"name\": \"entity.name.tag.namespace.js\" }, \"3\": { \"name\": \"punctuation.separator.namespace.js\" }, \"4\": { \"name\": \"entity.name.tag.js\" }, \"5\": { \"name\": \"support.class.component.js\" } }, \"end\": \"(?=[/]?>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#jsx-tag-attributes\" }] }, { \"begin\": \"(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.js\" } }, \"contentName\": \"meta.jsx.children.js\", \"end\": \"(?=</)\", \"patterns\": [{ \"include\": \"#jsx-children\" }] }] }, \"jsx-tag-attribute-assignment\": { \"match\": `=(?=\\\\s*(?:'|\"|{|/\\\\*|//|\\\\n))`, \"name\": \"keyword.operator.assignment.js\" }, \"jsx-tag-attribute-name\": { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.namespace.js\" }, \"2\": { \"name\": \"punctuation.separator.namespace.js\" }, \"3\": { \"name\": \"entity.other.attribute-name.js\" } }, \"match\": \"(?x)\\n  \\\\s*\\n  (?:([_$[:alpha:]][-_$[:alnum:].]*)(:))?\\n  ([_$[:alpha:]][-_$[:alnum:]]*)\\n  (?=\\\\s|=|/?>|/\\\\*|//)\" }, \"jsx-tag-attributes\": { \"begin\": \"\\\\s+\", \"end\": \"(?=[/]?>)\", \"name\": \"meta.tag.attributes.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#jsx-tag-attribute-name\" }, { \"include\": \"#jsx-tag-attribute-assignment\" }, { \"include\": \"#jsx-string-double-quoted\" }, { \"include\": \"#jsx-string-single-quoted\" }, { \"include\": \"#jsx-evaluated-code\" }, { \"include\": \"#jsx-tag-attributes-illegal\" }] }, \"jsx-tag-attributes-illegal\": { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.attribute.js\" }, \"jsx-tag-in-expression\": { \"begin\": \"(?x)\\n  (?<!\\\\+\\\\+|--)(?<=[({\\\\[,?=>:*]|&&|\\\\|\\\\||\\\\?|\\\\*\\\\/|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^yield|[^\\\\._$[:alnum:]]yield|^)\\\\s*\\n  (?!<\\\\s*[_$[:alpha:]][_$[:alnum:]]*((\\\\s+extends\\\\s+[^=>])|,)) # look ahead is not type parameter of arrow\\n  (?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"end\": \"(?!(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"patterns\": [{ \"include\": \"#jsx-tag\" }] }, \"jsx-tag-without-attributes\": { \"begin\": \"(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.js\" }, \"2\": { \"name\": \"entity.name.tag.namespace.js\" }, \"3\": { \"name\": \"punctuation.separator.namespace.js\" }, \"4\": { \"name\": \"entity.name.tag.js\" }, \"5\": { \"name\": \"support.class.component.js\" }, \"6\": { \"name\": \"punctuation.definition.tag.end.js\" } }, \"contentName\": \"meta.jsx.children.js\", \"end\": \"(</)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.js\" }, \"2\": { \"name\": \"entity.name.tag.namespace.js\" }, \"3\": { \"name\": \"punctuation.separator.namespace.js\" }, \"4\": { \"name\": \"entity.name.tag.js\" }, \"5\": { \"name\": \"support.class.component.js\" }, \"6\": { \"name\": \"punctuation.definition.tag.end.js\" } }, \"name\": \"meta.tag.without-attributes.js\", \"patterns\": [{ \"include\": \"#jsx-children\" }] }, \"jsx-tag-without-attributes-in-expression\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[({\\\\[,?=>:*]|&&|\\\\|\\\\||\\\\?|\\\\*\\\\/|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^yield|[^\\\\._$[:alnum:]]yield|^)\\\\s*(?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"end\": \"(?!(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes\" }] }, \"label\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.label.js\" }, \"2\": { \"name\": \"punctuation.separator.label.js\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.js\" }, \"2\": { \"name\": \"punctuation.separator.label.js\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#numeric-literal\" }, { \"include\": \"#boolean-literal\" }, { \"include\": \"#null-literal\" }, { \"include\": \"#undefined-literal\" }, { \"include\": \"#numericConstant-literal\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#this-literal\" }, { \"include\": \"#super-literal\" }] }, \"method-declaration\": { \"patterns\": [{ \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?\\\\s*\\\\b(constructor)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.js\" }, \"4\": { \"name\": \"storage.modifier.async.js\" }, \"5\": { \"name\": \"storage.type.js\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:(?:\\\\s*\\\\b(new)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|(?:(\\\\*)\\\\s*)?)(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.js\" }, \"4\": { \"name\": \"storage.modifier.async.js\" }, \"5\": { \"name\": \"keyword.operator.new.js\" }, \"6\": { \"name\": \"keyword.generator.asterisk.js\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.modifier.js\" }, \"4\": { \"name\": \"storage.modifier.async.js\" }, \"5\": { \"name\": \"storage.type.property.js\" }, \"6\": { \"name\": \"keyword.generator.asterisk.js\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }] }, \"method-declaration-name\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??)\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.method.js entity.name.function.js\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.js\" }] }, \"namespace-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(namespace|module)\\\\s+(?=[_$[:alpha:]\\\"'`]))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.namespace.js\" } }, \"end\": \"(?<=\\\\})|(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.namespace.declaration.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.type.module.js\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#decl-block\" }] }, \"new-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.new.js\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"name\": \"new.expr.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"null-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))null(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.null.js\" }, \"numeric-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.js\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.hex.js\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.js\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.binary.js\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.js\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.octal.js\" }, { \"captures\": { \"0\": { \"name\": \"constant.numeric.decimal.js\" }, \"1\": { \"name\": \"meta.delimiter.decimal.period.js\" }, \"2\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"3\": { \"name\": \"meta.delimiter.decimal.period.js\" }, \"4\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"5\": { \"name\": \"meta.delimiter.decimal.period.js\" }, \"6\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"7\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"8\": { \"name\": \"meta.delimiter.decimal.period.js\" }, \"9\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"10\": { \"name\": \"meta.delimiter.decimal.period.js\" }, \"11\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"12\": { \"name\": \"meta.delimiter.decimal.period.js\" }, \"13\": { \"name\": \"storage.type.numeric.bigint.js\" }, \"14\": { \"name\": \"storage.type.numeric.bigint.js\" } }, \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)\" }] }, \"numericConstant-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))NaN(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.nan.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Infinity(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.infinity.js\" }] }, \"object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element\" }] }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element-const\" }] }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-propertyName\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(:)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.destructuring.js\" } }, \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.object.property.js\" }] }, \"object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"patterns\": [{ \"include\": \"#object-binding-element\" }] }, \"object-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"patterns\": [{ \"include\": \"#object-binding-element-const\" }] }, \"object-identifiers\": { \"patterns\": [{ \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\??\\\\.\\\\s*prototype\\\\b(?!\\\\$))\", \"name\": \"support.class.js\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js\" }, \"3\": { \"name\": \"variable.other.constant.object.property.js\" }, \"4\": { \"name\": \"variable.other.object.property.js\" } }, \"match\": \"(?x)(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(?:\\n  (\\\\#?[[:upper:]][_$[:digit:][:upper:]]*) |\\n  (\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.constant.object.js\" }, \"2\": { \"name\": \"variable.other.object.js\" } }, \"match\": \"(?x)(?:\\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\\n  ([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"name\": \"meta.objectliteral.js\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"object-literal-method-declaration\": { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" }, \"2\": { \"name\": \"storage.type.property.js\" }, \"3\": { \"name\": \"keyword.generator.asterisk.js\" } }, \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" }, \"2\": { \"name\": \"storage.type.property.js\" }, \"3\": { \"name\": \"keyword.generator.asterisk.js\" } }, \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }] }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#object-literal-method-declaration\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\", \"name\": \"meta.object.member.js meta.object-literal.key.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#array-literal\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\s+(as|satisifies)\\\\s+))))\", \"name\": \"meta.object.member.js meta.object-literal.key.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?x)(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as|satisifies\\\\s+))\", \"name\": \"meta.object.member.js meta.object-literal.key.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numeric-literal\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.js\" }, \"1\": { \"name\": \"constant.numeric.decimal.js\" } }, \"match\": \"(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.js\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.js\" }, \"1\": { \"name\": \"entity.name.function.js\" } }, \"match\": \"(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"name\": \"meta.object.member.js\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.js\" } }, \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.js\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.js\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.js\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.js\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.js\" }, \"2\": { \"name\": \"storage.modifier.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.js\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.js\" }, \"2\": { \"name\": \"keyword.control.satisfies.js\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisifies)\\\\s+))\", \"name\": \"meta.object.member.js\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"meta.object-literal.key.js punctuation.separator.key-value.js\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.js\", \"patterns\": [{ \"begin\": \"(?<=:)\\\\s*(async)?(?=\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" }, \"2\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(?=\\\\<\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" } }, \"end\": \"(?<=\\\\>)\", \"patterns\": [{ \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<=\\\\>)\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"include\": \"#possibly-arrow-return-type\" }, { \"include\": \"#expression\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#decl-block\" }] }, \"parameter-array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js\" } }, \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#parameter-array-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.operator.rest.js\" }, \"3\": { \"name\": \"entity.name.function.js variable.language.this.js\" }, \"4\": { \"name\": \"entity.name.function.js\" }, \"5\": { \"name\": \"keyword.operator.optional.js\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.operator.rest.js\" }, \"3\": { \"name\": \"variable.parameter.js variable.language.this.js\" }, \"4\": { \"name\": \"variable.parameter.js\" }, \"5\": { \"name\": \"keyword.operator.optional.js\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameter-object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#parameter-binding-element\" }, { \"include\": \"#paren-expression\" }] }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js\" } }, \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, \"parameter-type-annotation\": { \"patterns\": [{ \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js\" } }, \"end\": \"(?=[,)])|(?==[^>])\", \"name\": \"meta.type.annotation.js\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"paren-expression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"paren-expression-possibly-arrow\": { \"patterns\": [{ \"begin\": \"(?<=[(=,])\\\\s*(async)?(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"begin\": \"(?<=[(=,]|=>|^return|[^\\\\._$[:alnum:]]return)\\\\s*(async)?(?=\\\\s*((((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\()|(<)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)))\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"include\": \"#possibly-arrow-return-type\" }] }, \"paren-expression-possibly-arrow-with-typeparameters\": { \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, \"possibly-arrow-return-type\": { \"begin\": \"(?<=\\\\)|^)\\\\s*(:)(?=\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*=>)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.arrow.js meta.return.type.arrow.js keyword.operator.type.annotation.js\" } }, \"contentName\": \"meta.arrow.js meta.return.type.arrow.js\", \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"property-accessor\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(accessor|get|set)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.type.property.js\" }, \"punctuation-accessor\": { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, \"punctuation-comma\": { \"match\": \",\", \"name\": \"punctuation.separator.comma.js\" }, \"punctuation-semicolon\": { \"match\": \";\", \"name\": \"punctuation.terminator.statement.js\" }, \"qstring-double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js\" }, \"2\": { \"name\": \"invalid.illegal.newline.js\" } }, \"name\": \"string.quoted.double.js\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"qstring-single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js\" }, \"2\": { \"name\": \"invalid.illegal.newline.js\" } }, \"name\": \"string.quoted.single.js\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(?<!\\\\+\\\\+|--|})(?<=[=(:,\\\\[?+!]|^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case|=>|&&|\\\\|\\\\||\\\\*\\\\/)\\\\s*(\\\\/)(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[\\\\()]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\\\]|\\\\(([^\\\\)\\\\\\\\]|\\\\\\\\.)+\\\\))+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js\" }, \"2\": { \"name\": \"keyword.other.js\" } }, \"name\": \"string.regexp.js\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"((?<![_$[:alnum:])\\\\]]|\\\\+\\\\+|--|}|\\\\*\\\\/)|((?<=^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case))\\\\s*)\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js\" }, \"2\": { \"name\": \"keyword.other.js\" } }, \"name\": \"string.regexp.js\", \"patterns\": [{ \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrnvf]|\\\\.\", \"name\": \"constant.other.character-class.regexp\" }, { \"match\": \"\\\\\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})\", \"name\": \"constant.character.numeric.regexp\" }, { \"match\": \"\\\\\\\\c[A-Z]\", \"name\": \"constant.character.control.regexp\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\\\\\[bB]|\\\\^|\\\\$\", \"name\": \"keyword.control.anchor.regexp\" }, { \"captures\": { \"0\": { \"name\": \"keyword.other.back-reference.regexp\" }, \"1\": { \"name\": \"variable.other.regexp\" } }, \"match\": \"\\\\\\\\[1-9]\\\\d*|\\\\\\\\k<([a-zA-Z_$][\\\\w$]*)>\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp\" }, { \"begin\": \"(\\\\()((\\\\?=)|(\\\\?!)|(\\\\?<=)|(\\\\?<!))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" }, \"2\": { \"name\": \"punctuation.definition.group.assertion.regexp\" }, \"3\": { \"name\": \"meta.assertion.look-ahead.regexp\" }, \"4\": { \"name\": \"meta.assertion.negative-look-ahead.regexp\" }, \"5\": { \"name\": \"meta.assertion.look-behind.regexp\" }, \"6\": { \"name\": \"meta.assertion.negative-look-behind.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.assertion.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"\\\\((?:(\\\\?:)|(?:\\\\?<([a-zA-Z_$][\\\\w$]*)>))?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" }, \"1\": { \"name\": \"punctuation.definition.group.no-capture.regexp\" }, \"2\": { \"name\": \"variable.other.regexp\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" } }, \"name\": \"constant.other.character-class.set.regexp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.control.regexp\" }, \"3\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"4\": { \"name\": \"constant.character.numeric.regexp\" }, \"5\": { \"name\": \"constant.character.control.regexp\" }, \"6\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\", \"name\": \"constant.other.character-class.range.regexp\" }, { \"include\": \"#regex-character-class\" }] }, { \"include\": \"#regex-character-class\" }] }, \"return-type\": { \"patterns\": [{ \"begin\": \"(?<=\\\\))\\\\s*(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js\" } }, \"end\": \"(?<![:|&])(?=$|^|[{};,]|//)\", \"name\": \"meta.return.type.js\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js\" } }, \"end\": \"(?<![:|&])((?=[{};,]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.return.type.js\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }] }, \"return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<=[:|&])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"shebang\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.js\" } }, \"match\": \"\\\\A(#!).*(?=$)\", \"name\": \"comment.line.shebang.js\" }, \"single-line-comment-consuming-line-ending\": { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.js\" }, \"2\": { \"name\": \"comment.line.double-slash.js\" }, \"3\": { \"name\": \"punctuation.definition.comment.js\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.js\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.js\" } }, \"contentName\": \"comment.line.double-slash.js\", \"end\": \"(?=^)\" }, \"statements\": { \"patterns\": [{ \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#label\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template\" }] }, \"string-character-escape\": { \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.js\" }, \"super-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))super\\\\b(?!\\\\$)\", \"name\": \"variable.language.super.js\" }, \"support-function-call-identifiers\": { \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#object-identifiers\" }, { \"include\": \"#punctuation-accessor\" }, { \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*[\\\\(]\\\\s*[\\\\\\\"\\\\'\\\\`]))\", \"name\": \"keyword.operator.expression.import.js\" }] }, \"support-objects\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(arguments)\\\\b(?!\\\\$)\", \"name\": \"variable.language.arguments.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(Promise)\\\\b(?!\\\\$)\", \"name\": \"support.class.promise.js\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.import.js\" }, \"2\": { \"name\": \"punctuation.accessor.js\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js\" }, \"4\": { \"name\": \"support.variable.property.importmeta.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(import)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(meta)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.new.js\" }, \"2\": { \"name\": \"punctuation.accessor.js\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js\" }, \"4\": { \"name\": \"support.variable.property.target.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(target)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js\" }, \"3\": { \"name\": \"support.variable.property.js\" }, \"4\": { \"name\": \"support.constant.js\" } }, \"match\": \"(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s* (?:\\n  (?:(constructor|length|prototype|__proto__)\\\\b(?!\\\\$|\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\\\())\\n  |\\n  (?:(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\\\b(?!\\\\$)))\" }, { \"captures\": { \"1\": { \"name\": \"support.type.object.module.js\" }, \"2\": { \"name\": \"support.type.object.module.js\" }, \"3\": { \"name\": \"punctuation.accessor.js\" }, \"4\": { \"name\": \"punctuation.accessor.optional.js\" }, \"5\": { \"name\": \"support.type.object.module.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(exports)|(module)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\\\b(?!\\\\$)\" }] }, \"switch-statement\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bswitch\\\\s*\\\\()\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"name\": \"switch-statement.expr.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(switch)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.js\" }, \"2\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"name\": \"switch-expression.expr.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"(?=\\\\})\", \"name\": \"switch-block.expr.js\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.js\" } }, \"end\": \"(?=:)\", \"name\": \"case-clause.expr.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(:)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"case-clause.expr.js punctuation.definition.section.case-statement.js\" }, \"2\": { \"name\": \"meta.block.js punctuation.definition.block.js\" } }, \"contentName\": \"meta.block.js\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"meta.block.js punctuation.definition.block.js\" } }, \"patterns\": [{ \"include\": \"#statements\" }] }, { \"captures\": { \"0\": { \"name\": \"case-clause.expr.js punctuation.definition.section.case-statement.js\" } }, \"match\": \"(:)\" }, { \"include\": \"#statements\" }] }] }, \"template\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.js\" }, \"2\": { \"name\": \"string.template.js punctuation.definition.string.template.begin.js\" } }, \"contentName\": \"string.template.js\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.js punctuation.definition.string.template.end.js\" } }, \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-call\": { \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"end\": \"(?=`)\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.tagged-template.js\" }] }, { \"include\": \"#type-arguments\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?\\\\s*(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.js\" } }, \"end\": \"(?=`)\", \"patterns\": [{ \"include\": \"#type-arguments\" }] }] }, \"template-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.js\" } }, \"contentName\": \"meta.embedded.line.js\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.js\" } }, \"name\": \"meta.template.expression.js\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"template-type\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.js\" }, \"2\": { \"name\": \"string.template.js punctuation.definition.string.template.begin.js\" } }, \"contentName\": \"string.template.js\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.js punctuation.definition.string.template.end.js\" } }, \"patterns\": [{ \"include\": \"#template-type-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-type-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.js\" } }, \"contentName\": \"meta.embedded.line.js\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.js\" } }, \"name\": \"meta.template.expression.js\", \"patterns\": [{ \"include\": \"#type\" }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.js\" } }, \"end\": \"\\\\s*(:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.js\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"this-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))this\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.js\" }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-builtin-literals\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#type-object\" }, { \"include\": \"#type-operators\" }, { \"include\": \"#type-conditional\" }, { \"include\": \"#type-fn-type-parameters\" }, { \"include\": \"#type-paren-or-function-parameters\" }, { \"include\": \"#type-function-return-type\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\" }, { \"include\": \"#type-name\" }] }, \"type-alias-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(type)\\\\b\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.type.js\" }, \"4\": { \"name\": \"entity.name.type.alias.js\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.type.declaration.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"begin\": \"(=)\\\\s*(intrinsic)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js\" }, \"2\": { \"name\": \"keyword.control.intrinsic.js\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(=)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js\" } }, \"end\": \"(?<![:|&])(?!\\\\s*[|&]\\\\s+)((?=^|[,);\\\\}\\\\]]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.js\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js\" } }, \"end\": \"(?<![:|&])((?=[,);\\\\}\\\\]]|\\\\/\\\\/)|(?==[^>])|(?=^\\\\s*$)|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.js\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-arguments\": { \"begin\": \"\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.begin.js\" } }, \"end\": \"\\\\>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.end.js\" } }, \"name\": \"meta.type.parameters.js\", \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, \"type-arguments-body\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.operator.type.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(_)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"type-builtin-literals\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.builtin.js\" }, \"type-conditional\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" } }, \"end\": \"(?<=:)\", \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.js\" } }, \"end\": \":\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.js\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#type\" }] }] }, \"type-fn-type-parameters\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b(?=\\\\s*\\\\<)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.type.constructor.js storage.modifier.js\" }, \"2\": { \"name\": \"meta.type.constructor.js keyword.control.new.js\" } }, \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.control.new.js\" } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.constructor.js\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }, { \"begin\": \"(?x)(\\n  (?=\\n    [(]\\\\s*(\\n      ([)]) |\\n      (\\\\.\\\\.\\\\.) |\\n      ([_$[:alnum:]]+\\\\s*(\\n        ([:,?=])|\\n        ([)]\\\\s*=>)\\n      ))\\n    )\\n  )\\n)\", \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.function.js\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }] }, \"type-function-return-type\": { \"patterns\": [{ \"begin\": \"(=>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.arrow.js\" } }, \"end\": \"(?<!=>)(?<![|&])(?=[,\\\\]\\\\)\\\\{\\\\}=;>:\\\\?]|//|$)\", \"name\": \"meta.type.function.return.js\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.js\" } }, \"end\": \"(?<!=>)(?<![|&])((?=[,\\\\]\\\\)\\\\{\\\\}=;:\\\\?>]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.type.function.return.js\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }] }, \"type-function-return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<==>)(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"type-infer\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.expression.infer.js\" }, \"2\": { \"name\": \"entity.name.type.js\" }, \"3\": { \"name\": \"keyword.operator.expression.extends.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(infer)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s+(extends)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))?\", \"name\": \"meta.type.infer.js\" }] }, \"type-name\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(<)\", \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js\" }, \"2\": { \"name\": \"punctuation.accessor.js\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js\" }, \"4\": { \"name\": \"meta.type.parameters.js punctuation.definition.typeparameters.begin.js\" } }, \"contentName\": \"meta.type.parameters.js\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.js punctuation.definition.typeparameters.end.js\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.js\" }, \"2\": { \"name\": \"meta.type.parameters.js punctuation.definition.typeparameters.begin.js\" } }, \"contentName\": \"meta.type.parameters.js\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.js punctuation.definition.typeparameters.end.js\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js\" }, \"2\": { \"name\": \"punctuation.accessor.js\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"entity.name.type.js\" }] }, \"type-object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js\" } }, \"name\": \"meta.object.type.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#indexer-mapped-type-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#type-annotation\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.js\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#type\" }] }, \"type-operators\": { \"patterns\": [{ \"include\": \"#typeof-operator\" }, { \"include\": \"#type-infer\" }, { \"begin\": \"([&|])(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.js\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"begin\": \"[&|]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.js\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))keyof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.keyof.js\" }, { \"match\": \"(\\\\?|\\\\:)\", \"name\": \"keyword.operator.ternary.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*\\\\()\", \"name\": \"keyword.operator.expression.import.js\" }] }, \"type-parameters\": { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.begin.js\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.end.js\" } }, \"name\": \"meta.type.parameters.js\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends|in|out|const)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.js\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"(=)(?!>)\", \"name\": \"keyword.operator.assignment.js\" }] }, \"type-paren-or-function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js\" } }, \"name\": \"meta.type.paren.cover.js\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.operator.rest.js\" }, \"3\": { \"name\": \"entity.name.function.js variable.language.this.js\" }, \"4\": { \"name\": \"entity.name.function.js\" }, \"5\": { \"name\": \"keyword.operator.optional.js\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=\\\\s*(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js\" }, \"2\": { \"name\": \"keyword.operator.rest.js\" }, \"3\": { \"name\": \"variable.parameter.js variable.language.this.js\" }, \"4\": { \"name\": \"variable.parameter.js\" }, \"5\": { \"name\": \"keyword.operator.optional.js\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=:)\" }, { \"include\": \"#type-annotation\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.js\" }, { \"include\": \"#type\" }] }, \"type-predicate-operator\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.js\" }, \"2\": { \"name\": \"variable.parameter.js variable.language.this.js\" }, \"3\": { \"name\": \"variable.parameter.js\" }, \"4\": { \"name\": \"keyword.operator.expression.is.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(asserts)\\\\s+)?(?!asserts)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s(is)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.js\" }, \"2\": { \"name\": \"variable.parameter.js variable.language.this.js\" }, \"3\": { \"name\": \"variable.parameter.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(asserts)\\\\s+(?!is)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))asserts(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.type.asserts.js\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))is(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.is.js\" }] }, \"type-primitive\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.js\" }, \"type-string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template-type\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.js\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.js\" } }, \"name\": \"meta.type.tuple.js\", \"patterns\": [{ \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.js\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.js\" }, \"2\": { \"name\": \"keyword.operator.optional.js\" }, \"3\": { \"name\": \"punctuation.separator.label.js\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeof-operator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))typeof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.expression.typeof.js\" } }, \"end\": \"(?=[,);}\\\\]=>:&|{\\\\?]|(extends\\\\s+)|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type-arguments\" }, { \"include\": \"#expression\" }] }, \"undefined-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))undefined(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.undefined.js\" }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^let|[^\\\\._$[:alnum:]]let|^var|[^\\\\._$[:alnum:]]var)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.js\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.js\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.js\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.js\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^const|[^\\\\._$[:alnum:]]const)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.js\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.js\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.js\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.js\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^using|[^\\\\._$[:alnum:]]using|^await\\\\s+using|[^\\\\._$[:alnum:]]await\\\\s+using)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.js\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js\" }, \"2\": { \"name\": \"storage.modifier.js\" }, \"3\": { \"name\": \"storage.type.js\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*((?!\\\\S)|(?=\\\\/\\\\/))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.js\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"var-single-const\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js variable.other.constant.js entity.name.function.js\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js variable.other.constant.js\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js entity.name.function.js\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.js\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js variable.other.constant.js\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.js\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js variable.other.readwrite.js\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.js\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable-type-annotation\": { \"patterns\": [{ \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=)(?=\\\\s*\\\\S)(?!\\\\s*.*=>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js\" } }, \"end\": \"(?=$|^|[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))|(?=^\\\\s*$)|(?<![\\\\|\\\\&\\\\+\\\\-\\\\*\\\\/])(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] } }, \"scopeName\": \"source.js\", \"aliases\": [\"js\"] });\nvar javascript = [\n  lang$n\n];\n\nconst lang$m = Object.freeze({ \"displayName\": \"CSS\", \"name\": \"css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#combinators\" }, { \"include\": \"#selector\" }, { \"include\": \"#at-rules\" }, { \"include\": \"#rule-list\" }], \"repository\": { \"at-rules\": { \"patterns\": [{ \"begin\": \"\\\\A(?:\\\\xEF\\\\xBB\\\\xBF)?(?i:(?=\\\\s*@charset\\\\b))\", \"end\": \";|(?=$)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.at-rule.charset.css\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"invalid.illegal.not-lowercase.charset.css\" }, \"2\": { \"name\": \"invalid.illegal.leading-whitespace.charset.css\" }, \"3\": { \"name\": \"invalid.illegal.no-whitespace.charset.css\" }, \"4\": { \"name\": \"invalid.illegal.whitespace.charset.css\" }, \"5\": { \"name\": \"invalid.illegal.not-double-quoted.charset.css\" }, \"6\": { \"name\": \"invalid.illegal.unclosed-string.charset.css\" }, \"7\": { \"name\": \"invalid.illegal.unexpected-characters.charset.css\" } }, \"match\": '(?x)        # Possible errors:\\n\\\\G\\n((?!@charset)@\\\\w+)   # Not lowercase (@charset is case-sensitive)\\n|\\n\\\\G(\\\\s+)             # Preceding whitespace\\n|\\n(@charset\\\\S[^;]*)    # No whitespace after @charset\\n|\\n(?<=@charset)         # Before quoted charset name\\n(\\\\x20{2,}|\\\\t+)      # More than one space used, or a tab\\n|\\n(?<=@charset\\\\x20)    # Beginning of charset name\\n([^\";]+)              # Not double-quoted\\n|\\n(\"[^\"]+$)             # Unclosed quote\\n|\\n(?<=\")                # After charset name\\n([^;]+)               # Unexpected junk instead of semicolon' }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.charset.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"match\": \"((@)charset)(?=\\\\s)\" }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": '\"|$', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.double.css\", \"patterns\": [{ \"begin\": '(?:\\\\G|^)(?=(?:[^\"])+$)', \"end\": \"$\", \"name\": \"invalid.illegal.unclosed.string.css\" }] }] }, { \"begin\": `(?i)((@)import)(?:\\\\s+|$|(?=['\"]|/\\\\*))`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.import.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.at-rule.import.css\", \"patterns\": [{ \"begin\": \"\\\\G\\\\s*(?=/\\\\*)\", \"end\": \"(?<=\\\\*/)\\\\s*\", \"patterns\": [{ \"include\": \"#comment-block\" }] }, { \"include\": \"#string\" }, { \"include\": \"#url\" }, { \"include\": \"#media-query-list\" }] }, { \"begin\": \"(?i)((@)font-face)(?=\\\\s*|{|/\\\\*|$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.font-face.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?!\\\\G)\", \"name\": \"meta.at-rule.font-face.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#rule-list\" }] }, { \"begin\": \"(?i)(@)page(?=[\\\\s:{]|/\\\\*|$)\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.page.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*($|[:{;]))\", \"name\": \"meta.at-rule.page.css\", \"patterns\": [{ \"include\": \"#rule-list\" }] }, { \"begin\": \"(?i)(?=@media(\\\\s|\\\\(|/\\\\*|$))\", \"end\": \"(?<=})(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)media\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.media.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*[{;])\", \"name\": \"meta.at-rule.media.header.css\", \"patterns\": [{ \"include\": \"#media-query-list\" }] }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.media.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.media.end.bracket.curly.css\" } }, \"name\": \"meta.at-rule.media.body.css\", \"patterns\": [{ \"include\": \"$self\" }] }] }, { \"begin\": `(?i)(?=@counter-style([\\\\s'\"{;]|/\\\\*|$))`, \"end\": \"(?<=})(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)counter-style\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.counter-style.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*{)\", \"name\": \"meta.at-rule.counter-style.header.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.parameter.style-name.css\" }] }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.end.bracket.curly.css\" } }, \"name\": \"meta.at-rule.counter-style.body.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#rule-list-innards\" }] }] }, { \"begin\": `(?i)(?=@document([\\\\s'\"{;]|/\\\\*|$))`, \"end\": \"(?<=})(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)document\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.document.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*[{;])\", \"name\": \"meta.at-rule.document.header.css\", \"patterns\": [{ \"begin\": \"(?i)(?<![\\\\w-])(url-prefix|domain|regexp)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.document-rule.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.document-rule.css\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"match\": `[^'\")\\\\s]+`, \"name\": \"variable.parameter.document-rule.css\" }] }, { \"include\": \"#url\" }, { \"include\": \"#commas\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }] }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.document.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.document.end.bracket.curly.css\" } }, \"name\": \"meta.at-rule.document.body.css\", \"patterns\": [{ \"include\": \"$self\" }] }] }, { \"begin\": `(?i)(?=@(?:-(?:webkit|moz|o|ms)-)?keyframes([\\\\s'\"{;]|/\\\\*|$))`, \"end\": \"(?<=})(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)(?:-(?:webkit|moz|o|ms)-)?keyframes\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.keyframes.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*{)\", \"name\": \"meta.at-rule.keyframes.header.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.parameter.keyframe-list.css\" }] }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.keyframes.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.keyframes.end.bracket.curly.css\" } }, \"name\": \"meta.at-rule.keyframes.body.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.keyframe-offset.css\" }, \"2\": { \"name\": \"entity.other.keyframe-offset.percentage.css\" } }, \"match\": \"(?xi)\\n(?<![\\\\w-]) (from|to) (?![\\\\w-])         # Keywords for 0% | 100%\\n|\\n([-+]?(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)%)     # Percentile value\" }, { \"include\": \"#rule-list\" }] }] }, { \"begin\": \"(?i)(?=@supports(\\\\s|\\\\(|/\\\\*|$))\", \"end\": \"(?<=})(?!\\\\G)|(?=;)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)supports\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.supports.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*[{;])\", \"name\": \"meta.at-rule.supports.header.css\", \"patterns\": [{ \"include\": \"#feature-query-operators\" }, { \"include\": \"#feature-query\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }] }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.supports.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.supports.end.bracket.curly.css\" } }, \"name\": \"meta.at-rule.supports.body.css\", \"patterns\": [{ \"include\": \"$self\" }] }] }, { \"begin\": `(?i)((@)(-(ms|o)-)?viewport)(?=[\\\\s'\"{;]|/\\\\*|$)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.viewport.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*[@{;])\", \"name\": \"meta.at-rule.viewport.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }] }, { \"begin\": `(?i)((@)font-feature-values)(?=[\\\\s'\"{;]|/\\\\*|$)\\\\s*`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.font-feature-values.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"contentName\": \"variable.parameter.font-name.css\", \"end\": \"(?=\\\\s*[@{;])\", \"name\": \"meta.at-rule.font-features.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }] }, { \"include\": \"#font-features\" }, { \"begin\": `(?i)((@)namespace)(?=[\\\\s'\";]|/\\\\*|$)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.namespace.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \";|(?=[@{])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.at-rule.namespace.css\", \"patterns\": [{ \"include\": \"#url\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#comment-block\" }] }, \"2\": { \"name\": \"entity.name.function.namespace-prefix.css\", \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?xi)\\n(?:\\\\G|^|(?<=\\\\s))\\n(?=\\n  (?<=\\\\s|^)                             # Starts with whitespace\\n  (?:[-a-zA-Z_]|[^\\\\x00-\\\\x7F])          # Then a valid identifier character\\n  |\\n  \\\\s*                                   # Possible adjoining whitespace\\n  /\\\\*(?:[^*]|\\\\*[^/])*\\\\*/              # Injected comment\\n)\\n(.*?)                                    # Grouped to embed #comment-block\\n(\\n  (?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n  (?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n    |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n  )*\\n)\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?i)(?=@[\\\\w-]+[^;]+;s*$)\", \"end\": \"(?<=;)(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)[\\\\w-]+\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.at-rule.header.css\" }] }, { \"begin\": \"(?i)(?=@[\\\\w-]+(\\\\s|\\\\(|{|/\\\\*|$))\", \"end\": \"(?<=})(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(?i)\\\\G(@)[\\\\w-]+\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.css\" }, \"1\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?=\\\\s*[{;])\", \"name\": \"meta.at-rule.header.css\" }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.end.bracket.curly.css\" } }, \"name\": \"meta.at-rule.body.css\", \"patterns\": [{ \"include\": \"$self\" }] }] }] }, \"color-keywords\": { \"patterns\": [{ \"match\": \"(?i)(?<![\\\\w-])(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)(?![\\\\w-])\", \"name\": \"support.constant.color.w3c-standard-color-name.css\" }, { \"match\": \"(?xi) (?<![\\\\w-])\\n(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood\\n|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan\\n|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange\\n|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise\\n|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen\\n|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki\\n|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow\\n|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray\\n|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue\\n|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise\\n|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered\\n|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum\\n|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell\\n|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato\\n|transparent|turquoise|violet|wheat|whitesmoke|yellowgreen)\\n(?![\\\\w-])\", \"name\": \"support.constant.color.w3c-extended-color-name.css\" }, { \"match\": \"(?i)(?<![\\\\w-])currentColor(?![\\\\w-])\", \"name\": \"support.constant.color.current.css\" }, { \"match\": \"(?xi) (?<![\\\\w-])\\n(ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow\\n|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption\\n|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow\\n|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText)\\n(?![\\\\w-])\", \"name\": \"invalid.deprecated.color.system.css\" }] }, \"combinators\": { \"patterns\": [{ \"match\": \"/deep/|>>>\", \"name\": \"invalid.deprecated.combinator.css\" }, { \"match\": \">>|>|\\\\+|~\", \"name\": \"keyword.operator.combinator.css\" }] }, \"commas\": { \"match\": \",\", \"name\": \"punctuation.separator.list.comma.css\" }, \"comment-block\": { \"begin\": \"/\\\\*\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.css\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.css\" } }, \"name\": \"comment.block.css\" }, \"escapes\": { \"patterns\": [{ \"match\": \"\\\\\\\\[0-9a-fA-F]{1,6}\", \"name\": \"constant.character.escape.codepoint.css\" }, { \"begin\": \"\\\\\\\\$\\\\s*\", \"end\": \"^(?<!\\\\G)\", \"name\": \"constant.character.escape.newline.css\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.css\" }] }, \"feature-query\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.condition.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.condition.end.bracket.round.css\" } }, \"name\": \"meta.feature-query.css\", \"patterns\": [{ \"include\": \"#feature-query-operators\" }, { \"include\": \"#feature-query\" }] }, \"feature-query-operators\": { \"patterns\": [{ \"match\": \"(?i)(?<=[\\\\s()]|^|\\\\*/)(and|not|or)(?=[\\\\s()]|/\\\\*|$)\", \"name\": \"keyword.operator.logical.feature.$1.css\" }, { \"include\": \"#rule-list-innards\" }] }, \"font-features\": { \"begin\": `(?xi)\n((@)(annotation|character-variant|ornaments|styleset|stylistic|swash))\n(?=[\\\\s@'\"{;]|/\\\\*|$)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.${3:/downcase}.css\" }, \"2\": { \"name\": \"punctuation.definition.keyword.css\" } }, \"end\": \"(?<=})\", \"name\": \"meta.at-rule.${3:/downcase}.css\", \"patterns\": [{ \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.end.bracket.curly.css\" } }, \"name\": \"meta.property-list.font-feature.css\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n(?: [-a-zA-Z_]    | [^\\\\x00-\\\\x7F] )   # First letter\\n(?: [-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]     # Remainder of identifier\\n  | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.font-feature.css\" }, { \"include\": \"#rule-list-innards\" }] }] }, \"functional-pseudo-classes\": { \"patterns\": [{ \"begin\": \"(?i)((:)dir)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"match\": \"(?i)(?<![\\\\w-])(ltr|rtl)(?![\\\\w-])\", \"name\": \"support.constant.text-direction.css\" }, { \"include\": \"#property-values\" }] }, { \"begin\": \"(?i)((:)lang)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"patterns\": [{ \"match\": \"(?<=[(,\\\\s])[a-zA-Z]+(-[a-zA-Z0-9]*|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))*(?=[),\\\\s])\", \"name\": \"support.constant.language-range.css\" }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.double.css\", \"patterns\": [{ \"include\": \"#escapes\" }, { \"match\": '(?<=[\"\\\\s])[a-zA-Z*]+(-[a-zA-Z0-9*]*)*(?=[\"\\\\s])', \"name\": \"support.constant.language-range.css\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.single.css\", \"patterns\": [{ \"include\": \"#escapes\" }, { \"match\": \"(?<=['\\\\s])[a-zA-Z*]+(-[a-zA-Z0-9*]*)*(?=['\\\\s])\", \"name\": \"support.constant.language-range.css\" }] }, { \"include\": \"#commas\" }] }, { \"begin\": \"(?i)((:)(?:not|has|matches|where|is))(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"patterns\": [{ \"include\": \"#selector-innards\" }] }, { \"begin\": \"(?i)((:)nth-(?:last-)?(?:child|of-type))(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"patterns\": [{ \"match\": \"(?i)[+-]?(\\\\d+n?|n)(\\\\s*[+-]\\\\s*\\\\d+)?\", \"name\": \"constant.numeric.css\" }, { \"match\": \"(?i)even|odd\", \"name\": \"support.constant.parity.css\" }] }] }, \"functions\": { \"patterns\": [{ \"begin\": \"(?i)(?<![\\\\w-])(calc)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.calc.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.calc.css\", \"patterns\": [{ \"match\": \"[*/]|(?<=\\\\s|^)[-+](?=\\\\s|$)\", \"name\": \"keyword.operator.arithmetic.css\" }, { \"include\": \"#property-values\" }] }, { \"begin\": \"(?i)(?<![\\\\w-])(rgba?|rgb|hsla?|hsl|hwb|lab|oklab|lch|oklch|color)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.color.css\", \"patterns\": [{ \"include\": \"#property-values\" }] }, { \"begin\": '(?xi) (?<![\\\\w-])\\n(\\n  (?:-webkit-|-moz-|-o-)?    # Accept prefixed/historical variants\\n  (?:repeating-)?            # \"Repeating\"-type gradient\\n  (?:linear|radial|conic)    # Shape\\n  -gradient\\n)\\n(\\\\()', \"beginCaptures\": { \"1\": { \"name\": \"support.function.gradient.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.gradient.css\", \"patterns\": [{ \"match\": \"(?i)(?<![\\\\w-])(from|to|at|in|hue)(?![\\\\w-])\", \"name\": \"keyword.operator.gradient.css\" }, { \"include\": \"#property-values\" }] }, { \"begin\": \"(?i)(?<![\\\\w-])(-webkit-gradient)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"invalid.deprecated.gradient.function.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.gradient.invalid.deprecated.gradient.css\", \"patterns\": [{ \"begin\": \"(?i)(?<![\\\\w-])(from|to|color-stop)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"invalid.deprecated.function.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"patterns\": [{ \"include\": \"#property-values\" }] }, { \"include\": \"#property-values\" }] }, { \"begin\": \"(?xi) (?<![\\\\w-])\\n(annotation|attr|blur|brightness|character-variant|clamp|contrast|counters?\\n|cross-fade|drop-shadow|element|fit-content|format|grayscale|hue-rotate|color-mix\\n|image-set|invert|local|max|min|minmax|opacity|ornaments|repeat|saturate|sepia\\n|styleset|stylistic|swash|symbols\\n|cos|sin|tan|acos|asin|atan|atan2|hypot|sqrt|pow|log|exp|abs|sign)\\n(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.misc.css\", \"patterns\": [{ \"match\": `(?i)(?<=[,\\\\s\"]|\\\\*/|^)\\\\d+x(?=[\\\\s,\"')]|/\\\\*|$)`, \"name\": \"constant.numeric.other.density.css\" }, { \"include\": \"#property-values\" }, { \"match\": `[^'\"),\\\\s]+`, \"name\": \"variable.parameter.misc.css\" }] }, { \"begin\": \"(?i)(?<![\\\\w-])(circle|ellipse|inset|polygon|rect)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.shape.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.shape.css\", \"patterns\": [{ \"match\": \"(?i)(?<=\\\\s|^|\\\\*/)(at|round)(?=\\\\s|/\\\\*|$)\", \"name\": \"keyword.operator.shape.css\" }, { \"include\": \"#property-values\" }] }, { \"begin\": \"(?i)(?<![\\\\w-])(cubic-bezier|steps)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.timing-function.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.timing-function.css\", \"patterns\": [{ \"match\": \"(?i)(?<![\\\\w-])(start|end)(?=\\\\s*\\\\)|$)\", \"name\": \"support.constant.step-direction.css\" }, { \"include\": \"#property-values\" }] }, { \"begin\": \"(?xi) (?<![\\\\w-])\\n( (?:translate|scale|rotate)(?:[XYZ]|3D)?\\n| matrix(?:3D)?\\n| skew[XY]?\\n| perspective\\n)\\n(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.transform.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"patterns\": [{ \"include\": \"#property-values\" }] }, { \"include\": \"#url\" }, { \"begin\": \"(?i)(?<![\\\\w-])(var)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.variable.css\", \"patterns\": [{ \"match\": \"(?x)\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.argument.css\" }, { \"include\": \"#property-values\" }] }] }, \"media-feature-keywords\": { \"match\": \"(?xi)\\n(?<=^|\\\\s|:|\\\\*/)\\n(?: portrait                  # Orientation\\n  | landscape\\n  | progressive               # Scan types\\n  | interlace\\n  | fullscreen                # Display modes\\n  | standalone\\n  | minimal-ui\\n  | browser\\n  | hover\\n)\\n(?=\\\\s|\\\\)|$)\", \"name\": \"support.constant.property-value.css\" }, \"media-features\": { \"captures\": { \"1\": { \"name\": \"support.type.property-name.media.css\" }, \"2\": { \"name\": \"support.type.property-name.media.css\" }, \"3\": { \"name\": \"support.type.vendored.property-name.media.css\" } }, \"match\": \"(?xi)\\n(?<=^|\\\\s|\\\\(|\\\\*/)           # Preceded by whitespace, bracket or comment\\n(?:\\n  # Standardised features\\n  (\\n    (?:min-|max-)?            # Range features\\n    (?: height\\n      | width\\n      | aspect-ratio\\n      | color\\n      | color-index\\n      | monochrome\\n      | resolution\\n    )\\n    | grid                    # Discrete features\\n    | scan\\n    | orientation\\n    | display-mode\\n    | hover\\n  )\\n  |\\n  # Deprecated features\\n  (\\n    (?:min-|max-)?            # Deprecated in Media Queries 4\\n    device-\\n    (?: height\\n      | width\\n      | aspect-ratio\\n    )\\n  )\\n  |\\n  # Vendor extensions\\n  (\\n    (?:\\n      # Spec-compliant syntax\\n      [-_]\\n      (?: webkit              # Webkit/Blink\\n        | apple|khtml         # Webkit aliases\\n        | epub                # ePub3\\n        | moz                 # Gecko\\n        | ms                  # Microsoft\\n        | o                   # Presto (pre-Opera 15)\\n        | xv|ah|rim|atsc|     # Less common vendors\\n          hp|tc|wap|ro\\n      )\\n      |\\n      # Non-standard prefixes\\n      (?: mso                 # Microsoft Office\\n        | prince              # YesLogic\\n      )\\n    )\\n    -\\n    [\\\\w-]+                   # Feature name\\n    (?=                       # Terminates correctly\\n      \\\\s*                    # Possible whitespace\\n      (?:                     # Possible injected comment\\n        /\\\\*\\n        (?:[^*]|\\\\*[^/])*\\n        \\\\*/\\n      )?\\n      \\\\s*\\n      [:)]                    # Ends with a colon or closed bracket\\n    )\\n  )\\n)\\n(?=\\\\s|$|[><:=]|\\\\)|/\\\\*)     # Terminates cleanly\" }, \"media-query\": { \"begin\": \"\\\\G\", \"end\": \"(?=\\\\s*[{;])\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#media-types\" }, { \"match\": \"(?i)(?<=\\\\s|^|,|\\\\*/)(only|not)(?=\\\\s|{|/\\\\*|$)\", \"name\": \"keyword.operator.logical.$1.media.css\" }, { \"match\": \"(?i)(?<=\\\\s|^|\\\\*/|\\\\))and(?=\\\\s|/\\\\*|$)\", \"name\": \"keyword.operator.logical.and.media.css\" }, { \"match\": \",(?:(?:\\\\s*,)+|(?=\\\\s*[;){]))\", \"name\": \"invalid.illegal.comma.css\" }, { \"include\": \"#commas\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.bracket.round.css\" } }, \"patterns\": [{ \"include\": \"#media-features\" }, { \"include\": \"#media-feature-keywords\" }, { \"match\": \":\", \"name\": \"punctuation.separator.key-value.css\" }, { \"match\": \">=|<=|=|<|>\", \"name\": \"keyword.operator.comparison.css\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.css\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.css\" }, \"3\": { \"name\": \"constant.numeric.css\" } }, \"match\": \"(\\\\d+)\\\\s*(/)\\\\s*(\\\\d+)\", \"name\": \"meta.ratio.css\" }, { \"include\": \"#numeric-values\" }, { \"include\": \"#comment-block\" }] }] }, \"media-query-list\": { \"begin\": \"(?=\\\\s*[^{;])\", \"end\": \"(?=\\\\s*[{;])\", \"patterns\": [{ \"include\": \"#media-query\" }] }, \"media-types\": { \"captures\": { \"1\": { \"name\": \"support.constant.media.css\" }, \"2\": { \"name\": \"invalid.deprecated.constant.media.css\" } }, \"match\": \"(?xi)\\n(?<=^|\\\\s|,|\\\\*/)\\n(?:\\n  # Valid media types\\n  (all|print|screen|speech)\\n  |\\n  # Deprecated in Media Queries 4: http://dev.w3.org/csswg/mediaqueries/#media-types\\n  (aural|braille|embossed|handheld|projection|tty|tv)\\n)\\n(?=$|[{,\\\\s;]|/\\\\*)\" }, \"numeric-values\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.css\" } }, \"match\": \"(#)(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\\\\b\", \"name\": \"constant.other.color.rgb-value.hex.css\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.percentage.css\" }, \"2\": { \"name\": \"keyword.other.unit.${2:/downcase}.css\" } }, \"match\": \"(?xi) (?<![\\\\w-])\\n[-+]?                               # Sign indicator\\n\\n(?:                                 # Numerals\\n    [0-9]+ (?:\\\\.[0-9]+)?           # Integer/float with leading digits\\n  | \\\\.[0-9]+                       # Float without leading digits\\n)\\n\\n(?:                                 # Scientific notation\\n  (?<=[0-9])                        # Exponent must follow a digit\\n  E                                 # Exponent indicator\\n  [-+]?                             # Possible sign indicator\\n  [0-9]+                            # Exponent value\\n)?\\n\\n(?:                                 # Possible unit for data-type:\\n  (%)                               # - Percentage\\n  | ( deg|grad|rad|turn             # - Angle\\n    | Hz|kHz                        # - Frequency\\n    | ch|cm|em|ex|fr|in|mm|mozmm|   # - Length\\n      pc|pt|px|q|rem|rch|rex|rlh|\\n      ic|ric|rcap|vh|vw|vb|vi|svh|\\n      svw|svb|svi|dvh|dvw|dvb|dvi|\\n      lvh|lvw|lvb|lvi|vmax|vmin|\\n      cqw|cqi|cqh|cqb|cqmin|cqmax\\n    | dpi|dpcm|dppx                 # - Resolution\\n    | s|ms                          # - Time\\n    )\\n  \\\\b                               # Boundary checking intentionally lax to\\n)?                                  # facilitate embedding in CSS-like grammars\", \"name\": \"constant.numeric.css\" }] }, \"property-keywords\": { \"patterns\": [{ \"match\": \"(?xi) (?<![\\\\w-])\\n(above|absolute|active|add|additive|after-edge|alias|all|all-petite-caps|all-scroll|all-small-caps|alpha|alphabetic|alternate|alternate-reverse\\n|always|antialiased|auto|auto-fill|auto-fit|auto-pos|available|avoid|avoid-column|avoid-page|avoid-region|backwards|balance|baseline|before-edge|below|bevel\\n|bidi-override|blink|block|block-axis|block-start|block-end|bold|bolder|border|border-box|both|bottom|bottom-outside|break-all|break-word|bullets\\n|butt|capitalize|caption|cell|center|central|char|circle|clip|clone|close-quote|closest-corner|closest-side|col-resize|collapse|color|color-burn\\n|color-dodge|column|column-reverse|common-ligatures|compact|condensed|contain|content|content-box|contents|context-menu|contextual|copy|cover\\n|crisp-edges|crispEdges|crosshair|cyclic|dark|darken|dashed|decimal|default|dense|diagonal-fractions|difference|digits|disabled|disc|discretionary-ligatures\\n|distribute|distribute-all-lines|distribute-letter|distribute-space|dot|dotted|double|double-circle|downleft|downright|e-resize|each-line|ease|ease-in\\n|ease-in-out|ease-out|economy|ellipse|ellipsis|embed|end|evenodd|ew-resize|exact|exclude|exclusion|expanded|extends|extra-condensed|extra-expanded\\n|fallback|farthest-corner|farthest-side|fill|fill-available|fill-box|filled|fit-content|fixed|flat|flex|flex-end|flex-start|flip|flow-root|forwards|freeze\\n|from-image|full-width|geometricPrecision|georgian|grab|grabbing|grayscale|grid|groove|hand|hanging|hard-light|help|hidden|hide\\n|historical-forms|historical-ligatures|horizontal|horizontal-tb|hue|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\\n|ideographic|inactive|infinite|inherit|initial|inline|inline-axis|inline-block|inline-end|inline-flex|inline-grid|inline-list-item|inline-start\\n|inline-table|inset|inside|inter-character|inter-ideograph|inter-word|intersect|invert|isolate|isolate-override|italic|jis04|jis78|jis83\\n|jis90|justify|justify-all|kannada|keep-all|landscape|large|larger|left|light|lighten|lighter|line|line-edge|line-through|linear|linearRGB\\n|lining-nums|list-item|local|loose|lowercase|lr|lr-tb|ltr|luminance|luminosity|main-size|mandatory|manipulation|manual|margin-box|match-parent\\n|match-source|mathematical|max-content|medium|menu|message-box|middle|min-content|miter|mixed|move|multiply|n-resize|narrower|ne-resize\\n|nearest-neighbor|nesw-resize|newspaper|no-change|no-clip|no-close-quote|no-common-ligatures|no-contextual|no-discretionary-ligatures\\n|no-drop|no-historical-ligatures|no-open-quote|no-repeat|none|nonzero|normal|not-allowed|nowrap|ns-resize|numbers|numeric|nw-resize|nwse-resize\\n|oblique|oldstyle-nums|open|open-quote|optimizeLegibility|optimizeQuality|optimizeSpeed|optional|ordinal|outset|outside|over|overlay|overline|padding\\n|padding-box|page|painted|pan-down|pan-left|pan-right|pan-up|pan-x|pan-y|paused|petite-caps|pixelated|plaintext|pointer|portrait|pre|pre-line\\n|pre-wrap|preserve-3d|progress|progressive|proportional-nums|proportional-width|proximity|radial|recto|region|relative|remove|repeat|repeat-[xy]\\n|reset-size|reverse|revert|ridge|right|rl|rl-tb|round|row|row-resize|row-reverse|row-severse|rtl|ruby|ruby-base|ruby-base-container|ruby-text\\n|ruby-text-container|run-in|running|s-resize|saturation|scale-down|screen|scroll|scroll-position|se-resize|semi-condensed|semi-expanded|separate\\n|sesame|show|sideways|sideways-left|sideways-lr|sideways-right|sideways-rl|simplified|slashed-zero|slice|small|small-caps|small-caption|smaller\\n|smooth|soft-light|solid|space|space-around|space-between|space-evenly|spell-out|square|sRGB|stacked-fractions|start|static|status-bar|swap\\n|step-end|step-start|sticky|stretch|strict|stroke|stroke-box|style|sub|subgrid|subpixel-antialiased|subtract|super|sw-resize|symbolic|table\\n|table-caption|table-cell|table-column|table-column-group|table-footer-group|table-header-group|table-row|table-row-group|tabular-nums|tb|tb-rl\\n|text|text-after-edge|text-before-edge|text-bottom|text-top|thick|thin|titling-caps|top|top-outside|touch|traditional|transparent|triangle\\n|ultra-condensed|ultra-expanded|under|underline|unicase|unset|upleft|uppercase|upright|use-glyph-orientation|use-script|verso|vertical\\n|vertical-ideographic|vertical-lr|vertical-rl|vertical-text|view-box|visible|visibleFill|visiblePainted|visibleStroke|w-resize|wait|wavy\\n|weight|whitespace|wider|words|wrap|wrap-reverse|x|x-large|x-small|xx-large|xx-small|y|zero|zoom-in|zoom-out)\\n(?![\\\\w-])\", \"name\": \"support.constant.property-value.css\" }, { \"match\": \"(?xi) (?<![\\\\w-])\\n(arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|cjk-ideographic\\n|decimal|decimal-leading-zero|devanagari|disc|disclosure-closed|disclosure-open|ethiopic-halehame-am\\n|ethiopic-halehame-ti-e[rt]|ethiopic-numeric|georgian|gujarati|gurmukhi|hangul|hangul-consonant|hebrew\\n|hiragana|hiragana-iroha|japanese-formal|japanese-informal|kannada|katakana|katakana-iroha|khmer\\n|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek\\n|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal\\n|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian\\n|upper-latin|upper-roman|urdu)\\n(?![\\\\w-])\", \"name\": \"support.constant.property-value.list-style-type.css\" }, { \"match\": \"(?<![\\\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+\", \"name\": \"support.constant.vendored.property-value.css\" }, { \"match\": \"(?<![\\\\w-])(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system-ui|system|tahoma|times|trebuchet|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|utopia|verdana|webdings|sans-serif|serif|monospace)(?![\\\\w-])\", \"name\": \"support.constant.font-name.css\" }] }, \"property-names\": { \"patterns\": [{ \"match\": \"(?xi) (?<![\\\\w-])\\n(?:\\n  # Standard CSS\\n  accent-color|additive-symbols|align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration\\n  | animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backdrop-filter\\n  | backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image\\n  | background-origin|background-position|background-position-[xy]|background-repeat|background-size|bleed|block-size|border\\n  | border-block-end|border-block-end-color|border-block-end-style|border-block-end-width|border-block-start|border-block-start-color\\n  | border-block-start-style|border-block-start-width|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius\\n  | border-bottom-style|border-bottom-width|border-collapse|border-color|border-end-end-radius|border-end-start-radius|border-image\\n  | border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-inline-end\\n  | border-inline-end-color|border-inline-end-style|border-inline-end-width|border-inline-start|border-inline-start-color\\n  | border-inline-start-style|border-inline-start-width|border-left|border-left-color|border-left-style|border-left-width\\n  | border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-start-end-radius\\n  | border-start-start-radius|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style\\n  | border-top-width|border-width|bottom|box-decoration-break|box-shadow|box-sizing|break-after|break-before|break-inside|caption-side\\n  | caret-color|clear|clip|clip-path|clip-rule|color|color-adjust|color-interpolation-filters|color-scheme|column-count|column-fill|column-gap\\n  | column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|contain|container|container-name|container-type|content|counter-increment\\n  | counter-reset|cursor|direction|display|empty-cells|enable-background|fallback|fill|fill-opacity|fill-rule|filter|flex|flex-basis\\n  | flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|flood-color|flood-opacity|font|font-display|font-family\\n  | font-feature-settings|font-kerning|font-language-override|font-optical-sizing|font-size|font-size-adjust|font-stretch\\n  | font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures\\n  | font-variant-numeric|font-variant-position|font-variation-settings|font-weight|gap|glyph-orientation-horizontal|glyph-orientation-vertical\\n  | grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap|grid-column-start\\n  | grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows\\n  | hanging-punctuation|height|hyphens|image-orientation|image-rendering|image-resolution|ime-mode|initial-letter|initial-letter-align\\n  | inline-size|inset|inset-block|inset-block-end|inset-block-start|inset-inline|inset-inline-end|inset-inline-start|isolation\\n  | justify-content|justify-items|justify-self|kerning|left|letter-spacing|lighting-color|line-break|line-clamp|line-height|list-style\\n  | list-style-image|list-style-position|list-style-type|margin|margin-block|margin-block-end|margin-block-start|margin-bottom|margin-inline|margin-inline-end|margin-inline-start\\n  | margin-left|margin-right|margin-top|marker-end|marker-mid|marker-start|marks|mask|mask-border|mask-border-mode|mask-border-outset\\n  | mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-clip|mask-composite|mask-image|mask-mode\\n  | mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-block-size|max-height|max-inline-size|max-lines|max-width\\n  | max-zoom|min-block-size|min-height|min-inline-size|min-width|min-zoom|mix-blend-mode|negative|object-fit|object-position\\n  | offset|offset-anchor|offset-distance|offset-path|offset-position|offset-rotation|opacity|order|orientation|orphans\\n  | outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-anchor|overflow-block|overflow-inline\\n  | overflow-wrap|overflow-[xy]|overscroll-behavior|overscroll-behavior-block|overscroll-behavior-inline|overscroll-behavior-[xy]\\n  | pad|padding|padding-block|padding-block-end|padding-block-start|padding-bottom|padding-inline|padding-inline-end|padding-inline-start|padding-left\\n  | padding-right|padding-top|page-break-after|page-break-before|page-break-inside|paint-order|perspective|perspective-origin\\n  | place-content|place-items|place-self|pointer-events|position|prefix|quotes|range|resize|right|rotate|row-gap|ruby-align\\n  | ruby-merge|ruby-position|scale|scroll-behavior|scroll-margin|scroll-margin-block|scroll-margin-block-end|scroll-margin-block-start\\n  | scroll-margin-bottom|scroll-margin-inline|scroll-margin-inline-end|scroll-margin-inline-start|scroll-margin-left|scroll-margin-right\\n  | scroll-margin-top|scroll-padding|scroll-padding-block|scroll-padding-block-end|scroll-padding-block-start|scroll-padding-bottom\\n  | scroll-padding-inline|scroll-padding-inline-end|scroll-padding-inline-start|scroll-padding-left|scroll-padding-right\\n  | scroll-padding-top|scroll-snap-align|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-stop|scroll-snap-type\\n  | scrollbar-color|scrollbar-gutter|scrollbar-width|shape-image-threshold|shape-margin|shape-outside|shape-rendering|size\\n  | speak-as|src|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap|stroke-linejoin|stroke-miterlimit\\n  | stroke-opacity|stroke-width|suffix|symbols|system|tab-size|table-layout|text-align|text-align-last|text-anchor|text-combine-upright\\n  | text-decoration|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-skip-ink|text-decoration-style|text-decoration-thickness\\n  | text-emphasis|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-justify|text-orientation\\n  | text-overflow|text-rendering|text-shadow|text-size-adjust|text-transform|text-underline-offset|text-underline-position|top|touch-action|transform\\n  | transform-box|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function\\n  | translate|unicode-bidi|unicode-range|user-select|user-zoom|vertical-align|visibility|white-space|widows|width|will-change\\n  | word-break|word-spacing|word-wrap|writing-mode|z-index|zoom\\n\\n  # SVG attributes\\n  | alignment-baseline|baseline-shift|clip-rule|color-interpolation|color-interpolation-filters|color-profile\\n  | color-rendering|cx|cy|dominant-baseline|enable-background|fill|fill-opacity|fill-rule|flood-color|flood-opacity\\n  | glyph-orientation-horizontal|glyph-orientation-vertical|height|kerning|lighting-color|marker-end|marker-mid\\n  | marker-start|r|rx|ry|shape-rendering|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap\\n  | stroke-linejoin|stroke-miterlimit|stroke-opacity|stroke-width|text-anchor|width|x|y\\n\\n  # Not listed on MDN; presumably deprecated\\n  | adjust|after|align|align-last|alignment|alignment-adjust|appearance|attachment|azimuth|background-break\\n  | balance|baseline|before|bidi|binding|bookmark|bookmark-label|bookmark-level|bookmark-target|border-length\\n  | bottom-color|bottom-left-radius|bottom-right-radius|bottom-style|bottom-width|box|box-align|box-direction\\n  | box-flex|box-flex-group|box-lines|box-ordinal-group|box-orient|box-pack|break|character|collapse|column\\n  | column-break-after|column-break-before|count|counter|crop|cue|cue-after|cue-before|decoration|decoration-break\\n  | delay|display-model|display-role|down|drop|drop-initial-after-adjust|drop-initial-after-align|drop-initial-before-adjust\\n  | drop-initial-before-align|drop-initial-size|drop-initial-value|duration|elevation|emphasis|family|fit|fit-position\\n  | flex-group|float-offset|gap|grid-columns|grid-rows|hanging-punctuation|header|hyphenate|hyphenate-after|hyphenate-before\\n  | hyphenate-character|hyphenate-lines|hyphenate-resource|icon|image|increment|indent|index|initial-after-adjust\\n  | initial-after-align|initial-before-adjust|initial-before-align|initial-size|initial-value|inline-box-align|iteration-count\\n  | justify|label|left-color|left-style|left-width|length|level|line|line-stacking|line-stacking-ruby|line-stacking-shift\\n  | line-stacking-strategy|lines|list|mark|mark-after|mark-before|marks|marquee|marquee-direction|marquee-play-count|marquee-speed\\n  | marquee-style|max|min|model|move-to|name|nav|nav-down|nav-index|nav-left|nav-right|nav-up|new|numeral|offset|ordinal-group\\n  | orient|origin|overflow-style|overhang|pack|page|page-policy|pause|pause-after|pause-before|phonemes|pitch|pitch-range\\n  | play-count|play-during|play-state|point|presentation|presentation-level|profile|property|punctuation|punctuation-trim\\n  | radius|rate|rendering-intent|repeat|replace|reset|resolution|resource|respond-to|rest|rest-after|rest-before|richness\\n  | right-color|right-style|right-width|role|rotation|rotation-point|rows|ruby|ruby-overhang|ruby-span|rule|rule-color\\n  | rule-style|rule-width|shadow|size|size-adjust|sizing|space|space-collapse|spacing|span|speak|speak-header|speak-numeral\\n  | speak-punctuation|speech|speech-rate|speed|stacking|stacking-ruby|stacking-shift|stacking-strategy|stress|stretch\\n  | string-set|style|style-image|style-position|style-type|target|target-name|target-new|target-position|text|text-height\\n  | text-justify|text-outline|text-replace|text-wrap|timing-function|top-color|top-left-radius|top-right-radius|top-style\\n  | top-width|trim|unicode|up|user-select|variant|voice|voice-balance|voice-duration|voice-family|voice-pitch|voice-pitch-range\\n  | voice-rate|voice-stress|voice-volume|volume|weight|white|white-space-collapse|word|wrap\\n)\\n(?![\\\\w-])\", \"name\": \"support.type.property-name.css\" }, { \"match\": \"(?<![\\\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+\", \"name\": \"support.type.vendored.property-name.css\" }] }, \"property-values\": { \"patterns\": [{ \"include\": \"#commas\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#functions\" }, { \"include\": \"#property-keywords\" }, { \"include\": \"#unicode-range\" }, { \"include\": \"#numeric-values\" }, { \"include\": \"#color-keywords\" }, { \"include\": \"#string\" }, { \"match\": \"!\\\\s*important(?![\\\\w-])\", \"name\": \"keyword.other.important.css\" }] }, \"pseudo-classes\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"name\": \"invalid.illegal.colon.css\" } }, \"match\": \"(?xi)\\n(:)(:*)\\n(?: active|any-link|checked|default|disabled|empty|enabled|first\\n  | (?:first|last|only)-(?:child|of-type)|focus|focus-visible|focus-within|fullscreen|host|hover\\n  | in-range|indeterminate|invalid|left|link|optional|out-of-range\\n  | read-only|read-write|required|right|root|scope|target|unresolved\\n  | valid|visited\\n)(?![\\\\w-]|\\\\s*[;}])\", \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"pseudo-elements\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(?xi)\\n(?:\\n  (::?)                       # Elements using both : and :: notation\\n  (?: after\\n    | before\\n    | first-letter\\n    | first-line\\n    | (?:-(?:ah|apple|atsc|epub|hp|khtml|moz\\n            |ms|o|rim|ro|tc|wap|webkit|xv)\\n        | (?:mso|prince))\\n      -[a-z-]+\\n  )\\n  |\\n  (::)                        # Double-colon only\\n  (?: backdrop\\n    | content\\n    | grammar-error\\n    | marker\\n    | placeholder\\n    | selection\\n    | shadow\\n    | spelling-error\\n  )\\n)\\n(?![\\\\w-]|\\\\s*[;}])\", \"name\": \"entity.other.attribute-name.pseudo-element.css\" }, \"rule-list\": { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.begin.bracket.curly.css\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.end.bracket.curly.css\" } }, \"name\": \"meta.property-list.css\", \"patterns\": [{ \"include\": \"#rule-list-innards\" }] }, \"rule-list-innards\": { \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }, { \"include\": \"#font-features\" }, { \"match\": \"(?x) (?<![\\\\w-])\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.css\" }, { \"begin\": \"(?<![-a-zA-Z])(?=[-a-zA-Z])\", \"end\": \"$|(?![-a-zA-Z])\", \"name\": \"meta.property-name.css\", \"patterns\": [{ \"include\": \"#property-names\" }] }, { \"begin\": \"(:)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.css\" } }, \"contentName\": \"meta.property-value.css\", \"end\": \"\\\\s*(;)|\\\\s*(?=}|\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#property-values\" }] }, { \"match\": \";\", \"name\": \"punctuation.terminator.rule.css\" }] }, \"selector\": { \"begin\": \"(?x)\\n(?=\\n  (?:\\\\|)?                    # Possible anonymous namespace prefix\\n  (?:\\n    [-\\\\[:.*\\\\#a-zA-Z_]       # Valid selector character\\n    |\\n    [^\\\\x00-\\\\x7F]            # Which can include non-ASCII symbols\\n    |\\n    \\\\\\\\                      # Or an escape sequence\\n    (?:[0-9a-fA-F]{1,6}|.)\\n  )\\n)\", \"end\": \"(?=\\\\s*[/@{)])\", \"name\": \"meta.selector.css\", \"patterns\": [{ \"include\": \"#selector-innards\" }] }, \"selector-innards\": { \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#commas\" }, { \"include\": \"#escapes\" }, { \"include\": \"#combinators\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.namespace-prefix.css\" }, \"2\": { \"name\": \"punctuation.separator.css\" } }, \"match\": \"(?x)\\n(?:^|(?<=[\\\\s,(};]))         # Follows whitespace, comma, semicolon, or bracket\\n(?!\\n  [-\\\\w*]+\\n  \\\\|\\n  (?!\\n      [-\\\\[:.*\\\\#a-zA-Z_]    # Make sure there's a selector to match\\n    | [^\\\\x00-\\\\x7F]\\n  )\\n)\\n(\\n  (?: [-a-zA-Z_]    | [^\\\\x00-\\\\x7F] )   # First letter\\n  (?: [-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]     # Remainder of identifier\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n  )*\\n  |\\n  \\\\*     # Universal namespace\\n)?\\n(\\\\|)     # Namespace separator\" }, { \"include\": \"#tag-names\" }, { \"match\": \"\\\\*\", \"name\": \"entity.name.tag.wildcard.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x) (?<![@\\\\w-])\\n([.\\\\#])\\n# Invalid identifier\\n(\\n  (?:\\n    # Starts with ASCII digits, with possible hyphen preceding it\\n    -?[0-9]\\n    |\\n    # Consists of a hyphen only\\n    -                                      # Terminated by either:\\n    (?= $                                  # - End-of-line\\n      | [\\\\s,.\\\\#)\\\\[:{>+~|]               # - Followed by another selector\\n      | /\\\\*                               # - Followed by a block comment\\n    )\\n    |\\n    # Name contains unescaped ASCII symbol\\n    (?:                                    # Check for acceptable preceding characters\\n        [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]       # - Valid selector character\\n      | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)         # - Escape sequence\\n    )*\\n    (?:                                    # Invalid punctuation\\n      [!\\\"'%&(*;<?@^`|\\\\]}]                 # - NOTE: We exempt `)` from the list of checked\\n      |                                    #   symbols to avoid matching `:not(.invalid)`\\n      / (?!\\\\*)                            # - Avoid invalidating the start of a comment\\n    )+\\n  )\\n  # Mark remainder of selector invalid\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]         # - Otherwise valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)           # - Escape sequence\\n  )*\\n)\", \"name\": \"invalid.illegal.bad-identifier.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n(\\\\.)                                  # Valid class-name\\n(\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]     # Valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\n  )+\\n)                                      # Followed by either:\\n(?= $                                  # - End of the line\\n  | [\\\\s,.\\\\#)\\\\[:{>+~|]               # - Another selector\\n  | /\\\\*                               # - A block comment\\n)\", \"name\": \"entity.other.attribute-name.class.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n(\\\\#)\\n(\\n  -?\\n  (?![0-9])\\n  (?:[-a-zA-Z0-9_]|[^\\\\x00-\\\\x7F]|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+\\n)\\n(?=$|[\\\\s,.\\\\#)\\\\[:{>+~|]|/\\\\*)\", \"name\": \"entity.other.attribute-name.id.css\" }, { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.begin.bracket.square.css\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.end.bracket.square.css\" } }, \"name\": \"meta.attribute-selector.css\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#string\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ignore-case.css\" } }, \"match\": `(?<=[\"'\\\\s]|^|\\\\*/)\\\\s*([iI])\\\\s*(?=[\\\\s\\\\]]|/\\\\*|$)` }, { \"captures\": { \"1\": { \"name\": \"string.unquoted.attribute-value.css\", \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": `(?x)(?<==)\\\\s*((?!/\\\\*)(?:[^\\\\\\\\\"'\\\\s\\\\]]|\\\\\\\\.)+)` }, { \"include\": \"#escapes\" }, { \"match\": \"[~|^$*]?=\", \"name\": \"keyword.operator.pattern.css\" }, { \"match\": \"\\\\|\", \"name\": \"punctuation.separator.css\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.namespace-prefix.css\", \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n# Qualified namespace prefix\\n( -?(?!\\\\d)(?:[\\\\w-]|[^\\\\x00-\\\\x7F]|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+\\n| \\\\*\\n)\\n# Lookahead to ensure there's a valid identifier ahead\\n(?=\\n  \\\\| (?!\\\\s|=|$|\\\\])\\n  (?: -?(?!\\\\d)\\n   |   [\\\\\\\\\\\\w-]\\n   |   [^\\\\x00-\\\\x7F]\\n   )\\n)\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.css\", \"patterns\": [{ \"include\": \"#escapes\" }] } }, \"match\": \"(?x)\\n(-?(?!\\\\d)(?>[\\\\w-]|[^\\\\x00-\\\\x7F]|\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+)\\n\\\\s*\\n(?=[~|^\\\\]$*=]|/\\\\*)\" }] }, { \"include\": \"#pseudo-classes\" }, { \"include\": \"#pseudo-elements\" }, { \"include\": \"#functional-pseudo-classes\" }, { \"match\": \"(?x) (?<![@\\\\w-])\\n(?=            # Custom element names must:\\n  [a-z]        # - start with a lowercase ASCII letter,\\n  \\\\w* -       # - contain at least one dash\\n)\\n(?:\\n  (?![A-Z])    # No uppercase ASCII letters are allowed\\n  [\\\\w-]       # Allow any other word character or dash\\n)+\\n(?![(\\\\w-])\", \"name\": \"entity.name.tag.custom.css\" }] }, \"string\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": '\"|(?<!\\\\\\\\)(?=$|\\\\n)', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.double.css\", \"patterns\": [{ \"begin\": '(?:\\\\G|^)(?=(?:[^\\\\\\\\\"]|\\\\\\\\.)+$)', \"end\": \"$\", \"name\": \"invalid.illegal.unclosed.string.css\", \"patterns\": [{ \"include\": \"#escapes\" }] }, { \"include\": \"#escapes\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": \"'|(?<!\\\\\\\\)(?=$|\\\\n)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.single.css\", \"patterns\": [{ \"begin\": \"(?:\\\\G|^)(?=(?:[^\\\\\\\\']|\\\\\\\\.)+$)\", \"end\": \"$\", \"name\": \"invalid.illegal.unclosed.string.css\", \"patterns\": [{ \"include\": \"#escapes\" }] }, { \"include\": \"#escapes\" }] }] }, \"tag-names\": { \"match\": \"(?xi) (?<![\\\\w:-])\\n(?:\\n    # HTML\\n    a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|bgsound\\n  | big|blink|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command\\n  | content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset\\n  | figcaption|figure|font|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i\\n  | iframe|image|img|input|ins|isindex|kbd|keygen|label|legend|li|link|listing|main|map|mark\\n  | marquee|math|menu|menuitem|meta|meter|multicol|nav|nextid|nobr|noembed|noframes|noscript\\n  | object|ol|optgroup|option|output|p|param|picture|plaintext|pre|progress|q|rb|rp|rt|rtc\\n  | ruby|s|samp|script|section|select|shadow|slot|small|source|spacer|span|strike|strong\\n  | style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr\\n  | track|tt|u|ul|var|video|wbr|xmp\\n\\n  # SVG\\n  | altGlyph|altGlyphDef|altGlyphItem|animate|animateColor|animateMotion|animateTransform\\n  | circle|clipPath|color-profile|cursor|defs|desc|discard|ellipse|feBlend|feColorMatrix\\n  | feComponentTransfer|feComposite|feConvolveMatrix|feDiffuseLighting|feDisplacementMap\\n  | feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur\\n  | feImage|feMerge|feMergeNode|feMorphology|feOffset|fePointLight|feSpecularLighting\\n  | feSpotLight|feTile|feTurbulence|filter|font-face|font-face-format|font-face-name\\n  | font-face-src|font-face-uri|foreignObject|g|glyph|glyphRef|hatch|hatchpath|hkern\\n  | line|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|metadata\\n  | missing-glyph|mpath|path|pattern|polygon|polyline|radialGradient|rect|set|solidcolor\\n  | stop|svg|switch|symbol|text|textPath|tref|tspan|use|view|vkern\\n\\n  # MathML\\n  | annotation|annotation-xml|maction|maligngroup|malignmark|math|menclose|merror|mfenced\\n  | mfrac|mglyph|mi|mlabeledtr|mlongdiv|mmultiscripts|mn|mo|mover|mpadded|mphantom|mroot\\n  | mrow|ms|mscarries|mscarry|msgroup|msline|mspace|msqrt|msrow|mstack|mstyle|msub|msubsup\\n  | msup|mtable|mtd|mtext|mtr|munder|munderover|semantics\\n)\\n(?=[+~>\\\\s,.\\\\#|){:\\\\[]|/\\\\*|$)\", \"name\": \"entity.name.tag.css\" }, \"unicode-range\": { \"captures\": { \"0\": { \"name\": \"constant.other.unicode-range.css\" }, \"1\": { \"name\": \"punctuation.separator.dash.unicode-range.css\" } }, \"match\": \"(?<![\\\\w-])[Uu]\\\\+[0-9A-Fa-f?]{1,6}(?:(-)[0-9A-Fa-f]{1,6})?(?![\\\\w-])\" }, \"url\": { \"begin\": \"(?i)(?<![\\\\w@-])(url)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.url.css\" }, \"2\": { \"name\": \"punctuation.section.function.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.bracket.round.css\" } }, \"name\": \"meta.function.url.css\", \"patterns\": [{ \"match\": `[^'\")\\\\s]+`, \"name\": \"variable.parameter.url.css\" }, { \"include\": \"#string\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#escapes\" }] } }, \"scopeName\": \"source.css\" });\nvar css = [\n  lang$m\n];\n\nconst lang$l = Object.freeze({ \"displayName\": \"HTML\", \"injections\": { \"R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)\": { \"comment\": \"Uses R: to ensure this matches after any other injections.\", \"patterns\": [{ \"match\": \"<\", \"name\": \"invalid.illegal.bad-angle-bracket.html\" }] } }, \"name\": \"html\", \"patterns\": [{ \"include\": \"#xml-processing\" }, { \"include\": \"#comment\" }, { \"include\": \"#doctype\" }, { \"include\": \"#cdata\" }, { \"include\": \"#tags-valid\" }, { \"include\": \"#tags-invalid\" }, { \"include\": \"#entities\" }], \"repository\": { \"attribute\": { \"patterns\": [{ \"begin\": \"(s(hape|cope|t(ep|art)|ize(s)?|p(ellcheck|an)|elected|lot|andbox|rc(set|doc|lang)?)|h(ttp-equiv|i(dden|gh)|e(ight|aders)|ref(lang)?)|n(o(nce|validate|module)|ame)|c(h(ecked|arset)|ite|o(nt(ent(editable)?|rols)|ords|l(s(pan)?|or))|lass|rossorigin)|t(ype(mustmatch)?|itle|a(rget|bindex)|ranslate)|i(s(map)?|n(tegrity|putmode)|tem(scope|type|id|prop|ref)|d)|op(timum|en)|d(i(sabled|r(name)?)|ownload|e(coding|f(er|ault))|at(etime|a)|raggable)|usemap|p(ing|oster|la(ysinline|ceholder)|attern|reload)|enctype|value|kind|for(m(novalidate|target|enctype|action|method)?)?|w(idth|rap)|l(ist|o(op|w)|a(ng|bel))|a(s(ync)?|c(ce(sskey|pt(-charset)?)|tion)|uto(c(omplete|apitalize)|play|focus)|l(t|low(usermedia|paymentrequest|fullscreen))|bbr)|r(ows(pan)?|e(versed|quired|ferrerpolicy|l|adonly))|m(in(length)?|u(ted|ltiple)|e(thod|dia)|a(nifest|x(length)?)))(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"HTML5 attributes, not event handlers\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"begin\": \"style(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"HTML5 style attribute\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.style.html\", \"patterns\": [{ \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.html\" } }, \"end\": \"(?<=[^\\\\s=])(?!\\\\s*=)|(?=/?>)\", \"patterns\": [{ \"begin\": \"(?=[^\\\\s=<>`/]|/(?!>))\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.line.css\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"source.css\" } }, \"match\": \"([^\\\\s\\\"'=<>`/]|/(?!>))+\", \"name\": \"string.unquoted.html\" }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.html\" } }, \"contentName\": \"source.css\", \"end\": '(\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.html\" }, \"1\": { \"name\": \"source.css\" } }, \"name\": \"string.quoted.double.html\", \"patterns\": [{ \"include\": \"#entities\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.html\" } }, \"contentName\": \"source.css\", \"end\": \"(')\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.html\" }, \"1\": { \"name\": \"source.css\" } }, \"name\": \"string.quoted.single.html\", \"patterns\": [{ \"include\": \"#entities\" }] }] }, { \"match\": \"=\", \"name\": \"invalid.illegal.unexpected-equals-sign.html\" }] }] }, { \"begin\": \"on(s(croll|t(orage|alled)|u(spend|bmit)|e(curitypolicyviolation|ek(ing|ed)|lect))|hashchange|c(hange|o(ntextmenu|py)|u(t|echange)|l(ick|ose)|an(cel|play(through)?))|t(imeupdate|oggle)|in(put|valid)|o(nline|ffline)|d(urationchange|r(op|ag(start|over|e(n(ter|d)|xit)|leave)?)|blclick)|un(handledrejection|load)|p(opstate|lay(ing)?|a(ste|use|ge(show|hide))|rogress)|e(nded|rror|mptied)|volumechange|key(down|up|press)|focus|w(heel|aiting)|l(oad(start|e(nd|d(data|metadata)))?|anguagechange)|a(uxclick|fterprint|bort)|r(e(s(ize|et)|jectionhandled)|atechange)|m(ouse(o(ut|ver)|down|up|enter|leave|move)|essage(error)?)|b(efore(unload|print)|lur))(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"HTML5 attributes, event handlers\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.event-handler.$1.html\", \"patterns\": [{ \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.html\" } }, \"end\": \"(?<=[^\\\\s=])(?!\\\\s*=)|(?=/?>)\", \"patterns\": [{ \"begin\": \"(?=[^\\\\s=<>`/]|/(?!>))\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.line.js\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"source.js\" }, \"1\": { \"patterns\": [{ \"include\": \"source.js\" }] } }, \"match\": \"(([^\\\\s\\\"'=<>`/]|/(?!>))+)\", \"name\": \"string.unquoted.html\" }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.html\" } }, \"contentName\": \"source.js\", \"end\": '(\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.html\" }, \"1\": { \"name\": \"source.js\" } }, \"name\": \"string.quoted.double.html\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"source.js\" }] } }, \"match\": '([^\\\\n\"/]|/(?![/*]))+' }, { \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"end\": '(?=\")|\\\\n', \"name\": \"comment.line.double-slash.js\" }, { \"begin\": \"/\\\\*\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.js\" } }, \"end\": '(?=\")|\\\\*/', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.js\" } }, \"name\": \"comment.block.js\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.html\" } }, \"contentName\": \"source.js\", \"end\": \"(')\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.html\" }, \"1\": { \"name\": \"source.js\" } }, \"name\": \"string.quoted.single.html\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"source.js\" }] } }, \"match\": \"([^\\\\n'/]|/(?![/*]))+\" }, { \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"end\": \"(?=')|\\\\n\", \"name\": \"comment.line.double-slash.js\" }, { \"begin\": \"/\\\\*\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.js\" } }, \"end\": \"(?=')|\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.js\" } }, \"name\": \"comment.block.js\" }] }] }, { \"match\": \"=\", \"name\": \"invalid.illegal.unexpected-equals-sign.html\" }] }] }, { \"begin\": \"(data-[a-z\\\\-]+)(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"HTML5 attributes, data-*\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.data-x.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"begin\": \"(align|bgcolor|border)(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"invalid.deprecated.entity.other.attribute-name.html\" } }, \"comment\": \"HTML attributes, deprecated\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"begin\": `([^\\\\x{0020}\"'<>/=\\\\x{0000}-\\\\x{001F}\\\\x{007F}-\\\\x{009F}\\\\x{FDD0}-\\\\x{FDEF}\\\\x{FFFE}\\\\x{FFFF}\\\\x{1FFFE}\\\\x{1FFFF}\\\\x{2FFFE}\\\\x{2FFFF}\\\\x{3FFFE}\\\\x{3FFFF}\\\\x{4FFFE}\\\\x{4FFFF}\\\\x{5FFFE}\\\\x{5FFFF}\\\\x{6FFFE}\\\\x{6FFFF}\\\\x{7FFFE}\\\\x{7FFFF}\\\\x{8FFFE}\\\\x{8FFFF}\\\\x{9FFFE}\\\\x{9FFFF}\\\\x{AFFFE}\\\\x{AFFFF}\\\\x{BFFFE}\\\\x{BFFFF}\\\\x{CFFFE}\\\\x{CFFFF}\\\\x{DFFFE}\\\\x{DFFFF}\\\\x{EFFFE}\\\\x{EFFFF}\\\\x{FFFFE}\\\\x{FFFFF}\\\\x{10FFFE}\\\\x{10FFFF}]+)`, \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"Anything else that is valid\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.unrecognized.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"match\": \"[^\\\\s>]+\", \"name\": \"invalid.illegal.character-not-allowed-here.html\" }] }, \"attribute-interior\": { \"patterns\": [{ \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.html\" } }, \"end\": \"(?<=[^\\\\s=])(?!\\\\s*=)|(?=/?>)\", \"patterns\": [{ \"match\": \"([^\\\\s\\\"'=<>`/]|/(?!>))+\", \"name\": \"string.unquoted.html\" }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.html\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.html\" } }, \"name\": \"string.quoted.double.html\", \"patterns\": [{ \"include\": \"#entities\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.html\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.html\" } }, \"name\": \"string.quoted.single.html\", \"patterns\": [{ \"include\": \"#entities\" }] }, { \"match\": \"=\", \"name\": \"invalid.illegal.unexpected-equals-sign.html\" }] }] }, \"cdata\": { \"begin\": \"<!\\\\[CDATA\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.begin.html\" } }, \"contentName\": \"string.other.inline-data.html\", \"end\": \"]]>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.cdata.html\" }, \"comment\": { \"begin\": \"<!--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.html\" } }, \"end\": \"-->\", \"name\": \"comment.block.html\", \"patterns\": [{ \"match\": \"\\\\G-?>\", \"name\": \"invalid.illegal.characters-not-allowed-here.html\" }, { \"match\": \"<!--(?!>)|<!-(?=-->)\", \"name\": \"invalid.illegal.characters-not-allowed-here.html\" }, { \"match\": \"--!>\", \"name\": \"invalid.illegal.characters-not-allowed-here.html\" }] }, \"core-minus-invalid\": { \"comment\": \"This should be the root pattern array includes minus #tags-invalid\", \"patterns\": [{ \"include\": \"#xml-processing\" }, { \"include\": \"#comment\" }, { \"include\": \"#doctype\" }, { \"include\": \"#cdata\" }, { \"include\": \"#tags-valid\" }, { \"include\": \"#entities\" }] }, \"doctype\": { \"begin\": \"<!(?=(?i:DOCTYPE\\\\s))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.begin.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.doctype.html\", \"patterns\": [{ \"match\": \"\\\\G(?i:DOCTYPE)\", \"name\": \"entity.name.tag.html\" }, { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.html\" }, { \"match\": \"[^\\\\s>]+\", \"name\": \"entity.other.attribute-name.html\" }] }, \"entities\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.html\" }, \"912\": { \"name\": \"punctuation.definition.entity.html\" } }, \"comment\": \"Yes this is a bit ridiculous, there are quite a lot of these\", \"match\": \"(?x)\\n\t\t\t\t\t\t(&)\t(?=[a-zA-Z])\\n\t\t\t\t\t\t(\\n\t\t\t\t\t\t\t(a(s(ymp(eq)?|cr|t)|n(d(slope|d|v|and)?|g(s(t|ph)|zarr|e|le|rt(vb(d)?)?|msd(a(h|c|d|e|f|a|g|b))?)?)|c(y|irc|d|ute|E)?|tilde|o(pf|gon)|uml|p(id|os|prox(eq)?|e|E|acir)?|elig|f(r)?|w(conint|int)|l(pha|e(ph|fsym))|acute|ring|grave|m(p|a(cr|lg))|breve)|A(s(sign|cr)|nd|MP|c(y|irc)|tilde|o(pf|gon)|uml|pplyFunction|fr|Elig|lpha|acute|ring|grave|macr|breve))\\n\t\t\t\t\t\t  | (B(scr|cy|opf|umpeq|e(cause|ta|rnoullis)|fr|a(ckslash|r(v|wed))|reve)|b(s(cr|im(e)?|ol(hsub|b)?|emi)|n(ot|e(quiv)?)|c(y|ong)|ig(s(tar|qcup)|c(irc|up|ap)|triangle(down|up)|o(times|dot|plus)|uplus|vee|wedge)|o(t(tom)?|pf|wtie|x(h(d|u|D|U)?|times|H(d|u|D|U)?|d(R|l|r|L)|u(R|l|r|L)|plus|D(R|l|r|L)|v(R|h|H|l|r|L)?|U(R|l|r|L)|V(R|h|H|l|r|L)?|minus|box))|Not|dquo|u(ll(et)?|mp(e(q)?|E)?)|prime|e(caus(e)?|t(h|ween|a)|psi|rnou|mptyv)|karow|fr|l(ock|k(1(2|4)|34)|a(nk|ck(square|triangle(down|left|right)?|lozenge)))|a(ck(sim(eq)?|cong|prime|epsilon)|r(vee|wed(ge)?))|r(eve|vbar)|brk(tbrk)?))\\n\t\t\t\t\t\t  | (c(s(cr|u(p(e)?|b(e)?))|h(cy|i|eck(mark)?)|ylcty|c(irc|ups(sm)?|edil|a(ps|ron))|tdot|ir(scir|c(eq|le(d(R|circ|S|dash|ast)|arrow(left|right)))?|e|fnint|E|mid)?|o(n(int|g(dot)?)|p(y(sr)?|f|rod)|lon(e(q)?)?|m(p(fn|le(xes|ment))?|ma(t)?))|dot|u(darr(l|r)|p(s|c(up|ap)|or|dot|brcap)?|e(sc|pr)|vee|wed|larr(p)?|r(vearrow(left|right)|ly(eq(succ|prec)|vee|wedge)|arr(m)?|ren))|e(nt(erdot)?|dil|mptyv)|fr|w(conint|int)|lubs(uit)?|a(cute|p(s|c(up|ap)|dot|and|brcup)?|r(on|et))|r(oss|arr))|C(scr|hi|c(irc|onint|edil|aron)|ircle(Minus|Times|Dot|Plus)|Hcy|o(n(tourIntegral|int|gruent)|unterClockwiseContourIntegral|p(f|roduct)|lon(e)?)|dot|up(Cap)?|OPY|e(nterDot|dilla)|fr|lo(seCurly(DoubleQuote|Quote)|ckwiseContourIntegral)|a(yleys|cute|p(italDifferentialD)?)|ross))\\n\t\t\t\t\t\t  | (d(s(c(y|r)|trok|ol)|har(l|r)|c(y|aron)|t(dot|ri(f)?)|i(sin|e|v(ide(ontimes)?|onx)?|am(s|ond(suit)?)?|gamma)|Har|z(cy|igrarr)|o(t(square|plus|eq(dot)?|minus)?|ublebarwedge|pf|wn(harpoon(left|right)|downarrows|arrow)|llar)|d(otseq|a(rr|gger))?|u(har|arr)|jcy|e(lta|g|mptyv)|f(isht|r)|wangle|lc(orn|rop)|a(sh(v)?|leth|rr|gger)|r(c(orn|rop)|bkarow)|b(karow|lac)|Arr)|D(s(cr|trok)|c(y|aron)|Scy|i(fferentialD|a(critical(Grave|Tilde|Do(t|ubleAcute)|Acute)|mond))|o(t(Dot|Equal)?|uble(Right(Tee|Arrow)|ContourIntegral|Do(t|wnArrow)|Up(DownArrow|Arrow)|VerticalBar|L(ong(RightArrow|Left(RightArrow|Arrow))|eft(RightArrow|Tee|Arrow)))|pf|wn(Right(TeeVector|Vector(Bar)?)|Breve|Tee(Arrow)?|arrow|Left(RightVector|TeeVector|Vector(Bar)?)|Arrow(Bar|UpArrow)?))|Zcy|el(ta)?|D(otrahd)?|Jcy|fr|a(shv|rr|gger)))\\n\t\t\t\t\t\t  | (e(s(cr|im|dot)|n(sp|g)|c(y|ir(c)?|olon|aron)|t(h|a)|o(pf|gon)|dot|u(ro|ml)|p(si(v|lon)?|lus|ar(sl)?)|e|D(ot|Dot)|q(s(im|lant(less|gtr))|c(irc|olon)|u(iv(DD)?|est|als)|vparsl)|f(Dot|r)|l(s(dot)?|inters|l)?|a(ster|cute)|r(Dot|arr)|g(s(dot)?|rave)?|x(cl|ist|p(onentiale|ectation))|m(sp(1(3|4))?|pty(set|v)?|acr))|E(s(cr|im)|c(y|irc|aron)|ta|o(pf|gon)|NG|dot|uml|TH|psilon|qu(ilibrium|al(Tilde)?)|fr|lement|acute|grave|x(ists|ponentialE)|m(pty(SmallSquare|VerySmallSquare)|acr)))\\n\t\t\t\t\t\t  | (f(scr|nof|cy|ilig|o(pf|r(k(v)?|all))|jlig|partint|emale|f(ilig|l(ig|lig)|r)|l(tns|lig|at)|allingdotseq|r(own|a(sl|c(1(2|8|3|4|5|6)|78|2(3|5)|3(8|4|5)|45|5(8|6)))))|F(scr|cy|illed(SmallSquare|VerySmallSquare)|o(uriertrf|pf|rAll)|fr))\\n\t\t\t\t\t\t  | (G(scr|c(y|irc|edil)|t|opf|dot|T|Jcy|fr|amma(d)?|reater(Greater|SlantEqual|Tilde|Equal(Less)?|FullEqual|Less)|g|breve)|g(s(cr|im(e|l)?)|n(sim|e(q(q)?)?|E|ap(prox)?)|c(y|irc)|t(c(c|ir)|dot|quest|lPar|r(sim|dot|eq(qless|less)|less|a(pprox|rr)))?|imel|opf|dot|jcy|e(s(cc|dot(o(l)?)?|l(es)?)?|q(slant|q)?|l)?|v(nE|ertneqq)|fr|E(l)?|l(j|E|a)?|a(cute|p|mma(d)?)|rave|g(g)?|breve))\\n\t\t\t\t\t\t  | (h(s(cr|trok|lash)|y(phen|bull)|circ|o(ok(leftarrow|rightarrow)|pf|arr|rbar|mtht)|e(llip|arts(uit)?|rcon)|ks(earow|warow)|fr|a(irsp|lf|r(dcy|r(cir|w)?)|milt)|bar|Arr)|H(s(cr|trok)|circ|ilbertSpace|o(pf|rizontalLine)|ump(DownHump|Equal)|fr|a(cek|t)|ARDcy))\\n\t\t\t\t\t\t  | (i(s(cr|in(s(v)?|dot|v|E)?)|n(care|t(cal|prod|e(rcal|gers)|larhk)?|odot|fin(tie)?)?|c(y|irc)?|t(ilde)?|i(nfin|i(nt|int)|ota)?|o(cy|ta|pf|gon)|u(kcy|ml)|jlig|prod|e(cy|xcl)|quest|f(f|r)|acute|grave|m(of|ped|a(cr|th|g(part|e|line))))|I(scr|n(t(e(rsection|gral))?|visible(Comma|Times))|c(y|irc)|tilde|o(ta|pf|gon)|dot|u(kcy|ml)|Ocy|Jlig|fr|Ecy|acute|grave|m(plies|a(cr|ginaryI))?))\\n\t\t\t\t\t\t  | (j(s(cr|ercy)|c(y|irc)|opf|ukcy|fr|math)|J(s(cr|ercy)|c(y|irc)|opf|ukcy|fr))\\n\t\t\t\t\t\t  | (k(scr|hcy|c(y|edil)|opf|jcy|fr|appa(v)?|green)|K(scr|c(y|edil)|Hcy|opf|Jcy|fr|appa))\\n\t\t\t\t\t\t  | (l(s(h|cr|trok|im(e|g)?|q(uo(r)?|b)|aquo)|h(ar(d|u(l)?)|blk)|n(sim|e(q(q)?)?|E|ap(prox)?)|c(y|ub|e(il|dil)|aron)|Barr|t(hree|c(c|ir)|imes|dot|quest|larr|r(i(e|f)?|Par))?|Har|o(ng(left(arrow|rightarrow)|rightarrow|mapsto)|times|z(enge|f)?|oparrow(left|right)|p(f|lus|ar)|w(ast|bar)|a(ng|rr)|brk)|d(sh|ca|quo(r)?|r(dhar|ushar))|ur(dshar|uhar)|jcy|par(lt)?|e(s(s(sim|dot|eq(qgtr|gtr)|approx|gtr)|cc|dot(o(r)?)?|g(es)?)?|q(slant|q)?|ft(harpoon(down|up)|threetimes|leftarrows|arrow(tail)?|right(squigarrow|harpoons|arrow(s)?))|g)?|v(nE|ertneqq)|f(isht|loor|r)|E(g)?|l(hard|corner|tri|arr)?|a(ng(d|le)?|cute|t(e(s)?|ail)?|p|emptyv|quo|rr(sim|hk|tl|pl|fs|lp|b(fs)?)?|gran|mbda)|r(har(d)?|corner|tri|arr|m)|g(E)?|m(idot|oust(ache)?)|b(arr|r(k(sl(d|u)|e)|ac(e|k))|brk)|A(tail|arr|rr))|L(s(h|cr|trok)|c(y|edil|aron)|t|o(ng(RightArrow|left(arrow|rightarrow)|rightarrow|Left(RightArrow|Arrow))|pf|wer(RightArrow|LeftArrow))|T|e(ss(Greater|SlantEqual|Tilde|EqualGreater|FullEqual|Less)|ft(Right(Vector|Arrow)|Ceiling|T(ee(Vector|Arrow)?|riangle(Bar|Equal)?)|Do(ubleBracket|wn(TeeVector|Vector(Bar)?))|Up(TeeVector|DownVector|Vector(Bar)?)|Vector(Bar)?|arrow|rightarrow|Floor|A(ngleBracket|rrow(RightArrow|Bar)?)))|Jcy|fr|l(eftarrow)?|a(ng|cute|placetrf|rr|mbda)|midot))\\n\t\t\t\t\t\t  | (M(scr|cy|inusPlus|opf|u|e(diumSpace|llintrf)|fr|ap)|m(s(cr|tpos)|ho|nplus|c(y|omma)|i(nus(d(u)?|b)?|cro|d(cir|dot|ast)?)|o(dels|pf)|dash|u(ltimap|map)?|p|easuredangle|DDot|fr|l(cp|dr)|a(cr|p(sto(down|up|left)?)?|l(t(ese)?|e)|rker)))\\n\t\t\t\t\t\t  | (n(s(hort(parallel|mid)|c(cue|e|r)?|im(e(q)?)?|u(cc(eq)?|p(set(eq(q)?)?|e|E)?|b(set(eq(q)?)?|e|E)?)|par|qsu(pe|be)|mid)|Rightarrow|h(par|arr|Arr)|G(t(v)?|g)|c(y|ong(dot)?|up|edil|a(p|ron))|t(ilde|lg|riangle(left(eq)?|right(eq)?)|gl)|i(s(d)?|v)?|o(t(ni(v(c|a|b))?|in(dot|v(c|a|b)|E)?)?|pf)|dash|u(m(sp|ero)?)?|jcy|p(olint|ar(sl|t|allel)?|r(cue|e(c(eq)?)?)?)|e(s(im|ear)|dot|quiv|ar(hk|r(ow)?)|xist(s)?|Arr)?|v(sim|infin|Harr|dash|Dash|l(t(rie)?|e|Arr)|ap|r(trie|Arr)|g(t|e))|fr|w(near|ar(hk|r(ow)?)|Arr)|V(dash|Dash)|l(sim|t(ri(e)?)?|dr|e(s(s)?|q(slant|q)?|ft(arrow|rightarrow))?|E|arr|Arr)|a(ng|cute|tur(al(s)?)?|p(id|os|prox|E)?|bla)|r(tri(e)?|ightarrow|arr(c|w)?|Arr)|g(sim|t(r)?|e(s|q(slant|q)?)?|E)|mid|L(t(v)?|eft(arrow|rightarrow)|l)|b(sp|ump(e)?))|N(scr|c(y|edil|aron)|tilde|o(nBreakingSpace|Break|t(R(ightTriangle(Bar|Equal)?|everseElement)|Greater(Greater|SlantEqual|Tilde|Equal|FullEqual|Less)?|S(u(cceeds(SlantEqual|Tilde|Equal)?|perset(Equal)?|bset(Equal)?)|quareSu(perset(Equal)?|bset(Equal)?))|Hump(DownHump|Equal)|Nested(GreaterGreater|LessLess)|C(ongruent|upCap)|Tilde(Tilde|Equal|FullEqual)?|DoubleVerticalBar|Precedes(SlantEqual|Equal)?|E(qual(Tilde)?|lement|xists)|VerticalBar|Le(ss(Greater|SlantEqual|Tilde|Equal|Less)?|ftTriangle(Bar|Equal)?))?|pf)|u|e(sted(GreaterGreater|LessLess)|wLine|gative(MediumSpace|Thi(nSpace|ckSpace)|VeryThinSpace))|Jcy|fr|acute))\\n\t\t\t\t\t\t  | (o(s(cr|ol|lash)|h(m|bar)|c(y|ir(c)?)|ti(lde|mes(as)?)|S|int|opf|d(sold|iv|ot|ash|blac)|uml|p(erp|lus|ar)|elig|vbar|f(cir|r)|l(c(ir|ross)|t|ine|arr)|a(st|cute)|r(slope|igof|or|d(er(of)?|f|m)?|v|arr)?|g(t|on|rave)|m(i(nus|cron|d)|ega|acr))|O(s(cr|lash)|c(y|irc)|ti(lde|mes)|opf|dblac|uml|penCurly(DoubleQuote|Quote)|ver(B(ar|rac(e|ket))|Parenthesis)|fr|Elig|acute|r|grave|m(icron|ega|acr)))\\n\t\t\t\t\t\t  | (p(s(cr|i)|h(i(v)?|one|mmat)|cy|i(tchfork|v)?|o(intint|und|pf)|uncsp|er(cnt|tenk|iod|p|mil)|fr|l(us(sim|cir|two|d(o|u)|e|acir|mn|b)?|an(ck(h)?|kv))|ar(s(im|l)|t|a(llel)?)?|r(sim|n(sim|E|ap)|cue|ime(s)?|o(d|p(to)?|f(surf|line|alar))|urel|e(c(sim|n(sim|eqq|approx)|curlyeq|eq|approx)?)?|E|ap)?|m)|P(s(cr|i)|hi|cy|i|o(incareplane|pf)|fr|lusMinus|artialD|r(ime|o(duct|portion(al)?)|ecedes(SlantEqual|Tilde|Equal)?)?))\\n\t\t\t\t\t\t  | (q(scr|int|opf|u(ot|est(eq)?|at(int|ernions))|prime|fr)|Q(scr|opf|UOT|fr))\\n\t\t\t\t\t\t  | (R(s(h|cr)|ho|c(y|edil|aron)|Barr|ight(Ceiling|T(ee(Vector|Arrow)?|riangle(Bar|Equal)?)|Do(ubleBracket|wn(TeeVector|Vector(Bar)?))|Up(TeeVector|DownVector|Vector(Bar)?)|Vector(Bar)?|arrow|Floor|A(ngleBracket|rrow(Bar|LeftArrow)?))|o(undImplies|pf)|uleDelayed|e(verse(UpEquilibrium|E(quilibrium|lement)))?|fr|EG|a(ng|cute|rr(tl)?)|rightarrow)|r(s(h|cr|q(uo(r)?|b)|aquo)|h(o(v)?|ar(d|u(l)?))|nmid|c(y|ub|e(il|dil)|aron)|Barr|t(hree|imes|ri(e|f|ltri)?)|i(singdotseq|ng|ght(squigarrow|harpoon(down|up)|threetimes|left(harpoons|arrows)|arrow(tail)?|rightarrows))|Har|o(times|p(f|lus|ar)|a(ng|rr)|brk)|d(sh|ca|quo(r)?|ldhar)|uluhar|p(polint|ar(gt)?)|e(ct|al(s|ine|part)?|g)|f(isht|loor|r)|l(har|arr|m)|a(ng(d|e|le)?|c(ute|e)|t(io(nals)?|ail)|dic|emptyv|quo|rr(sim|hk|c|tl|pl|fs|w|lp|ap|b(fs)?)?)|rarr|x|moust(ache)?|b(arr|r(k(sl(d|u)|e)|ac(e|k))|brk)|A(tail|arr|rr)))\\n\t\t\t\t\t\t  | (s(s(cr|tarf|etmn|mile)|h(y|c(hcy|y)|ort(parallel|mid)|arp)|c(sim|y|n(sim|E|ap)|cue|irc|polint|e(dil)?|E|a(p|ron))?|t(ar(f)?|r(ns|aight(phi|epsilon)))|i(gma(v|f)?|m(ne|dot|plus|e(q)?|l(E)?|rarr|g(E)?)?)|zlig|o(pf|ftcy|l(b(ar)?)?)|dot(e|b)?|u(ng|cc(sim|n(sim|eqq|approx)|curlyeq|eq|approx)?|p(s(im|u(p|b)|et(neq(q)?|eq(q)?)?)|hs(ol|ub)|1|n(e|E)|2|d(sub|ot)|3|plus|e(dot)?|E|larr|mult)?|m|b(s(im|u(p|b)|et(neq(q)?|eq(q)?)?)|n(e|E)|dot|plus|e(dot)?|E|rarr|mult)?)|pa(des(uit)?|r)|e(swar|ct|tm(n|inus)|ar(hk|r(ow)?)|xt|mi|Arr)|q(su(p(set(eq)?|e)?|b(set(eq)?|e)?)|c(up(s)?|ap(s)?)|u(f|ar(e|f))?)|fr(own)?|w(nwar|ar(hk|r(ow)?)|Arr)|larr|acute|rarr|m(t(e(s)?)?|i(d|le)|eparsl|a(shp|llsetminus))|bquo)|S(scr|hort(RightArrow|DownArrow|UpArrow|LeftArrow)|c(y|irc|edil|aron)?|tar|igma|H(cy|CHcy)|opf|u(c(hThat|ceeds(SlantEqual|Tilde|Equal)?)|p(set|erset(Equal)?)?|m|b(set(Equal)?)?)|OFTcy|q(uare(Su(perset(Equal)?|bset(Equal)?)|Intersection|Union)?|rt)|fr|acute|mallCircle))\\n\t\t\t\t\t\t  | (t(s(hcy|c(y|r)|trok)|h(i(nsp|ck(sim|approx))|orn|e(ta(sym|v)?|re(4|fore))|k(sim|ap))|c(y|edil|aron)|i(nt|lde|mes(d|b(ar)?)?)|o(sa|p(cir|f(ork)?|bot)?|ea)|dot|prime|elrec|fr|w(ixt|ohead(leftarrow|rightarrow))|a(u|rget)|r(i(sb|time|dot|plus|e|angle(down|q|left(eq)?|right(eq)?)?|minus)|pezium|ade)|brk)|T(s(cr|trok)|RADE|h(i(nSpace|ckSpace)|e(ta|refore))|c(y|edil|aron)|S(cy|Hcy)|ilde(Tilde|Equal|FullEqual)?|HORN|opf|fr|a(u|b)|ripleDot))\\n\t\t\t\t\t\t  | (u(scr|h(ar(l|r)|blk)|c(y|irc)|t(ilde|dot|ri(f)?)|Har|o(pf|gon)|d(har|arr|blac)|u(arr|ml)|p(si(h|lon)?|harpoon(left|right)|downarrow|uparrows|lus|arrow)|f(isht|r)|wangle|l(c(orn(er)?|rop)|tri)|a(cute|rr)|r(c(orn(er)?|rop)|tri|ing)|grave|m(l|acr)|br(cy|eve)|Arr)|U(scr|n(ion(Plus)?|der(B(ar|rac(e|ket))|Parenthesis))|c(y|irc)|tilde|o(pf|gon)|dblac|uml|p(si(lon)?|downarrow|Tee(Arrow)?|per(RightArrow|LeftArrow)|DownArrow|Equilibrium|arrow|Arrow(Bar|DownArrow)?)|fr|a(cute|rr(ocir)?)|ring|grave|macr|br(cy|eve)))\\n\t\t\t\t\t\t  | (v(s(cr|u(pn(e|E)|bn(e|E)))|nsu(p|b)|cy|Bar(v)?|zigzag|opf|dash|prop|e(e(eq|bar)?|llip|r(t|bar))|Dash|fr|ltri|a(ngrt|r(s(igma|u(psetneq(q)?|bsetneq(q)?))|nothing|t(heta|riangle(left|right))|p(hi|i|ropto)|epsilon|kappa|r(ho)?))|rtri|Arr)|V(scr|cy|opf|dash(l)?|e(e|r(yThinSpace|t(ical(Bar|Separator|Tilde|Line))?|bar))|Dash|vdash|fr|bar))\\n\t\t\t\t\t\t  | (w(scr|circ|opf|p|e(ierp|d(ge(q)?|bar))|fr|r(eath)?)|W(scr|circ|opf|edge|fr))\\n\t\t\t\t\t\t  | (X(scr|i|opf|fr)|x(s(cr|qcup)|h(arr|Arr)|nis|c(irc|up|ap)|i|o(time|dot|p(f|lus))|dtri|u(tri|plus)|vee|fr|wedge|l(arr|Arr)|r(arr|Arr)|map))\\n\t\t\t\t\t\t  | (y(scr|c(y|irc)|icy|opf|u(cy|ml)|en|fr|ac(y|ute))|Y(scr|c(y|irc)|opf|uml|Icy|Ucy|fr|acute|Acy))\\n\t\t\t\t\t\t  | (z(scr|hcy|c(y|aron)|igrarr|opf|dot|e(ta|etrf)|fr|w(nj|j)|acute)|Z(scr|c(y|aron)|Hcy|opf|dot|e(ta|roWidthSpace)|fr|acute))\\n\t\t\t\t\t\t)\\n\t\t\t\t\t\t(;)\\n\t\t\t\t\t\", \"name\": \"constant.character.entity.named.$2.html\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.html\" }, \"3\": { \"name\": \"punctuation.definition.entity.html\" } }, \"match\": \"(&)#[0-9]+(;)\", \"name\": \"constant.character.entity.numeric.decimal.html\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.html\" }, \"3\": { \"name\": \"punctuation.definition.entity.html\" } }, \"match\": \"(&)#[xX][0-9a-fA-F]+(;)\", \"name\": \"constant.character.entity.numeric.hexadecimal.html\" }, { \"match\": \"&(?=[a-zA-Z0-9]+;)\", \"name\": \"invalid.illegal.ambiguous-ampersand.html\" }] }, \"math\": { \"patterns\": [{ \"begin\": `(?i)(<)(math)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.structure.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.structure.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.structure.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }], \"repository\": { \"attribute\": { \"patterns\": [{ \"begin\": \"(s(hift|ymmetric|cript(sizemultiplier|level|minsize)|t(ackalign|retchy)|ide|u(pscriptshift|bscriptshift)|e(parator(s)?|lection)|rc)|h(eight|ref)|n(otation|umalign)|c(haralign|olumn(spa(n|cing)|width|lines|align)|lose|rossout)|i(n(dent(shift(first|last)?|target|align(first|last)?)|fixlinebreakstyle)|d)|o(pen|verflow)|d(i(splay(style)?|r)|e(nomalign|cimalpoint|pth))|position|e(dge|qual(columns|rows))|voffset|f(orm|ence|rame(spacing)?)|width|l(space|ine(thickness|leading|break(style|multchar)?)|o(ngdivstyle|cation)|ength|quote|argeop)|a(c(cent(under)?|tiontype)|l(t(text|img(-(height|valign|width))?)|ign(mentscope)?))|r(space|ow(spa(n|cing)|lines|align)|quote)|groupalign|x(link:href|mlns)|m(in(size|labelspacing)|ovablelimits|a(th(size|color|variant|background)|xsize))|bevelled)(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"begin\": `([^\\\\x{0020}\"'<>/=\\\\x{0000}-\\\\x{001F}\\\\x{007F}-\\\\x{009F}\\\\x{FDD0}-\\\\x{FDEF}\\\\x{FFFE}\\\\x{FFFF}\\\\x{1FFFE}\\\\x{1FFFF}\\\\x{2FFFE}\\\\x{2FFFF}\\\\x{3FFFE}\\\\x{3FFFF}\\\\x{4FFFE}\\\\x{4FFFF}\\\\x{5FFFE}\\\\x{5FFFF}\\\\x{6FFFE}\\\\x{6FFFF}\\\\x{7FFFE}\\\\x{7FFFF}\\\\x{8FFFE}\\\\x{8FFFF}\\\\x{9FFFE}\\\\x{9FFFF}\\\\x{AFFFE}\\\\x{AFFFF}\\\\x{BFFFE}\\\\x{BFFFF}\\\\x{CFFFE}\\\\x{CFFFF}\\\\x{DFFFE}\\\\x{DFFFF}\\\\x{EFFFE}\\\\x{EFFFF}\\\\x{FFFFE}\\\\x{FFFFF}\\\\x{10FFFE}\\\\x{10FFFF}]+)`, \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"Anything else that is valid\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.unrecognized.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"match\": \"[^\\\\s>]+\", \"name\": \"invalid.illegal.character-not-allowed-here.html\" }] }, \"tags\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#cdata\" }, { \"captures\": { \"0\": { \"name\": \"meta.tag.structure.math.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(annotation|annotation-xml|semantics|menclose|merror|mfenced|mfrac|mpadded|mphantom|mroot|mrow|msqrt|mstyle|mmultiscripts|mover|mprescripts|msub|msubsup|msup|munder|munderover|none|mlabeledtr|mtable|mtd|mtr|mlongdiv|mscarries|mscarry|msgroup|msline|msrow|mstack|maction)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.structure.math.$2.html\" }, { \"begin\": `(?i)(<)(annotation|annotation-xml|semantics|menclose|merror|mfenced|mfrac|mpadded|mphantom|mroot|mrow|msqrt|mstyle|mmultiscripts|mover|mprescripts|msub|msubsup|msup|munder|munderover|none|mlabeledtr|mtable|mtd|mtr|mlongdiv|mscarries|mscarry|msgroup|msline|msrow|mstack|maction)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.structure.math.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.structure.math.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.structure.math.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.inline.math.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(mi|mn|mo|ms|mspace|mtext|maligngroup|malignmark)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.inline.math.$2.html\" }, { \"begin\": `(?i)(<)(mi|mn|mo|ms|mspace|mtext|maligngroup|malignmark)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.inline.math.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.inline.math.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.inline.math.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.object.math.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(mglyph)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.object.math.$2.html\" }, { \"begin\": `(?i)(<)(mglyph)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.object.math.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.object.math.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.object.math.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.other.invalid.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" }, \"4\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"6\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(([\\\\w:]+))(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.other.invalid.html\" }, { \"begin\": `(?i)(<)((\\\\w[^\\\\s>]*))(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.other.invalid.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" }, \"4\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"6\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)((\\\\2))\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.other.invalid.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.other.invalid.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.invalid.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"include\": \"#tags-invalid\" }] } } }, \"svg\": { \"patterns\": [{ \"begin\": `(?i)(<)(svg)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.structure.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.structure.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.structure.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }], \"repository\": { \"attribute\": { \"patterns\": [{ \"begin\": \"(s(hape-rendering|ystemLanguage|cale|t(yle|itchTiles|op-(color|opacity)|dDeviation|em(h|v)|artOffset|r(i(ng|kethrough-(thickness|position))|oke(-(opacity|dash(offset|array)|width|line(cap|join)|miterlimit))?))|urfaceScale|p(e(cular(Constant|Exponent)|ed)|acing|readMethod)|eed|lope)|h(oriz-(origin-x|adv-x)|eight|anging|ref(lang)?)|y(1|2|ChannelSelector)?|n(umOctaves|ame)|c(y|o(ntentS(criptType|tyleType)|lor(-(interpolation(-filters)?|profile|rendering))?)|ursor|l(ip(-(path|rule)|PathUnits)?|ass)|a(p-height|lcMode)|x)|t(ype|o|ext(-(decoration|anchor|rendering)|Length)|a(rget(X|Y)?|b(index|leValues))|ransform)|i(n(tercept|2)?|d(eographic)?|mage-rendering)|z(oomAndPan)?|o(p(erator|acity)|ver(flow|line-(thickness|position))|ffset|r(i(ent(ation)?|gin)|der))|d(y|i(splay|visor|ffuseConstant|rection)|ominant-baseline|ur|e(scent|celerate)|x)?|u(1|n(i(code(-(range|bidi))?|ts-per-em)|derline-(thickness|position))|2)|p(ing|oint(s(At(X|Y|Z))?|er-events)|a(nose-1|t(h(Length)?|tern(ContentUnits|Transform|Units))|int-order)|r(imitiveUnits|eserveA(spectRatio|lpha)))|e(n(d|able-background)|dgeMode|levation|x(ternalResourcesRequired|ponent))|v(i(sibility|ew(Box|Target))|-(hanging|ideographic|alphabetic|mathematical)|e(ctor-effect|r(sion|t-(origin-(y|x)|adv-y)))|alues)|k(1|2|3|e(y(Splines|Times|Points)|rn(ing|el(Matrix|UnitLength)))|4)?|f(y|il(ter(Res|Units)?|l(-(opacity|rule))?)|o(nt-(s(t(yle|retch)|ize(-adjust)?)|variant|family|weight)|rmat)|lood-(color|opacity)|r(om)?|x)|w(idth(s)?|ord-spacing|riting-mode)|l(i(ghting-color|mitingConeAngle)|ocal|e(ngthAdjust|tter-spacing)|ang)|a(scent|cc(umulate|ent-height)|ttribute(Name|Type)|zimuth|dditive|utoReverse|l(ignment-baseline|phabetic|lowReorder)|rabic-form|mplitude)|r(y|otate|e(s(tart|ult)|ndering-intent|peat(Count|Dur)|quired(Extensions|Features)|f(X|Y|errerPolicy)|l)|adius|x)?|g(1|2|lyph(Ref|-(name|orientation-(horizontal|vertical)))|radient(Transform|Units))|x(1|2|ChannelSelector|-height|link:(show|href|t(ype|itle)|a(ctuate|rcrole)|role)|ml:(space|lang|base))?|m(in|ode|e(thod|dia)|a(sk(ContentUnits|Units)?|thematical|rker(Height|-(start|end|mid)|Units|Width)|x))|b(y|ias|egin|ase(Profile|line-shift|Frequency)|box))(?![\\\\w:-])\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"begin\": `([^\\\\x{0020}\"'<>/=\\\\x{0000}-\\\\x{001F}\\\\x{007F}-\\\\x{009F}\\\\x{FDD0}-\\\\x{FDEF}\\\\x{FFFE}\\\\x{FFFF}\\\\x{1FFFE}\\\\x{1FFFF}\\\\x{2FFFE}\\\\x{2FFFF}\\\\x{3FFFE}\\\\x{3FFFF}\\\\x{4FFFE}\\\\x{4FFFF}\\\\x{5FFFE}\\\\x{5FFFF}\\\\x{6FFFE}\\\\x{6FFFF}\\\\x{7FFFE}\\\\x{7FFFF}\\\\x{8FFFE}\\\\x{8FFFF}\\\\x{9FFFE}\\\\x{9FFFF}\\\\x{AFFFE}\\\\x{AFFFF}\\\\x{BFFFE}\\\\x{BFFFF}\\\\x{CFFFE}\\\\x{CFFFF}\\\\x{DFFFE}\\\\x{DFFFF}\\\\x{EFFFE}\\\\x{EFFFF}\\\\x{FFFFE}\\\\x{FFFFF}\\\\x{10FFFE}\\\\x{10FFFF}]+)`, \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.html\" } }, \"comment\": \"Anything else that is valid\", \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.unrecognized.$1.html\", \"patterns\": [{ \"include\": \"#attribute-interior\" }] }, { \"match\": \"[^\\\\s>]+\", \"name\": \"invalid.illegal.character-not-allowed-here.html\" }] }, \"tags\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#cdata\" }, { \"captures\": { \"0\": { \"name\": \"meta.tag.metadata.svg.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(color-profile|desc|metadata|script|style|title)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.metadata.svg.$2.html\" }, { \"begin\": `(?i)(<)(color-profile|desc|metadata|script|style|title)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.svg.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.svg.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.metadata.svg.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.structure.svg.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(animateMotion|clipPath|defs|feComponentTransfer|feDiffuseLighting|feMerge|feSpecularLighting|filter|g|hatch|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|pattern|radialGradient|switch|text|textPath)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.structure.svg.$2.html\" }, { \"begin\": `(?i)(<)(animateMotion|clipPath|defs|feComponentTransfer|feDiffuseLighting|feMerge|feSpecularLighting|filter|g|hatch|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|pattern|radialGradient|switch|text|textPath)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.structure.svg.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.structure.svg.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.structure.svg.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.inline.svg.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(a|animate|discard|feBlend|feColorMatrix|feComposite|feConvolveMatrix|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feMergeNode|feMorphology|feOffset|fePointLight|feSpotLight|feTile|feTurbulence|hatchPath|mpath|set|solidcolor|stop|tspan)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.inline.svg.$2.html\" }, { \"begin\": `(?i)(<)(a|animate|discard|feBlend|feColorMatrix|feComposite|feConvolveMatrix|feDisplacementMap|feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur|feMergeNode|feMorphology|feOffset|fePointLight|feSpotLight|feTile|feTurbulence|hatchPath|mpath|set|solidcolor|stop|tspan)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.inline.svg.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.inline.svg.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.inline.svg.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.object.svg.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(circle|ellipse|feImage|foreignObject|image|line|path|polygon|polyline|rect|symbol|use|view)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.object.svg.$2.html\" }, { \"begin\": `(?i)(<)(a|circle|ellipse|feImage|foreignObject|image|line|path|polygon|polyline|rect|symbol|use|view)(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.object.svg.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)(\\\\2)\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.object.svg.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.object.svg.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.other.svg.$2.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" }, \"4\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"6\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)((altGlyph|altGlyphDef|altGlyphItem|animateColor|animateTransform|cursor|font|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|glyph|glyphRef|hkern|missing-glyph|tref|vkern))(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.other.svg.$2.html\" }, { \"begin\": `(?i)(<)((altGlyph|altGlyphDef|altGlyphItem|animateColor|animateTransform|cursor|font|font-face|font-face-format|font-face-name|font-face-src|font-face-uri|glyph|glyphRef|hkern|missing-glyph|tref|vkern))(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.other.svg.$2.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" }, \"4\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"6\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)((\\\\2))\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.other.svg.$2.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.other.svg.$2.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.tag.other.invalid.void.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" }, \"4\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"6\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"match\": `(?i)(<)(([\\\\w:]+))(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(/>))`, \"name\": \"meta.element.other.invalid.html\" }, { \"begin\": `(?i)(<)((\\\\w[^\\\\s>]*))(?=\\\\s|/?>)(?:(([^\"'>]|\"[^\"]*\"|'[^']*')*)(>))?`, \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.other.invalid.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" }, \"4\": { \"patterns\": [{ \"include\": \"#attribute\" }] }, \"6\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?i)(</)((\\\\2))\\\\s*(>)|(/>)|(?=</\\\\w+)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.other.invalid.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.element.other.invalid.html\", \"patterns\": [{ \"begin\": \"(?<!>)\\\\G\", \"end\": \"(?=/>)|>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.invalid.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#tags\" }] }, { \"include\": \"#tags-invalid\" }] } } }, \"tags-invalid\": { \"patterns\": [{ \"begin\": \"(</?)((\\\\w[^\\\\s>]*))(?<!/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.unrecognized-tag.html\" } }, \"end\": \"((?: ?/)?>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.$2.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }] }, \"tags-valid\": { \"patterns\": [{ \"begin\": \"(^[ \\\\t]+)?(?=<(?i:style)\\\\b(?!-))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.embedded.leading.html\" } }, \"end\": \"(?!\\\\G)([ \\\\t]*$\\\\n?)?\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.embedded.trailing.html\" } }, \"patterns\": [{ \"begin\": \"(?i)(<)(style)(?=\\\\s|/?>)\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.style.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"(?i)((<)/)(style)\\\\s*(>)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.style.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"source.css-ignored-vscode\" }, \"3\": { \"name\": \"entity.name.tag.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": \"\\\\G\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(>)\", \"name\": \"meta.tag.metadata.style.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?!\\\\G)\", \"end\": \"(?=</(?i:style))\", \"name\": \"source.css\", \"patterns\": [{ \"include\": \"source.css\" }] }] }] }, { \"begin\": \"(^[ \\\\t]+)?(?=<(?i:script)\\\\b(?!-))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.embedded.leading.html\" } }, \"end\": \"(?!\\\\G)([ \\\\t]*$\\\\n?)?\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.embedded.trailing.html\" } }, \"patterns\": [{ \"begin\": \"(<)((?i:script))\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.script.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"(/)((?i:script))(>)\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.script.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(?=/)\", \"patterns\": [{ \"begin\": \"(>)\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.script.start.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"((<))(?=/(?i:script))\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.script.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"source.js-ignored-vscode\" } }, \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(?=</(?i:script))\", \"name\": \"source.js\", \"patterns\": [{ \"begin\": \"(^[ \\\\t]+)?(?=//)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.js\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"end\": \"(?=<\\/script)|\\\\n\", \"name\": \"comment.line.double-slash.js\" }] }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.js\" } }, \"end\": \"\\\\*/|(?=<\\/script)\", \"name\": \"comment.block.js\" }, { \"include\": \"source.js\" }] }] }, { \"begin\": \"\\\\G\", \"end\": `(?ix:\n\t\t\t\t\t\t\t\t\t\t\t\t(?=>\t\t\t\t\t\t\t\t\t\t\t# Tag without type attribute\n\t\t\t\t\t\t\t\t\t\t\t\t  | type(?=[\\\\s=])\n\t\t\t\t\t\t\t\t\t\t\t\t  \t(?!\\\\s*=\\\\s*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\t\t\t\t\t\t\t\t# Empty\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | \"\"\t\t\t\t\t\t\t\t\t#   Values\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | ('|\"|)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext/\t\t\t\t\t\t\t# Text mime-types\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript(1\\\\.[0-5])?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | x-javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | jscript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | livescript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-)?ecmascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | babel\t\t\t\t\t\t# Javascript variant currently\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t#   recognized as such\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | application/\t\t\t\t\t# Application mime-types\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(x-)?javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-)?ecmascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | module\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\\\\s\"'>]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)`, \"name\": \"meta.tag.metadata.script.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": `(?ix:\n\t\t\t\t\t\t\t\t\t\t\t\t(?=\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype\\\\s*=\\\\s*\n\t\t\t\t\t\t\t\t\t\t\t\t\t('|\"|)\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext/\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tx-handlebars\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-(handlebars-)?|ng-)?template\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | html\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\\\\s\"'>]\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)`, \"end\": \"((<))(?=/(?i:script))\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.script.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"text.html.basic\" } }, \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.script.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?!\\\\G)\", \"end\": \"(?=</(?i:script))\", \"name\": \"text.html.basic\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, { \"begin\": \"(?=(?i:type))\", \"end\": \"(<)(?=/(?i:script))\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.script.end.html\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" } }, \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.script.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?!\\\\G)\", \"end\": \"(?=</(?i:script))\", \"name\": \"source.unknown\" }] }] }] }] }, { \"begin\": \"(?i)(<)(base|link|meta)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.$2.void.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(noscript|title)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)(noscript|title)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(col|hr|input)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$2.void.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(address|article|aside|blockquote|body|button|caption|colgroup|datalist|dd|details|dialog|div|dl|dt|fieldset|figcaption|figure|footer|form|head|header|hgroup|html|h[1-6]|label|legend|li|main|map|menu|meter|nav|ol|optgroup|option|output|p|pre|progress|section|select|slot|summary|table|tbody|td|template|textarea|tfoot|th|thead|tr|ul)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)(address|article|aside|blockquote|body|button|caption|colgroup|datalist|dd|details|dialog|div|dl|dt|fieldset|figcaption|figure|footer|form|head|header|hgroup|html|h[1-6]|label|legend|li|main|map|menu|meter|nav|ol|optgroup|option|output|p|pre|progress|section|select|slot|summary|table|tbody|td|template|textarea|tfoot|th|thead|tr|ul)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(area|br|wbr)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.$2.void.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(a|abbr|b|bdi|bdo|cite|code|data|del|dfn|em|i|ins|kbd|mark|q|rp|rt|ruby|s|samp|small|span|strong|sub|sup|time|u|var)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)(a|abbr|b|bdi|bdo|cite|code|data|del|dfn|em|i|ins|kbd|mark|q|rp|rt|ruby|s|samp|small|span|strong|sub|sup|time|u|var)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(embed|img|param|source|track)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.$2.void.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)(audio|canvas|iframe|object|picture|video)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)(audio|canvas|iframe|object|picture|video)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)((basefont|isindex))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.metadata.$2.void.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)((center|frameset|noembed|noframes))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)((center|frameset|noembed|noframes))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)((acronym|big|blink|font|strike|tt|xmp))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)((acronym|big|blink|font|strike|tt|xmp))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.inline.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)((frame))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.$2.void.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)((applet))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)((applet))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.deprecated.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.object.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(<)((dir|keygen|listing|menuitem|plaintext|spacer))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.no-longer-supported.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.$2.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(?i)(</)((dir|keygen|listing|menuitem|plaintext|spacer))(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"invalid.illegal.no-longer-supported.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.$2.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"include\": \"#math\" }, { \"include\": \"#svg\" }, { \"begin\": \"(<)([a-zA-Z][.0-9_a-zA-Z\\\\x{00B7}\\\\x{00C0}-\\\\x{00D6}\\\\x{00D8}-\\\\x{00F6}\\\\x{00F8}-\\\\x{037D}\\\\x{037F}-\\\\x{1FFF}\\\\x{200C}-\\\\x{200D}\\\\x{203F}-\\\\x{2040}\\\\x{2070}-\\\\x{218F}\\\\x{2C00}-\\\\x{2FEF}\\\\x{3001}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFFD}\\\\x{10000}-\\\\x{EFFFF}]*-[\\\\-.0-9_a-zA-Z\\\\x{00B7}\\\\x{00C0}-\\\\x{00D6}\\\\x{00D8}-\\\\x{00F6}\\\\x{00F8}-\\\\x{037D}\\\\x{037F}-\\\\x{1FFF}\\\\x{200C}-\\\\x{200D}\\\\x{203F}-\\\\x{2040}\\\\x{2070}-\\\\x{218F}\\\\x{2C00}-\\\\x{2FEF}\\\\x{3001}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFFD}\\\\x{10000}-\\\\x{EFFFF}]*)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.custom.start.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }, { \"begin\": \"(</)([a-zA-Z][.0-9_a-zA-Z\\\\x{00B7}\\\\x{00C0}-\\\\x{00D6}\\\\x{00D8}-\\\\x{00F6}\\\\x{00F8}-\\\\x{037D}\\\\x{037F}-\\\\x{1FFF}\\\\x{200C}-\\\\x{200D}\\\\x{203F}-\\\\x{2040}\\\\x{2070}-\\\\x{218F}\\\\x{2C00}-\\\\x{2FEF}\\\\x{3001}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFFD}\\\\x{10000}-\\\\x{EFFFF}]*-[\\\\-.0-9_a-zA-Z\\\\x{00B7}\\\\x{00C0}-\\\\x{00D6}\\\\x{00D8}-\\\\x{00F6}\\\\x{00F8}-\\\\x{037D}\\\\x{037F}-\\\\x{1FFF}\\\\x{200C}-\\\\x{200D}\\\\x{203F}-\\\\x{2040}\\\\x{2070}-\\\\x{218F}\\\\x{2C00}-\\\\x{2FEF}\\\\x{3001}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFFD}\\\\x{10000}-\\\\x{EFFFF}]*)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.custom.end.html\", \"patterns\": [{ \"include\": \"#attribute\" }] }] }, \"xml-processing\": { \"begin\": \"(<\\\\?)(xml)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"(\\\\?>)\", \"name\": \"meta.tag.metadata.processing.xml.html\", \"patterns\": [{ \"include\": \"#attribute\" }] } }, \"scopeName\": \"text.html.basic\", \"embeddedLangs\": [\"javascript\", \"css\"] });\nvar html = [\n  ...javascript,\n  ...css,\n  lang$l\n];\n\nconst lang$k = Object.freeze({ \"displayName\": \"Markdown\", \"name\": \"markdown\", \"patterns\": [{ \"include\": \"#frontMatter\" }, { \"include\": \"#block\" }], \"repository\": { \"ampersand\": { \"comment\": \"Markdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid.\", \"match\": \"&(?!([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);)\", \"name\": \"meta.other.valid-ampersand.markdown\" }, \"block\": { \"patterns\": [{ \"include\": \"#separator\" }, { \"include\": \"#heading\" }, { \"include\": \"#blockquote\" }, { \"include\": \"#lists\" }, { \"include\": \"#fenced_code_block\" }, { \"include\": \"#raw_block\" }, { \"include\": \"#link-def\" }, { \"include\": \"#html\" }, { \"include\": \"#table\" }, { \"include\": \"#paragraph\" }] }, \"blockquote\": { \"begin\": \"(^|\\\\G)[ ]{0,3}(>) ?\", \"captures\": { \"2\": { \"name\": \"punctuation.definition.quote.begin.markdown\" } }, \"name\": \"markup.quote.markdown\", \"patterns\": [{ \"include\": \"#block\" }], \"while\": \"(^|\\\\G)\\\\s*(>) ?\" }, \"bold\": { \"begin\": \"(?x) (?<open>(\\\\*\\\\*(?=\\\\w)|(?<!\\\\w)\\\\*\\\\*|(?<!\\\\w)\\\\b__))(?=\\\\S) (?=\\n  (\\n    <[^>]*+>              # HTML tags\\n    | (?<raw>`+)([^`]|(?!(?<!`)\\\\k<raw>(?!`))`)*+\\\\k<raw>\\n                      # Raw\\n    | \\\\\\\\[\\\\\\\\`*_{}\\\\[\\\\]()#.!+\\\\->]?+      # Escapes\\n    | \\\\[\\n    (\\n        (?<square>          # Named group\\n          [^\\\\[\\\\]\\\\\\\\]        # Match most chars\\n          | \\\\\\\\.            # Escaped chars\\n          | \\\\[ \\\\g<square>*+ \\\\]    # Nested brackets\\n        )*+\\n      \\\\]\\n      (\\n        (              # Reference Link\\n          [ ]?          # Optional space\\n          \\\\[[^\\\\]]*+\\\\]        # Ref name\\n        )\\n        | (              # Inline Link\\n          \\\\(            # Opening paren\\n            [ \\\\t]*+        # Optional whitespace\\n            <?(.*?)>?      # URL\\n            [ \\\\t]*+        # Optional whitespace\\n            (          # Optional Title\\n              (?<title>['\\\"])\\n              (.*?)\\n              \\\\k<title>\\n            )?\\n          \\\\)\\n        )\\n      )\\n    )\\n    | (?!(?<=\\\\S)\\\\k<open>).            # Everything besides\\n                      # style closer\\n  )++\\n  (?<=\\\\S)(?=__\\\\b|\\\\*\\\\*)\\\\k<open>                # Close\\n)\\n\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.bold.markdown\" } }, \"end\": \"(?<=\\\\S)(\\\\1)\", \"name\": \"markup.bold.markdown\", \"patterns\": [{ \"applyEndPatternLast\": 1, \"begin\": \"(?=<[^>]*?>)\", \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"text.html.derivative\" }] }, { \"include\": \"#escape\" }, { \"include\": \"#ampersand\" }, { \"include\": \"#bracket\" }, { \"include\": \"#raw\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#image-inline\" }, { \"include\": \"#link-inline\" }, { \"include\": \"#link-inet\" }, { \"include\": \"#link-email\" }, { \"include\": \"#image-ref\" }, { \"include\": \"#link-ref-literal\" }, { \"include\": \"#link-ref\" }, { \"include\": \"#link-ref-shortcut\" }, { \"include\": \"#strikethrough\" }] }, \"bracket\": { \"comment\": \"Markdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid.\", \"match\": \"<(?![a-zA-Z/?\\\\$!])\", \"name\": \"meta.other.valid-bracket.markdown\" }, \"escape\": { \"match\": \"\\\\\\\\[-`*_#+.!(){}\\\\[\\\\]\\\\\\\\>]\", \"name\": \"constant.character.escape.markdown\" }, \"fenced_code_block\": { \"patterns\": [{ \"include\": \"#fenced_code_block_css\" }, { \"include\": \"#fenced_code_block_basic\" }, { \"include\": \"#fenced_code_block_ini\" }, { \"include\": \"#fenced_code_block_java\" }, { \"include\": \"#fenced_code_block_lua\" }, { \"include\": \"#fenced_code_block_makefile\" }, { \"include\": \"#fenced_code_block_perl\" }, { \"include\": \"#fenced_code_block_r\" }, { \"include\": \"#fenced_code_block_ruby\" }, { \"include\": \"#fenced_code_block_php\" }, { \"include\": \"#fenced_code_block_sql\" }, { \"include\": \"#fenced_code_block_vs_net\" }, { \"include\": \"#fenced_code_block_xml\" }, { \"include\": \"#fenced_code_block_xsl\" }, { \"include\": \"#fenced_code_block_yaml\" }, { \"include\": \"#fenced_code_block_dosbatch\" }, { \"include\": \"#fenced_code_block_clojure\" }, { \"include\": \"#fenced_code_block_coffee\" }, { \"include\": \"#fenced_code_block_c\" }, { \"include\": \"#fenced_code_block_cpp\" }, { \"include\": \"#fenced_code_block_diff\" }, { \"include\": \"#fenced_code_block_dockerfile\" }, { \"include\": \"#fenced_code_block_git_commit\" }, { \"include\": \"#fenced_code_block_git_rebase\" }, { \"include\": \"#fenced_code_block_go\" }, { \"include\": \"#fenced_code_block_groovy\" }, { \"include\": \"#fenced_code_block_pug\" }, { \"include\": \"#fenced_code_block_js\" }, { \"include\": \"#fenced_code_block_js_regexp\" }, { \"include\": \"#fenced_code_block_json\" }, { \"include\": \"#fenced_code_block_jsonc\" }, { \"include\": \"#fenced_code_block_less\" }, { \"include\": \"#fenced_code_block_objc\" }, { \"include\": \"#fenced_code_block_swift\" }, { \"include\": \"#fenced_code_block_scss\" }, { \"include\": \"#fenced_code_block_perl6\" }, { \"include\": \"#fenced_code_block_powershell\" }, { \"include\": \"#fenced_code_block_python\" }, { \"include\": \"#fenced_code_block_julia\" }, { \"include\": \"#fenced_code_block_regexp_python\" }, { \"include\": \"#fenced_code_block_rust\" }, { \"include\": \"#fenced_code_block_scala\" }, { \"include\": \"#fenced_code_block_shell\" }, { \"include\": \"#fenced_code_block_ts\" }, { \"include\": \"#fenced_code_block_tsx\" }, { \"include\": \"#fenced_code_block_csharp\" }, { \"include\": \"#fenced_code_block_fsharp\" }, { \"include\": \"#fenced_code_block_dart\" }, { \"include\": \"#fenced_code_block_handlebars\" }, { \"include\": \"#fenced_code_block_markdown\" }, { \"include\": \"#fenced_code_block_log\" }, { \"include\": \"#fenced_code_block_erlang\" }, { \"include\": \"#fenced_code_block_elixir\" }, { \"include\": \"#fenced_code_block_latex\" }, { \"include\": \"#fenced_code_block_bibtex\" }, { \"include\": \"#fenced_code_block_twig\" }, { \"include\": \"#fenced_code_block_unknown\" }] }, \"fenced_code_block_basic\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(html|htm|shtml|xhtml|inc|tmpl|tpl)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.html\", \"patterns\": [{ \"include\": \"text.html.basic\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_bibtex\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(bibtex)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.bibtex\", \"patterns\": [{ \"include\": \"text.bibtex\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_c\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(c|h)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.c\", \"patterns\": [{ \"include\": \"source.c\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_clojure\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(clj|cljs|clojure)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.clojure\", \"patterns\": [{ \"include\": \"source.clojure\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_coffee\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(coffee|Cakefile|coffee.erb)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.coffee\", \"patterns\": [{ \"include\": \"source.coffee\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_cpp\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(cpp|c\\\\+\\\\+|cxx)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.cpp source.cpp\", \"patterns\": [{ \"include\": \"source.cpp\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_csharp\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(cs|csharp|c#)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.csharp\", \"patterns\": [{ \"include\": \"source.cs\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_css\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(css|css.erb)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.css\", \"patterns\": [{ \"include\": \"source.css\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_dart\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(dart)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.dart\", \"patterns\": [{ \"include\": \"source.dart\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_diff\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(patch|diff|rej)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.diff\", \"patterns\": [{ \"include\": \"source.diff\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_dockerfile\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(dockerfile|Dockerfile)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.dockerfile\", \"patterns\": [{ \"include\": \"source.dockerfile\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_dosbatch\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(bat|batch)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.dosbatch\", \"patterns\": [{ \"include\": \"source.batchfile\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_elixir\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(elixir)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.elixir\", \"patterns\": [{ \"include\": \"source.elixir\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_erlang\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(erlang)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.erlang\", \"patterns\": [{ \"include\": \"source.erlang\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_fsharp\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(fs|fsharp|f#)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.fsharp\", \"patterns\": [{ \"include\": \"source.fsharp\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_git_commit\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(COMMIT_EDITMSG|MERGE_MSG)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.git_commit\", \"patterns\": [{ \"include\": \"text.git-commit\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_git_rebase\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(git-rebase-todo)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.git_rebase\", \"patterns\": [{ \"include\": \"text.git-rebase\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_go\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(go|golang)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.go\", \"patterns\": [{ \"include\": \"source.go\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_groovy\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(groovy|gvy)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.groovy\", \"patterns\": [{ \"include\": \"source.groovy\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_handlebars\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(handlebars|hbs)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.handlebars\", \"patterns\": [{ \"include\": \"text.html.handlebars\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_ini\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(ini|conf)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.ini\", \"patterns\": [{ \"include\": \"source.ini\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_java\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(java|bsh)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.java\", \"patterns\": [{ \"include\": \"source.java\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_js\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(js|jsx|javascript|es6|mjs|cjs|dataviewjs|\\\\{\\\\.js.+?\\\\})((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.javascript\", \"patterns\": [{ \"include\": \"source.js\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_js_regexp\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(regexp)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.js_regexp\", \"patterns\": [{ \"include\": \"source.js.regexp\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_json\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.json\", \"patterns\": [{ \"include\": \"source.json\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_jsonc\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(jsonc)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.jsonc\", \"patterns\": [{ \"include\": \"source.json.comments\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_julia\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(julia|\\\\{\\\\.julia.+?\\\\})((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.julia\", \"patterns\": [{ \"include\": \"source.julia\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_latex\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(latex|tex)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.latex\", \"patterns\": [{ \"include\": \"text.tex.latex\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_less\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(less)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.less\", \"patterns\": [{ \"include\": \"source.css.less\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_log\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(log)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.log\", \"patterns\": [{ \"include\": \"text.log\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_lua\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(lua)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.lua\", \"patterns\": [{ \"include\": \"source.lua\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_makefile\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(Makefile|makefile|GNUmakefile|OCamlMakefile)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.makefile\", \"patterns\": [{ \"include\": \"source.makefile\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_markdown\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(markdown|md)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.markdown\", \"patterns\": [{ \"include\": \"text.html.markdown\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_objc\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(objectivec|objective-c|mm|objc|obj-c|m|h)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.objc\", \"patterns\": [{ \"include\": \"source.objc\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_perl\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(perl|pl|pm|pod|t|PL|psgi|vcl)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.perl\", \"patterns\": [{ \"include\": \"source.perl\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_perl6\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(perl6|p6|pl6|pm6|nqp)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.perl6\", \"patterns\": [{ \"include\": \"source.perl.6\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_php\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(php|php3|php4|php5|phpt|phtml|aw|ctp)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.php\", \"patterns\": [{ \"include\": \"text.html.basic\" }, { \"include\": \"source.php\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_powershell\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(powershell|ps1|psm1|psd1)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.powershell\", \"patterns\": [{ \"include\": \"source.powershell\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_pug\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(jade|pug)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.pug\", \"patterns\": [{ \"include\": \"text.pug\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_python\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi|\\\\{\\\\.python.+?\\\\})((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.python\", \"patterns\": [{ \"include\": \"source.python\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_r\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(R|r|s|S|Rprofile|\\\\{\\\\.r.+?\\\\})((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.r\", \"patterns\": [{ \"include\": \"source.r\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_regexp_python\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(re)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.regexp_python\", \"patterns\": [{ \"include\": \"source.regexp.python\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_ruby\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile.lock|Thorfile|Puppetfile)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.ruby\", \"patterns\": [{ \"include\": \"source.ruby\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_rust\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(rust|rs|\\\\{\\\\.rust.+?\\\\})((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.rust\", \"patterns\": [{ \"include\": \"source.rust\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_scala\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(scala|sbt)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.scala\", \"patterns\": [{ \"include\": \"source.scala\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_scss\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(scss)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.scss\", \"patterns\": [{ \"include\": \"source.css.scss\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_shell\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|.textmate_init|\\\\{\\\\.bash.+?\\\\})((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.shellscript\", \"patterns\": [{ \"include\": \"source.shell\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_sql\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(sql|ddl|dml)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.sql\", \"patterns\": [{ \"include\": \"source.sql\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_swift\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(swift)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.swift\", \"patterns\": [{ \"include\": \"source.swift\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_ts\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(typescript|ts)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.typescript\", \"patterns\": [{ \"include\": \"source.ts\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_tsx\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(tsx)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.typescriptreact\", \"patterns\": [{ \"include\": \"source.tsx\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_twig\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(twig)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.twig\", \"patterns\": [{ \"include\": \"source.twig\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_unknown\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?=([^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\" }, \"fenced_code_block_vs_net\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(vb)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.vs_net\", \"patterns\": [{ \"include\": \"source.asp.vb.net\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_xml\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.xml\", \"patterns\": [{ \"include\": \"text.xml\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_xsl\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(xsl|xslt)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.xsl\", \"patterns\": [{ \"include\": \"text.xml.xsl\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"fenced_code_block_yaml\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(yaml|yml)((\\\\s+|:|,|\\\\{|\\\\?)[^`]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"begin\": \"(^|\\\\G)(\\\\s*)(.*)\", \"contentName\": \"meta.embedded.block.yaml\", \"patterns\": [{ \"include\": \"source.yaml\" }], \"while\": \"(^|\\\\G)(?!\\\\s*([`~]{3,})\\\\s*$)\" }] }, \"frontMatter\": { \"begin\": \"\\\\A-{3}\\\\s*$\", \"contentName\": \"meta.embedded.block.frontmatter\", \"end\": \"(^|\\\\G)-{3}|\\\\.{3}\\\\s*$\", \"patterns\": [{ \"include\": \"source.yaml\" }] }, \"heading\": { \"captures\": { \"1\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.heading.markdown\" }, \"2\": { \"name\": \"entity.name.section.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }] }, \"3\": { \"name\": \"punctuation.definition.heading.markdown\" } }, \"match\": \"(#{6})\\\\s+(.*?)(?:\\\\s+(#+))?\\\\s*$\", \"name\": \"heading.6.markdown\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.heading.markdown\" }, \"2\": { \"name\": \"entity.name.section.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }] }, \"3\": { \"name\": \"punctuation.definition.heading.markdown\" } }, \"match\": \"(#{5})\\\\s+(.*?)(?:\\\\s+(#+))?\\\\s*$\", \"name\": \"heading.5.markdown\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.heading.markdown\" }, \"2\": { \"name\": \"entity.name.section.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }] }, \"3\": { \"name\": \"punctuation.definition.heading.markdown\" } }, \"match\": \"(#{4})\\\\s+(.*?)(?:\\\\s+(#+))?\\\\s*$\", \"name\": \"heading.4.markdown\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.heading.markdown\" }, \"2\": { \"name\": \"entity.name.section.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }] }, \"3\": { \"name\": \"punctuation.definition.heading.markdown\" } }, \"match\": \"(#{3})\\\\s+(.*?)(?:\\\\s+(#+))?\\\\s*$\", \"name\": \"heading.3.markdown\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.heading.markdown\" }, \"2\": { \"name\": \"entity.name.section.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }] }, \"3\": { \"name\": \"punctuation.definition.heading.markdown\" } }, \"match\": \"(#{2})\\\\s+(.*?)(?:\\\\s+(#+))?\\\\s*$\", \"name\": \"heading.2.markdown\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.heading.markdown\" }, \"2\": { \"name\": \"entity.name.section.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }] }, \"3\": { \"name\": \"punctuation.definition.heading.markdown\" } }, \"match\": \"(#{1})\\\\s+(.*?)(?:\\\\s+(#+))?\\\\s*$\", \"name\": \"heading.1.markdown\" }] } }, \"match\": \"(?:^|\\\\G)[ ]{0,3}(#{1,6}\\\\s+(.*?)(\\\\s+#{1,6})?\\\\s*)$\", \"name\": \"markup.heading.markdown\" }, \"heading-setext\": { \"patterns\": [{ \"match\": \"^(={3,})(?=[ \\\\t]*$\\\\n?)\", \"name\": \"markup.heading.setext.1.markdown\" }, { \"match\": \"^(-{3,})(?=[ \\\\t]*$\\\\n?)\", \"name\": \"markup.heading.setext.2.markdown\" }] }, \"html\": { \"patterns\": [{ \"begin\": \"(^|\\\\G)\\\\s*(<!--)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.html\" }, \"2\": { \"name\": \"punctuation.definition.comment.html\" } }, \"end\": \"(-->)\", \"name\": \"comment.block.html\" }, { \"begin\": \"(?i)(^|\\\\G)\\\\s*(?=<(script|style|pre)(\\\\s|$|>)(?!.*?</(script|style|pre)>))\", \"end\": \"(?i)(.*)((</)(script|style|pre)(>))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"text.html.derivative\" }] }, \"2\": { \"name\": \"meta.tag.structure.$4.end.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"4\": { \"name\": \"entity.name.tag.html\" }, \"5\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"patterns\": [{ \"begin\": \"(\\\\s*|$)\", \"patterns\": [{ \"include\": \"text.html.derivative\" }], \"while\": \"(?i)^(?!.*</(script|style|pre)>)\" }] }, { \"begin\": \"(?i)(^|\\\\G)\\\\s*(?=</?[a-zA-Z]+[^\\\\s/&gt;]*(\\\\s|$|/?>))\", \"patterns\": [{ \"include\": \"text.html.derivative\" }], \"while\": \"^(?!\\\\s*$)\" }, { \"begin\": \"(^|\\\\G)\\\\s*(?=(<[a-zA-Z0-9\\\\-](/?>|\\\\s.*?>)|</[a-zA-Z0-9\\\\-]>)\\\\s*$)\", \"patterns\": [{ \"include\": \"text.html.derivative\" }], \"while\": \"^(?!\\\\s*$)\" }] }, \"image-inline\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.description.begin.markdown\" }, \"2\": { \"name\": \"string.other.link.description.markdown\" }, \"4\": { \"name\": \"punctuation.definition.link.description.end.markdown\" }, \"5\": { \"name\": \"punctuation.definition.metadata.markdown\" }, \"7\": { \"name\": \"punctuation.definition.link.markdown\" }, \"8\": { \"name\": \"markup.underline.link.image.markdown\" }, \"9\": { \"name\": \"punctuation.definition.link.markdown\" }, \"10\": { \"name\": \"markup.underline.link.image.markdown\" }, \"12\": { \"name\": \"string.other.link.description.title.markdown\" }, \"13\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"14\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"15\": { \"name\": \"string.other.link.description.title.markdown\" }, \"16\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"17\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"18\": { \"name\": \"string.other.link.description.title.markdown\" }, \"19\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"20\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"21\": { \"name\": \"punctuation.definition.metadata.markdown\" } }, \"match\": `(?x)\n  (\\\\!\\\\[)((?<square>[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\.|\\\\[\\\\g<square>*+\\\\])*+)(\\\\])\n                # Match the link text.\n  (\\\\()            # Opening paren for url\n    # The url\n      [ \\\\t]*\n      (\n         (<)((?:\\\\\\\\[<>]|[^<>\\\\n])*)(>)\n         | ((?<url>(?>[^\\\\s()]+)|\\\\(\\\\g<url>*\\\\))*)\n      )\n      [ \\\\t]*\n    (?:\n        ((\\\\().+?(\\\\)))    # Match title in parens\\u2026\n      | ((\").+?(\"))    # or in double quotes\\u2026\n      | ((').+?('))    # or in single quotes.\n    )?            # Title is optional\n    \\\\s*            # Optional whitespace\n  (\\\\))\n`, \"name\": \"meta.image.inline.markdown\" }, \"image-ref\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.description.begin.markdown\" }, \"2\": { \"name\": \"string.other.link.description.markdown\" }, \"4\": { \"name\": \"punctuation.definition.link.description.end.markdown\" }, \"5\": { \"name\": \"punctuation.definition.constant.markdown\" }, \"6\": { \"name\": \"constant.other.reference.link.markdown\" }, \"7\": { \"name\": \"punctuation.definition.constant.markdown\" } }, \"match\": \"(\\\\!\\\\[)((?<square>[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\.|\\\\[\\\\g<square>*+\\\\])*+)(\\\\])[ ]?(\\\\[)(.*?)(\\\\])\", \"name\": \"meta.image.reference.markdown\" }, \"inline\": { \"patterns\": [{ \"include\": \"#ampersand\" }, { \"include\": \"#bracket\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#raw\" }, { \"include\": \"#strikethrough\" }, { \"include\": \"#escape\" }, { \"include\": \"#image-inline\" }, { \"include\": \"#image-ref\" }, { \"include\": \"#link-email\" }, { \"include\": \"#link-inet\" }, { \"include\": \"#link-inline\" }, { \"include\": \"#link-ref\" }, { \"include\": \"#link-ref-literal\" }, { \"include\": \"#link-ref-shortcut\" }] }, \"italic\": { \"begin\": \"(?x) (?<open>(\\\\*(?=\\\\w)|(?<!\\\\w)\\\\*|(?<!\\\\w)\\\\b_))(?=\\\\S)                # Open\\n  (?=\\n    (\\n      <[^>]*+>              # HTML tags\\n      | (?<raw>`+)([^`]|(?!(?<!`)\\\\k<raw>(?!`))`)*+\\\\k<raw>\\n                        # Raw\\n      | \\\\\\\\[\\\\\\\\`*_{}\\\\[\\\\]()#.!+\\\\->]?+      # Escapes\\n      | \\\\[\\n      (\\n          (?<square>          # Named group\\n            [^\\\\[\\\\]\\\\\\\\]        # Match most chars\\n            | \\\\\\\\.            # Escaped chars\\n            | \\\\[ \\\\g<square>*+ \\\\]    # Nested brackets\\n          )*+\\n        \\\\]\\n        (\\n          (              # Reference Link\\n            [ ]?          # Optional space\\n            \\\\[[^\\\\]]*+\\\\]        # Ref name\\n          )\\n          | (              # Inline Link\\n            \\\\(            # Opening paren\\n              [ \\\\t]*+        # Optional whtiespace\\n              <?(.*?)>?      # URL\\n              [ \\\\t]*+        # Optional whtiespace\\n              (          # Optional Title\\n                (?<title>['\\\"])\\n                (.*?)\\n                \\\\k<title>\\n              )?\\n            \\\\)\\n          )\\n        )\\n      )\\n      | \\\\k<open>\\\\k<open>                   # Must be bold closer\\n      | (?!(?<=\\\\S)\\\\k<open>).            # Everything besides\\n                        # style closer\\n    )++\\n    (?<=\\\\S)(?=_\\\\b|\\\\*)\\\\k<open>                # Close\\n  )\\n\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.italic.markdown\" } }, \"end\": \"(?<=\\\\S)(\\\\1)((?!\\\\1)|(?=\\\\1\\\\1))\", \"name\": \"markup.italic.markdown\", \"patterns\": [{ \"applyEndPatternLast\": 1, \"begin\": \"(?=<[^>]*?>)\", \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"text.html.derivative\" }] }, { \"include\": \"#escape\" }, { \"include\": \"#ampersand\" }, { \"include\": \"#bracket\" }, { \"include\": \"#raw\" }, { \"include\": \"#bold\" }, { \"include\": \"#image-inline\" }, { \"include\": \"#link-inline\" }, { \"include\": \"#link-inet\" }, { \"include\": \"#link-email\" }, { \"include\": \"#image-ref\" }, { \"include\": \"#link-ref-literal\" }, { \"include\": \"#link-ref\" }, { \"include\": \"#link-ref-shortcut\" }, { \"include\": \"#strikethrough\" }] }, \"link-def\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.markdown\" }, \"2\": { \"name\": \"constant.other.reference.link.markdown\" }, \"3\": { \"name\": \"punctuation.definition.constant.markdown\" }, \"4\": { \"name\": \"punctuation.separator.key-value.markdown\" }, \"5\": { \"name\": \"punctuation.definition.link.markdown\" }, \"6\": { \"name\": \"markup.underline.link.markdown\" }, \"7\": { \"name\": \"punctuation.definition.link.markdown\" }, \"8\": { \"name\": \"markup.underline.link.markdown\" }, \"9\": { \"name\": \"string.other.link.description.title.markdown\" }, \"10\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"11\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"12\": { \"name\": \"string.other.link.description.title.markdown\" }, \"13\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"14\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"15\": { \"name\": \"string.other.link.description.title.markdown\" }, \"16\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"17\": { \"name\": \"punctuation.definition.string.end.markdown\" } }, \"match\": `(?x)\n  \\\\s*            # Leading whitespace\n  (\\\\[)([^]]+?)(\\\\])(:)    # Reference name\n  [ \\\\t]*          # Optional whitespace\n  (?:(<)((?:\\\\\\\\[<>]|[^<>\\\\n])*)(>)|(\\\\S+?))      # The url\n  [ \\\\t]*          # Optional whitespace\n  (?:\n      ((\\\\().+?(\\\\)))    # Match title in parens\\u2026\n    | ((\").+?(\"))    # or in double quotes\\u2026\n    | ((').+?('))    # or in single quotes.\n  )?            # Title is optional\n  \\\\s*            # Optional whitespace\n  $\n`, \"name\": \"meta.link.reference.def.markdown\" }, \"link-email\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.markdown\" }, \"2\": { \"name\": \"markup.underline.link.markdown\" }, \"4\": { \"name\": \"punctuation.definition.link.markdown\" } }, \"match\": \"(<)((?:mailto:)?[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)(>)\", \"name\": \"meta.link.email.lt-gt.markdown\" }, \"link-inet\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.markdown\" }, \"2\": { \"name\": \"markup.underline.link.markdown\" }, \"3\": { \"name\": \"punctuation.definition.link.markdown\" } }, \"match\": \"(<)((?:https?|ftp)://.*?)(>)\", \"name\": \"meta.link.inet.markdown\" }, \"link-inline\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.title.begin.markdown\" }, \"2\": { \"name\": \"string.other.link.title.markdown\", \"patterns\": [{ \"include\": \"#raw\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#strikethrough\" }, { \"include\": \"#image-inline\" }] }, \"4\": { \"name\": \"punctuation.definition.link.title.end.markdown\" }, \"5\": { \"name\": \"punctuation.definition.metadata.markdown\" }, \"7\": { \"name\": \"punctuation.definition.link.markdown\" }, \"8\": { \"name\": \"markup.underline.link.markdown\" }, \"9\": { \"name\": \"punctuation.definition.link.markdown\" }, \"10\": { \"name\": \"markup.underline.link.markdown\" }, \"12\": { \"name\": \"string.other.link.description.title.markdown\" }, \"13\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"14\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"15\": { \"name\": \"string.other.link.description.title.markdown\" }, \"16\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"17\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"18\": { \"name\": \"string.other.link.description.title.markdown\" }, \"19\": { \"name\": \"punctuation.definition.string.begin.markdown\" }, \"20\": { \"name\": \"punctuation.definition.string.end.markdown\" }, \"21\": { \"name\": \"punctuation.definition.metadata.markdown\" } }, \"match\": `(?x)\n  (\\\\[)((?<square>[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\.|\\\\[\\\\g<square>*+\\\\])*+)(\\\\])\n                # Match the link text.\n  (\\\\()            # Opening paren for url\n    # The url\n      [ \\\\t]*\n      (\n         (<)((?:\\\\\\\\[<>]|[^<>\\\\n])*)(>)\n         | ((?<url>(?>[^\\\\s()]+)|\\\\(\\\\g<url>*\\\\))*)\n      )\n      [ \\\\t]*\n    # The title  \n    (?:\n        ((\\\\()[^()]*(\\\\)))    # Match title in parens\\u2026\n      | ((\")[^\"]*(\"))    # or in double quotes\\u2026\n      | ((')[^']*('))    # or in single quotes.\n    )?            # Title is optional\n    \\\\s*            # Optional whitespace\n  (\\\\))\n`, \"name\": \"meta.link.inline.markdown\" }, \"link-ref\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.title.begin.markdown\" }, \"2\": { \"name\": \"string.other.link.title.markdown\", \"patterns\": [{ \"include\": \"#raw\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#strikethrough\" }, { \"include\": \"#image-inline\" }] }, \"4\": { \"name\": \"punctuation.definition.link.title.end.markdown\" }, \"5\": { \"name\": \"punctuation.definition.constant.begin.markdown\" }, \"6\": { \"name\": \"constant.other.reference.link.markdown\" }, \"7\": { \"name\": \"punctuation.definition.constant.end.markdown\" } }, \"match\": \"(?<![\\\\]\\\\\\\\])(\\\\[)((?<square>[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\.|\\\\[\\\\g<square>*+\\\\])*+)(\\\\])(\\\\[)([^\\\\]]*+)(\\\\])\", \"name\": \"meta.link.reference.markdown\" }, \"link-ref-literal\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.title.begin.markdown\" }, \"2\": { \"name\": \"string.other.link.title.markdown\" }, \"4\": { \"name\": \"punctuation.definition.link.title.end.markdown\" }, \"5\": { \"name\": \"punctuation.definition.constant.begin.markdown\" }, \"6\": { \"name\": \"punctuation.definition.constant.end.markdown\" } }, \"match\": \"(?<![\\\\]\\\\\\\\])(\\\\[)((?<square>[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\.|\\\\[\\\\g<square>*+\\\\])*+)(\\\\])[ ]?(\\\\[)(\\\\])\", \"name\": \"meta.link.reference.literal.markdown\" }, \"link-ref-shortcut\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.link.title.begin.markdown\" }, \"2\": { \"name\": \"string.other.link.title.markdown\" }, \"3\": { \"name\": \"punctuation.definition.link.title.end.markdown\" } }, \"match\": \"(?<![\\\\]\\\\\\\\])(\\\\[)((?:[^\\\\s\\\\[\\\\]\\\\\\\\]|\\\\\\\\[\\\\[\\\\]])+?)((?<!\\\\\\\\)\\\\])\", \"name\": \"meta.link.reference.markdown\" }, \"list_paragraph\": { \"begin\": \"(^|\\\\G)(?=\\\\S)(?![*+->]\\\\s|[0-9]+\\\\.\\\\s)\", \"name\": \"meta.paragraph.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }, { \"include\": \"#heading-setext\" }], \"while\": \"(^|\\\\G)(?!\\\\s*$|#|[ ]{0,3}([-*_>][ ]{2,}){3,}[ \\\\t]*$\\\\n?|[ ]{0,3}[*+->]|[ ]{0,3}[0-9]+\\\\.)\" }, \"lists\": { \"patterns\": [{ \"begin\": \"(^|\\\\G)([ ]{0,3})([*+-])([ \\\\t])\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.list.begin.markdown\" } }, \"comment\": \"Currently does not support un-indented second lines.\", \"name\": \"markup.list.unnumbered.markdown\", \"patterns\": [{ \"include\": \"#block\" }, { \"include\": \"#list_paragraph\" }], \"while\": \"((^|\\\\G)([ ]{2,4}|\\\\t))|(^[ \\\\t]*$)\" }, { \"begin\": \"(^|\\\\G)([ ]{0,3})([0-9]+[\\\\.\\\\)])([ \\\\t])\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.list.begin.markdown\" } }, \"name\": \"markup.list.numbered.markdown\", \"patterns\": [{ \"include\": \"#block\" }, { \"include\": \"#list_paragraph\" }], \"while\": \"((^|\\\\G)([ ]{2,4}|\\\\t))|(^[ \\\\t]*$)\" }] }, \"paragraph\": { \"begin\": \"(^|\\\\G)[ ]{0,3}(?=[^ \\\\t\\\\n])\", \"name\": \"meta.paragraph.markdown\", \"patterns\": [{ \"include\": \"#inline\" }, { \"include\": \"text.html.derivative\" }, { \"include\": \"#heading-setext\" }], \"while\": \"(^|\\\\G)((?=\\\\s*[-=]{3,}\\\\s*$)|[ ]{4,}(?=[^ \\\\t\\\\n]))\" }, \"raw\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.raw.markdown\" }, \"3\": { \"name\": \"punctuation.definition.raw.markdown\" } }, \"match\": \"(`+)((?:[^`]|(?!(?<!`)\\\\1(?!`))`)*+)(\\\\1)\", \"name\": \"markup.inline.raw.string.markdown\" }, \"raw_block\": { \"begin\": \"(^|\\\\G)([ ]{4}|\\\\t)\", \"name\": \"markup.raw.block.markdown\", \"while\": \"(^|\\\\G)([ ]{4}|\\\\t)\" }, \"separator\": { \"match\": \"(^|\\\\G)[ ]{0,3}([\\\\*\\\\-\\\\_])([ ]{0,2}\\\\2){2,}[ \\\\t]*$\\\\n?\", \"name\": \"meta.separator.markdown\" }, \"strikethrough\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.strikethrough.markdown\" }, \"2\": { \"patterns\": [{ \"applyEndPatternLast\": 1, \"begin\": \"(?=<[^>]*?>)\", \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"text.html.derivative\" }] }, { \"include\": \"#escape\" }, { \"include\": \"#ampersand\" }, { \"include\": \"#bracket\" }, { \"include\": \"#raw\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#image-inline\" }, { \"include\": \"#link-inline\" }, { \"include\": \"#link-inet\" }, { \"include\": \"#link-email\" }, { \"include\": \"#image-ref\" }, { \"include\": \"#link-ref-literal\" }, { \"include\": \"#link-ref\" }, { \"include\": \"#link-ref-shortcut\" }] }, \"3\": { \"name\": \"punctuation.definition.strikethrough.markdown\" } }, \"match\": \"(?<!\\\\\\\\)(~{2,})((?:[^~]|(?!(?<![~\\\\\\\\])\\\\1(?!~))~)*+)(\\\\1)\", \"name\": \"markup.strikethrough.markdown\" }, \"table\": { \"begin\": \"(^|\\\\G)(\\\\|)(?=[^|].+\\\\|\\\\s*$)\", \"beginCaptures\": { \"2\": { \"name\": \"punctuation.definition.table.markdown\" } }, \"name\": \"markup.table.markdown\", \"patterns\": [{ \"match\": \"\\\\|\", \"name\": \"punctuation.definition.table.markdown\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.table.markdown\" } }, \"match\": \"(?<=\\\\|)\\\\s*(:?-+:?)\\\\s*(?=\\\\|)\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#inline\" }] } }, \"match\": \"(?<=\\\\|)\\\\s*(?=\\\\S)((\\\\\\\\\\\\||[^|])+)(?<=\\\\S)\\\\s*(?=\\\\|)\" }], \"while\": \"(^|\\\\G)(?=\\\\|)\" } }, \"scopeName\": \"text.html.markdown\", \"embeddedLangs\": [], \"aliases\": [\"md\"], \"embeddedLangsLazy\": [\"css\", \"html\", \"ini\", \"java\", \"lua\", \"make\", \"perl\", \"r\", \"ruby\", \"php\", \"sql\", \"vb\", \"xml\", \"xsl\", \"yaml\", \"bat\", \"clojure\", \"coffee\", \"c\", \"cpp\", \"diff\", \"docker\", \"git-commit\", \"git-rebase\", \"go\", \"groovy\", \"pug\", \"javascript\", \"json\", \"jsonc\", \"less\", \"objective-c\", \"swift\", \"scss\", \"raku\", \"powershell\", \"python\", \"julia\", \"rust\", \"scala\", \"shellscript\", \"typescript\", \"tsx\", \"csharp\", \"fsharp\", \"dart\", \"handlebars\", \"erlang\", \"elixir\", \"latex\", \"bibtex\"] });\nvar markdown = [\n  lang$k\n];\n\nconst lang$j = Object.freeze({ \"displayName\": \"Sass\", \"fileTypes\": [\"sass\"], \"foldingStartMarker\": \"/\\\\*|^#|^\\\\*|^\\\\b|*#?region|^\\\\.\", \"foldingStopMarker\": \"\\\\*/|*#?endregion|^\\\\s*$\", \"name\": \"sass\", \"patterns\": [{ \"begin\": \"^(\\\\s*)(/\\\\*)\", \"end\": \"(\\\\*/)|^(?!\\\\s\\\\1)\", \"name\": \"comment.block.sass\", \"patterns\": [{ \"include\": \"#comment-tag\" }, { \"include\": \"#comment-param\" }] }, { \"match\": \"^[\\\\t ]*/?//[\\\\t ]*[SRI][\\\\t ]*$\", \"name\": \"keyword.other.sass.formatter.action\" }, { \"begin\": \"^[\\\\t ]*//[\\\\t ]*(import)[\\\\t ]*(css-variables)[\\\\t ]*(from)\", \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control\" } }, \"end\": \"$\\\\n?\", \"name\": \"comment.import.css.variables\", \"patterns\": [{ \"include\": \"#import-quotes\" }] }, { \"include\": \"#double-slash\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#curly-brackets\" }, { \"include\": \"#placeholder-selector\" }, { \"begin\": \"\\\\$[a-zA-Z0-9_-]+(?=:)\", \"captures\": { \"0\": { \"name\": \"variable.other.name\" } }, \"end\": \"$\\\\n?|(?=\\\\)\\\\s\\\\)|\\\\)\\\\n)\", \"name\": \"sass.script.maps\", \"patterns\": [{ \"include\": \"#double-slash\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#variable\" }, { \"include\": \"#rgb-value\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#flag\" }, { \"include\": \"#comma\" }, { \"include\": \"#function\" }, { \"include\": \"#function-content\" }, { \"include\": \"#operator\" }, { \"include\": \"#reserved-words\" }, { \"include\": \"#parent-selector\" }, { \"include\": \"#property-value\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#dotdotdot\" }] }, { \"include\": \"#variable-root\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#flag\" }, { \"include\": \"#comma\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#dotdotdot\" }, { \"begin\": \"@include|\\\\+(?!\\\\W|\\\\d)\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.css.sass\" } }, \"end\": \"(?=\\\\n|\\\\()\", \"name\": \"support.function.name.sass.library\" }, { \"begin\": \"^(@use)\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.css.sass.use\" } }, \"end\": \"(?=\\\\n)\", \"name\": \"sass.use\", \"patterns\": [{ \"match\": \"as|with\", \"name\": \"support.type.css.sass\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#variable-root\" }, { \"include\": \"#rgb-value\" }, { \"include\": \"#comma\" }, { \"include\": \"#parenthesis-open\" }, { \"include\": \"#parenthesis-close\" }, { \"include\": \"#colon\" }, { \"include\": \"#import-quotes\" }] }, { \"begin\": \"^@import(.*?)( as.*)?$\", \"captures\": { \"1\": { \"name\": \"constant.character.css.sass\" }, \"2\": { \"name\": \"invalid\" } }, \"end\": \"(?=\\\\n)\", \"name\": \"keyword.control.at-rule.use\" }, { \"begin\": \"@mixin|^[\\\\t ]*=|@function\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.css.sass\" } }, \"end\": \"$\\\\n?|(?=\\\\()\", \"name\": \"support.function.name.sass\", \"patterns\": [{ \"match\": \"[\\\\w-]+\", \"name\": \"entity.name.function\" }] }, { \"begin\": \"@\", \"end\": \"$\\\\n?|\\\\s(?!(all|braille|embossed|handheld|print|projection|screen|speech|tty|tv|if|only|not)(\\\\s|,))\", \"name\": \"keyword.control.at-rule.css.sass\" }, { \"begin\": \"(?<!\\\\-|\\\\()\\\\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video|main|svg|rect|ruby|center|circle|ellipse|line|polyline|polygon|path|text|u|slot)\\\\b(?!-|\\\\)|:\\\\s)|&\", \"end\": \"$\\\\n?|(?=\\\\s|,|\\\\(|\\\\)|\\\\.|\\\\#|\\\\[|>|-|_)\", \"name\": \"entity.name.tag.css.sass.symbol\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"begin\": \"#\", \"end\": \"$\\\\n?|(?=\\\\s|,|\\\\(|\\\\)|\\\\.|\\\\[|>)\", \"name\": \"entity.other.attribute-name.id.css.sass\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"begin\": \"\\\\.|(?<=&)(-|_)\", \"end\": \"$\\\\n?|(?=\\\\s|,|\\\\(|\\\\)|\\\\[|>)\", \"name\": \"entity.other.attribute-name.class.css.sass\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"name\": \"entity.other.attribute-selector.sass\", \"patterns\": [{ \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"match\": \"\\\\^|\\\\$|\\\\*|~\", \"name\": \"keyword.other.regex.sass\" }] }, { \"match\": \"^((?<=\\\\]|\\\\)|not\\\\(|\\\\*|>|>\\\\s)|\\n*):[a-z:-]+|(::|:-)[a-z:-]+\", \"name\": \"entity.other.attribute-name.pseudo-class.css.sass\" }, { \"include\": \"#module\" }, { \"match\": \"[\\\\w-]*\\\\(\", \"name\": \"entity.name.function\" }, { \"match\": \"\\\\)\", \"name\": \"entity.name.function.close\" }, { \"begin\": \":\", \"end\": \"$\\\\n?|(?=\\\\s\\\\(|and\\\\(|\\\\),)\", \"name\": \"meta.property-list.css.sass.prop\", \"patterns\": [{ \"match\": \"(?<=:)[a-z-]+\\\\s\", \"name\": \"support.type.property-name.css.sass.prop.name\" }, { \"include\": \"#double-slash\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#curly-brackets\" }, { \"include\": \"#variable\" }, { \"include\": \"#rgb-value\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#module\" }, { \"match\": \"--.+?(?=\\\\))\", \"name\": \"variable.css\" }, { \"match\": \"[\\\\w-]*\\\\(\", \"name\": \"entity.name.function\" }, { \"match\": \"\\\\)\", \"name\": \"entity.name.function.close\" }, { \"include\": \"#flag\" }, { \"include\": \"#comma\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#function\" }, { \"include\": \"#function-content\" }, { \"include\": \"#operator\" }, { \"include\": \"#parent-selector\" }, { \"include\": \"#property-value\" }] }, { \"include\": \"#rgb-value\" }, { \"include\": \"#function\" }, { \"include\": \"#function-content\" }, { \"begin\": \"(?<=})(?!\\\\n|\\\\(|\\\\)|[a-zA-Z0-9_-]+:)\", \"end\": \"\\\\s|(?=,|\\\\.|\\\\[|\\\\)|\\\\n)\", \"name\": \"entity.name.tag.css.sass\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"include\": \"#operator\" }, { \"match\": \"[a-z-]+((?=:|#{))\", \"name\": \"support.type.property-name.css.sass.prop.name\" }, { \"include\": \"#reserved-words\" }, { \"include\": \"#property-value\" }], \"repository\": { \"colon\": { \"match\": \":\", \"name\": \"meta.property-list.css.sass.colon\" }, \"comma\": { \"match\": \"\\\\band\\\\b|\\\\bor\\\\b|,\", \"name\": \"comment.punctuation.comma.sass\" }, \"comment-param\": { \"match\": \"\\\\@(\\\\w+)\", \"name\": \"storage.type.class.jsdoc\" }, \"comment-tag\": { \"begin\": \"(?<={{)\", \"end\": \"(?=}})\", \"name\": \"comment.tag.sass\" }, \"curly-brackets\": { \"match\": \"{|}\", \"name\": \"invalid\" }, \"dotdotdot\": { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"variable.other\" }, \"double-quoted\": { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.css.sass\", \"patterns\": [{ \"include\": \"#quoted-interpolation\" }] }, \"double-slash\": { \"begin\": \"//\", \"end\": \"$\\\\n?\", \"name\": \"comment.line.sass\", \"patterns\": [{ \"include\": \"#comment-tag\" }] }, \"flag\": { \"match\": \"!(important|default|optional|global)\", \"name\": \"keyword.other.important.css.sass\" }, \"function\": { \"match\": \"(?<=[\\\\s|\\\\(|,|:])(?!url|format|attr)[a-zA-Z0-9_-][\\\\w-]*(?=\\\\()\", \"name\": \"support.function.name.sass\" }, \"function-content\": { \"begin\": \"(?<=url\\\\(|format\\\\(|attr\\\\()\", \"end\": \".(?=\\\\))\", \"name\": \"string.quoted.double.css.sass\" }, \"import-quotes\": { \"match\": `[\"']?\\\\.{0,2}[\\\\w/]+[\"']?`, \"name\": \"constant.character.css.sass\" }, \"interpolation\": { \"begin\": \"#{\", \"end\": \"}\", \"name\": \"support.function.interpolation.sass\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#numeric\" }, { \"include\": \"#operator\" }, { \"include\": \"#unit\" }, { \"include\": \"#comma\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }] }, \"module\": { \"captures\": { \"1\": { \"name\": \"constant.character.module.name\" }, \"2\": { \"name\": \"constant.numeric.module.dot\" } }, \"match\": \"([\\\\w-]+?)(\\\\.)\", \"name\": \"constant.character.module\" }, \"numeric\": { \"match\": \"(-|\\\\.)?[0-9]+(\\\\.[0-9]+)?\", \"name\": \"constant.numeric.css.sass\" }, \"operator\": { \"match\": \"\\\\+|\\\\s-\\\\s|\\\\s-(?=\\\\$)|(?<=\\\\()-(?=\\\\$)|\\\\s-(?=\\\\()|\\\\*|/|%|=|!|<|>|~\", \"name\": \"keyword.operator.sass\" }, \"parent-selector\": { \"match\": \"&\", \"name\": \"entity.name.tag.css.sass\" }, \"parenthesis-close\": { \"match\": \"\\\\)\", \"name\": \"entity.name.function.parenthesis.close\" }, \"parenthesis-open\": { \"match\": \"\\\\(\", \"name\": \"entity.name.function.parenthesis.open\" }, \"placeholder-selector\": { \"begin\": \"(?<!\\\\d)%(?!\\\\d)\", \"end\": \"$\\\\n?|\\\\s\", \"name\": \"entity.other.inherited-class.placeholder-selector.css.sass\" }, \"property-value\": { \"match\": \"[a-zA-Z0-9_-]+\", \"name\": \"meta.property-value.css.sass support.constant.property-value.css.sass\" }, \"pseudo-class\": { \"match\": \":[a-z:-]+\", \"name\": \"entity.other.attribute-name.pseudo-class.css.sass\" }, \"quoted-interpolation\": { \"begin\": \"#{\", \"end\": \"}\", \"name\": \"support.function.interpolation.sass\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#numeric\" }, { \"include\": \"#operator\" }, { \"include\": \"#unit\" }, { \"include\": \"#comma\" }] }, \"reserved-words\": { \"match\": \"\\\\b(false|from|in|not|null|through|to|true)\\\\b\", \"name\": \"support.type.property-name.css.sass\" }, \"rgb-value\": { \"match\": \"(#)([0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\\\\b\", \"name\": \"constant.language.color.rgb-value.css.sass\" }, \"semicolon\": { \"match\": \";\", \"name\": \"invalid\" }, \"single-quoted\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.css.sass\", \"patterns\": [{ \"include\": \"#quoted-interpolation\" }] }, \"unit\": { \"match\": \"(?<=[\\\\d]|})(ch|cm|deg|dpcm|dpi|dppx|em|ex|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vw|fr|%)\", \"name\": \"keyword.control.unit.css.sass\" }, \"variable\": { \"match\": \"\\\\$[a-zA-Z0-9_-]+\", \"name\": \"variable.other.value\" }, \"variable-root\": { \"match\": \"\\\\$[a-zA-Z0-9_-]+\", \"name\": \"variable.other.root\" } }, \"scopeName\": \"source.sass\" });\nvar sass = [\n  lang$j\n];\n\nconst lang$i = Object.freeze({ \"displayName\": \"SCSS\", \"name\": \"scss\", \"patterns\": [{ \"include\": \"#variable_setting\" }, { \"include\": \"#at_rule_forward\" }, { \"include\": \"#at_rule_use\" }, { \"include\": \"#at_rule_include\" }, { \"include\": \"#at_rule_import\" }, { \"include\": \"#general\" }, { \"include\": \"#flow_control\" }, { \"include\": \"#rules\" }, { \"include\": \"#property_list\" }, { \"include\": \"#at_rule_mixin\" }, { \"include\": \"#at_rule_media\" }, { \"include\": \"#at_rule_function\" }, { \"include\": \"#at_rule_charset\" }, { \"include\": \"#at_rule_option\" }, { \"include\": \"#at_rule_namespace\" }, { \"include\": \"#at_rule_fontface\" }, { \"include\": \"#at_rule_page\" }, { \"include\": \"#at_rule_keyframes\" }, { \"include\": \"#at_rule_at_root\" }, { \"include\": \"#at_rule_supports\" }, { \"match\": \";\", \"name\": \"punctuation.terminator.rule.css\" }], \"repository\": { \"at_rule_at_root\": { \"begin\": \"\\\\s*((@)(at-root))(\\\\s+|$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.at-root.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.at-root.scss\", \"patterns\": [{ \"include\": \"#function_attributes\" }, { \"include\": \"#functions\" }, { \"include\": \"#selectors\" }] }, \"at_rule_charset\": { \"begin\": \"\\\\s*((@)charset\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.charset.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*((?=;|$))\", \"name\": \"meta.at-rule.charset.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }] }, \"at_rule_content\": { \"begin\": \"\\\\s*((@)content\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.content.scss\" } }, \"end\": \"\\\\s*((?=;))\", \"name\": \"meta.content.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#selectors\" }, { \"include\": \"#property_values\" }] }, \"at_rule_each\": { \"begin\": \"\\\\s*((@)each\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.each.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*((?=}))\", \"name\": \"meta.at-rule.each.scss\", \"patterns\": [{ \"match\": \"\\\\b(in|,)\\\\b\", \"name\": \"keyword.control.operator\" }, { \"include\": \"#variable\" }, { \"include\": \"#property_values\" }, { \"include\": \"$self\" }] }, \"at_rule_else\": { \"begin\": \"\\\\s*((@)else(\\\\s*(if)?))\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.else.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.else.scss\", \"patterns\": [{ \"include\": \"#conditional_operators\" }, { \"include\": \"#variable\" }, { \"include\": \"#property_values\" }] }, \"at_rule_extend\": { \"begin\": \"\\\\s*((@)extend\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.extend.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?=;)\", \"name\": \"meta.at-rule.extend.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#selectors\" }, { \"include\": \"#property_values\" }] }, \"at_rule_fontface\": { \"patterns\": [{ \"begin\": \"^\\\\s*((@)font-face\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.fontface.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.fontface.scss\", \"patterns\": [{ \"include\": \"#function_attributes\" }] }] }, \"at_rule_for\": { \"begin\": \"\\\\s*((@)for\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.for.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.for.scss\", \"patterns\": [{ \"match\": \"(==|!=|<=|>=|<|>|from|to|through)\", \"name\": \"keyword.control.operator\" }, { \"include\": \"#variable\" }, { \"include\": \"#property_values\" }, { \"include\": \"$self\" }] }, \"at_rule_forward\": { \"begin\": \"\\\\s*((@)forward\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.forward.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?=;)\", \"name\": \"meta.at-rule.forward.scss\", \"patterns\": [{ \"match\": \"\\\\b(as|hide|show)\\\\b\", \"name\": \"keyword.control.operator\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.module.scss\" }, \"2\": { \"name\": \"punctuation.definition.wildcard.scss\" } }, \"match\": \"\\\\b([\\\\w-]+)(\\\\*)\" }, { \"match\": \"\\\\b[\\\\w-]+\\\\b\", \"name\": \"entity.name.function.scss\" }, { \"include\": \"#variable\" }, { \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }, { \"include\": \"#comment_line\" }, { \"include\": \"#comment_block\" }] }, \"at_rule_function\": { \"patterns\": [{ \"begin\": \"\\\\s*((@)function\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.function.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" }, \"3\": { \"name\": \"entity.name.function.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.function.scss\", \"patterns\": [{ \"include\": \"#function_attributes\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.function.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" }, \"3\": { \"name\": \"entity.name.function.scss\" } }, \"match\": \"\\\\s*((@)function\\\\b)\\\\s*\", \"name\": \"meta.at-rule.function.scss\" }] }, \"at_rule_if\": { \"begin\": \"\\\\s*((@)if\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.if.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.if.scss\", \"patterns\": [{ \"include\": \"#conditional_operators\" }, { \"include\": \"#variable\" }, { \"include\": \"#property_values\" }] }, \"at_rule_import\": { \"begin\": \"\\\\s*((@)import\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.import.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*((?=;)|(?=}))\", \"name\": \"meta.at-rule.import.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }, { \"include\": \"#functions\" }, { \"include\": \"#comment_line\" }] }, \"at_rule_include\": { \"patterns\": [{ \"begin\": \"(?<=@include)\\\\s+(?:([\\\\w-]+)\\\\s*(\\\\.))?([\\\\w-]+)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"variable.scss\" }, \"2\": { \"name\": \"punctuation.access.module.scss\" }, \"3\": { \"name\": \"entity.name.function.scss\" }, \"4\": { \"name\": \"punctuation.definition.parameters.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.bracket.round.scss\" } }, \"name\": \"meta.at-rule.include.scss\", \"patterns\": [{ \"include\": \"#function_attributes\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.at-rule.include.scss\" }, \"1\": { \"name\": \"variable.scss\" }, \"2\": { \"name\": \"punctuation.access.module.scss\" }, \"3\": { \"name\": \"entity.name.function.scss\" } }, \"match\": \"(?<=@include)\\\\s+(?:([\\\\w-]+)\\\\s*(\\\\.))?([\\\\w-]+)\" }, { \"captures\": { \"0\": { \"name\": \"meta.at-rule.include.scss\" }, \"1\": { \"name\": \"keyword.control.at-rule.include.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"match\": \"((@)include)\\\\b\" }] }, \"at_rule_keyframes\": { \"begin\": \"(?<=^|\\\\s)(@)(?:-(?:webkit|moz)-)?keyframes\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.at-rule.keyframes.scss\" }, \"1\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"(?<=})\", \"name\": \"meta.at-rule.keyframes.scss\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.scss\" } }, \"match\": \"(?<=@keyframes)\\\\s+((?:[_A-Za-z][-\\\\w]|-[_A-Za-z])[-\\\\w]*)\" }, { \"begin\": '(?<=@keyframes)\\\\s+(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.scss\" } }, \"contentName\": \"entity.name.function.scss\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.scss\" } }, \"name\": \"string.quoted.double.scss\", \"patterns\": [{ \"match\": \"\\\\\\\\(\\\\h{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(?<=@keyframes)\\\\s+(')\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.scss\" } }, \"contentName\": \"entity.name.function.scss\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.scss\" } }, \"name\": \"string.quoted.single.scss\", \"patterns\": [{ \"match\": \"\\\\\\\\(\\\\h{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.keyframes.begin.scss\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.keyframes.end.scss\" } }, \"patterns\": [{ \"match\": \"\\\\b(?:(?:100|[1-9]\\\\d|\\\\d)%|from|to)(?=\\\\s*{)\", \"name\": \"entity.other.attribute-name.scss\" }, { \"include\": \"#flow_control\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#property_list\" }, { \"include\": \"#rules\" }] }] }, \"at_rule_media\": { \"patterns\": [{ \"begin\": \"^\\\\s*((@)media)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.media.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.media.scss\", \"patterns\": [{ \"include\": \"#comment_docblock\" }, { \"include\": \"#comment_block\" }, { \"include\": \"#comment_line\" }, { \"match\": \"\\\\b(only)\\\\b\", \"name\": \"keyword.control.operator.css.scss\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.media-query.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.media-query.end.bracket.round.scss\" } }, \"name\": \"meta.property-list.media-query.scss\", \"patterns\": [{ \"begin\": \"(?<![-a-z])(?=[-a-z])\", \"end\": \"$|(?![-a-z])\", \"name\": \"meta.property-name.media-query.scss\", \"patterns\": [{ \"include\": \"source.css#media-features\" }, { \"include\": \"source.css#property-names\" }] }, { \"begin\": \"(:)\\\\s*(?!(\\\\s*{))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.scss\" } }, \"contentName\": \"meta.property-value.media-query.scss\", \"end\": \"\\\\s*(;|(?=}|\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.scss\" } }, \"patterns\": [{ \"include\": \"#general\" }, { \"include\": \"#property_values\" }] }] }, { \"include\": \"#variable\" }, { \"include\": \"#conditional_operators\" }, { \"include\": \"source.css#media-types\" }] }] }, \"at_rule_mixin\": { \"patterns\": [{ \"begin\": \"(?<=@mixin)\\\\s+([\\\\w-]+)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.scss\" }, \"2\": { \"name\": \"punctuation.definition.parameters.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.bracket.round.scss\" } }, \"name\": \"meta.at-rule.mixin.scss\", \"patterns\": [{ \"include\": \"#function_attributes\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.scss\" } }, \"match\": \"(?<=@mixin)\\\\s+([\\\\w-]+)\", \"name\": \"meta.at-rule.mixin.scss\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.mixin.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"match\": \"((@)mixin)\\\\b\", \"name\": \"meta.at-rule.mixin.scss\" }] }, \"at_rule_namespace\": { \"patterns\": [{ \"begin\": \"(?<=@namespace)\\\\s+(?=url)\", \"end\": \"(?=;|$)\", \"name\": \"meta.at-rule.namespace.scss\", \"patterns\": [{ \"include\": \"#property_values\" }, { \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }] }, { \"begin\": \"(?<=@namespace)\\\\s+([\\\\w-]*)\", \"captures\": { \"1\": { \"name\": \"entity.name.namespace-prefix.scss\" } }, \"end\": \"(?=;|$)\", \"name\": \"meta.at-rule.namespace.scss\", \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#property_values\" }, { \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.namespace.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"match\": \"((@)namespace)\\\\b\", \"name\": \"meta.at-rule.namespace.scss\" }] }, \"at_rule_option\": { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.charset.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"match\": \"^\\\\s*((@)option\\\\b)\\\\s*\", \"name\": \"meta.at-rule.option.scss\" }, \"at_rule_page\": { \"patterns\": [{ \"begin\": \"^\\\\s*((@)page)(?=:|\\\\s)\\\\s*([-:\\\\w]*)\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.page.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" }, \"3\": { \"name\": \"entity.name.function.scss\" } }, \"end\": \"\\\\s*(?={)\", \"name\": \"meta.at-rule.page.scss\" }] }, \"at_rule_return\": { \"begin\": \"\\\\s*((@)(return)\\\\b)\", \"captures\": { \"1\": { \"name\": \"keyword.control.return.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*((?=;))\", \"name\": \"meta.at-rule.return.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#property_values\" }] }, \"at_rule_supports\": { \"begin\": \"(?<=^|\\\\s)(@)supports\\\\b\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.supports.scss\" }, \"1\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"(?={)|$\", \"name\": \"meta.at-rule.supports.scss\", \"patterns\": [{ \"include\": \"#logical_operators\" }, { \"include\": \"#properties\" }, { \"match\": \"\\\\(\", \"name\": \"punctuation.definition.condition.begin.bracket.round.scss\" }, { \"match\": \"\\\\)\", \"name\": \"punctuation.definition.condition.end.bracket.round.scss\" }] }, \"at_rule_use\": { \"begin\": \"\\\\s*((@)use\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.use.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?=;)\", \"name\": \"meta.at-rule.use.scss\", \"patterns\": [{ \"match\": \"\\\\b(as|with)\\\\b\", \"name\": \"keyword.control.operator\" }, { \"match\": \"\\\\b[\\\\w-]+\\\\b\", \"name\": \"variable.scss\" }, { \"match\": \"\\\\*\", \"name\": \"variable.language.expanded-namespace.scss\" }, { \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }, { \"include\": \"#comment_line\" }, { \"include\": \"#comment_block\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.bracket.round.scss\" } }, \"patterns\": [{ \"include\": \"#function_attributes\" }] }] }, \"at_rule_warn\": { \"begin\": \"\\\\s*((@)(warn|debug|error)\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.warn.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?=;)\", \"name\": \"meta.at-rule.warn.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#string_double\" }, { \"include\": \"#string_single\" }] }, \"at_rule_while\": { \"begin\": \"\\\\s*((@)while\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.while.scss\" }, \"2\": { \"name\": \"punctuation.definition.keyword.scss\" } }, \"end\": \"\\\\s*(?=})\", \"name\": \"meta.at-rule.while.scss\", \"patterns\": [{ \"include\": \"#conditional_operators\" }, { \"include\": \"#variable\" }, { \"include\": \"#property_values\" }, { \"include\": \"$self\" }] }, \"comment_block\": { \"begin\": \"/\\\\*\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.scss\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.scss\" } }, \"name\": \"comment.block.scss\" }, \"comment_docblock\": { \"begin\": \"///\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.scss\" } }, \"end\": \"(?=$)\", \"name\": \"comment.block.documentation.scss\", \"patterns\": [{ \"include\": \"source.sassdoc\" }] }, \"comment_line\": { \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.scss\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.scss\" }, \"comparison_operators\": { \"match\": \"==|!=|<=|>=|<|>\", \"name\": \"keyword.operator.comparison.scss\" }, \"conditional_operators\": { \"patterns\": [{ \"include\": \"#comparison_operators\" }, { \"include\": \"#logical_operators\" }] }, \"constant_default\": { \"match\": \"!default\", \"name\": \"keyword.other.default.scss\" }, \"constant_functions\": { \"begin\": \"(?:([\\\\w-]+)(\\\\.))?([\\\\w-]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"variable.scss\" }, \"2\": { \"name\": \"punctuation.access.module.scss\" }, \"3\": { \"name\": \"support.function.misc.scss\" }, \"4\": { \"name\": \"punctuation.section.function.scss\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.function.scss\" } }, \"patterns\": [{ \"include\": \"#parameters\" }] }, \"constant_important\": { \"match\": \"!important\", \"name\": \"keyword.other.important.scss\" }, \"constant_mathematical_symbols\": { \"match\": \"\\\\b(\\\\+|-|\\\\*|/)\\\\b\", \"name\": \"support.constant.mathematical-symbols.scss\" }, \"constant_optional\": { \"match\": \"!optional\", \"name\": \"keyword.other.optional.scss\" }, \"constant_sass_functions\": { \"begin\": \"(headings|stylesheet-url|rgba?|hsla?|ie-hex-str|red|green|blue|alpha|opacity|hue|saturation|lightness|prefixed|prefix|-moz|-svg|-css2|-pie|-webkit|-ms|font-(?:files|url)|grid-image|image-(?:width|height|url|color)|sprites?|sprite-(?:map|map-name|file|url|position)|inline-(?:font-files|image)|opposite-position|grad-point|grad-end-position|color-stops|color-stops-in-percentages|grad-color-stops|(?:radial|linear)-(?:gradient|svg-gradient)|opacify|fade-?in|transparentize|fade-?out|lighten|darken|saturate|desaturate|grayscale|adjust-(?:hue|lightness|saturation|color)|scale-(?:lightness|saturation|color)|change-color|spin|complement|invert|mix|-compass-(?:list|space-list|slice|nth|list-size)|blank|compact|nth|first-value-of|join|length|append|nest|append-selector|headers|enumerate|range|percentage|unitless|unit|if|type-of|comparable|elements-of-type|quote|unquote|escape|e|sin|cos|tan|abs|round|ceil|floor|pi|translate(?:X|Y))(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.scss\" }, \"2\": { \"name\": \"punctuation.section.function.scss\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.function.scss\" } }, \"patterns\": [{ \"include\": \"#parameters\" }] }, \"flow_control\": { \"patterns\": [{ \"include\": \"#at_rule_if\" }, { \"include\": \"#at_rule_else\" }, { \"include\": \"#at_rule_warn\" }, { \"include\": \"#at_rule_for\" }, { \"include\": \"#at_rule_while\" }, { \"include\": \"#at_rule_each\" }, { \"include\": \"#at_rule_return\" }] }, \"function_attributes\": { \"patterns\": [{ \"match\": \":\", \"name\": \"punctuation.separator.key-value.scss\" }, { \"include\": \"#general\" }, { \"include\": \"#property_values\" }, { \"match\": \"[={}\\\\?;@]\", \"name\": \"invalid.illegal.scss\" }] }, \"functions\": { \"patterns\": [{ \"begin\": \"([\\\\w-]{1,})(\\\\()\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.scss\" }, \"2\": { \"name\": \"punctuation.section.function.scss\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.function.scss\" } }, \"patterns\": [{ \"include\": \"#parameters\" }] }, { \"match\": \"([\\\\w-]{1,})\", \"name\": \"support.function.misc.scss\" }] }, \"general\": { \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#comment_docblock\" }, { \"include\": \"#comment_block\" }, { \"include\": \"#comment_line\" }] }, \"interpolation\": { \"begin\": \"#{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.interpolation.begin.bracket.curly.scss\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.interpolation.end.bracket.curly.scss\" } }, \"name\": \"variable.interpolation.scss\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#property_values\" }] }, \"logical_operators\": { \"match\": \"\\\\b(not|or|and)\\\\b\", \"name\": \"keyword.operator.logical.scss\" }, \"map\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.map.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.map.end.bracket.round.scss\" } }, \"name\": \"meta.definition.variable.map.scss\", \"patterns\": [{ \"include\": \"#comment_docblock\" }, { \"include\": \"#comment_block\" }, { \"include\": \"#comment_line\" }, { \"captures\": { \"1\": { \"name\": \"support.type.map.key.scss\" }, \"2\": { \"name\": \"punctuation.separator.key-value.scss\" } }, \"match\": \"\\\\b([\\\\w-]+)\\\\s*(:)\" }, { \"match\": \",\", \"name\": \"punctuation.separator.delimiter.scss\" }, { \"include\": \"#map\" }, { \"include\": \"#variable\" }, { \"include\": \"#property_values\" }] }, \"operators\": { \"match\": \"[-+*/](?!\\\\s*[-+*/])\", \"name\": \"keyword.operator.css\" }, \"parameters\": { \"patterns\": [{ \"include\": \"#variable\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.scss\" } }, \"patterns\": [{ \"include\": \"#function_attributes\" }] }, { \"include\": \"#property_values\" }, { \"include\": \"#comment_block\" }, { \"match\": `[^'\",) \\\\t]+`, \"name\": \"variable.parameter.url.scss\" }, { \"match\": \",\", \"name\": \"punctuation.separator.delimiter.scss\" }] }, \"parent_selector_suffix\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.identifier.scss\" }] } }, \"match\": \"(?x)\\n(?<=&)\\n(\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]     # Valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\n    | \\\\#\\\\{                           # Interpolation (escaped to avoid Coffeelint errors)\\n    | \\\\$                              # Possible start of interpolation variable\\n    | }                                # Possible end of interpolation\\n  )+\\n)                                      # Followed by either:\\n(?= $                                  # - End of the line\\n  | [\\\\s,.\\\\#)\\\\[:{>+~|]               # - Another selector\\n  | /\\\\*                               # - A block comment\\n)\", \"name\": \"entity.other.attribute-name.parent-selector-suffix.css\" }, \"properties\": { \"patterns\": [{ \"begin\": \"(?<![-a-z])(?=[-a-z])\", \"end\": \"$|(?![-a-z])\", \"name\": \"meta.property-name.scss\", \"patterns\": [{ \"include\": \"source.css#property-names\" }, { \"include\": \"#at_rule_include\" }] }, { \"begin\": \"(:)\\\\s*(?!(\\\\s*{))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.scss\" } }, \"contentName\": \"meta.property-value.scss\", \"end\": \"\\\\s*(;|(?=}|\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.scss\" } }, \"patterns\": [{ \"include\": \"#general\" }, { \"include\": \"#property_values\" }] }] }, \"property_list\": { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.begin.bracket.curly.scss\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.property-list.end.bracket.curly.scss\" } }, \"name\": \"meta.property-list.scss\", \"patterns\": [{ \"include\": \"#flow_control\" }, { \"include\": \"#rules\" }, { \"include\": \"#properties\" }, { \"include\": \"$self\" }] }, \"property_values\": { \"patterns\": [{ \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }, { \"include\": \"#constant_functions\" }, { \"include\": \"#constant_sass_functions\" }, { \"include\": \"#constant_important\" }, { \"include\": \"#constant_default\" }, { \"include\": \"#constant_optional\" }, { \"include\": \"source.css#numeric-values\" }, { \"include\": \"source.css#property-keywords\" }, { \"include\": \"source.css#color-keywords\" }, { \"include\": \"source.css#property-names\" }, { \"include\": \"#constant_mathematical_symbols\" }, { \"include\": \"#operators\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.scss\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.scss\" } }, \"patterns\": [{ \"include\": \"#general\" }, { \"include\": \"#property_values\" }] }] }, \"rules\": { \"patterns\": [{ \"include\": \"#general\" }, { \"include\": \"#at_rule_extend\" }, { \"include\": \"#at_rule_content\" }, { \"include\": \"#at_rule_include\" }, { \"include\": \"#at_rule_media\" }, { \"include\": \"#selectors\" }] }, \"selector_attribute\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.attribute-selector.begin.bracket.square.scss\" }, \"2\": { \"name\": \"entity.other.attribute-name.attribute.scss\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.scss\" }] }, \"3\": { \"name\": \"keyword.operator.scss\" }, \"4\": { \"name\": \"string.unquoted.attribute-value.scss\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.scss\" }] }, \"5\": { \"name\": \"string.quoted.double.attribute-value.scss\" }, \"6\": { \"name\": \"punctuation.definition.string.begin.scss\" }, \"7\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.scss\" }] }, \"8\": { \"name\": \"punctuation.definition.string.end.scss\" }, \"9\": { \"name\": \"string.quoted.single.attribute-value.scss\" }, \"10\": { \"name\": \"punctuation.definition.string.begin.scss\" }, \"11\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.scss\" }] }, \"12\": { \"name\": \"punctuation.definition.string.end.scss\" }, \"13\": { \"name\": \"punctuation.definition.attribute-selector.end.bracket.square.scss\" } }, \"match\": `(?xi)\n(\\\\[)\n\\\\s*\n(\n  (?:\n    [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]       # Valid identifier characters\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\n    | \\\\#\\\\{                           # Interpolation (escaped to avoid Coffeelint errors)\n    | \\\\.?\\\\$                          # Possible start of interpolation variable\n    | }                                # Possible end of interpolation\n  )+?\n)\n(?:\n  \\\\s*([~|^$*]?=)\\\\s*\n  (?:\n    (\n      (?:\n        [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]       # Valid identifier characters\n        | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\n        | \\\\#\\\\{                           # Interpolation (escaped to avoid Coffeelint errors)\n        | \\\\.?\\\\$                          # Possible start of interpolation variable\n        | }                                # Possible end of interpolation\n      )+\n    )\n    |\n    ((\")(.*?)(\"))\n    |\n    ((')(.*?)('))\n  )\n)?\n\\\\s*\n(\\\\])`, \"name\": \"meta.attribute-selector.scss\" }, \"selector_class\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.scss\" }] } }, \"match\": \"(?x)\\n(\\\\.)                                  # Valid class-name\\n(\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]     # Valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\n    | \\\\#\\\\{                           # Interpolation (escaped to avoid Coffeelint errors)\\n    | \\\\.?\\\\$                          # Possible start of interpolation variable\\n    | }                                # Possible end of interpolation\\n  )+\\n)                                      # Followed by either:\\n(?= $                                  # - End of the line\\n  | [\\\\s,\\\\#)\\\\[:{>+~|]                # - Another selector\\n  | \\\\.[^$]                            # - Class selector, negating module variable\\n  | /\\\\*                               # - A block comment\\n  | ;                                  # - A semicolon\\n)\", \"name\": \"entity.other.attribute-name.class.css\" }, \"selector_custom\": { \"match\": \"\\\\b([a-zA-Z0-9]+(-[a-zA-Z0-9]+)+)(?=\\\\.|\\\\s++[^:]|\\\\s*[,\\\\[{]|:(link|visited|hover|active|focus|target|lang|disabled|enabled|checked|indeterminate|root|nth-(child|last-child|of-type|last-of-type)|first-child|last-child|first-of-type|last-of-type|only-child|only-of-type|empty|not|valid|invalid)(\\\\([0-9A-Za-z]*\\\\))?)\", \"name\": \"entity.name.tag.custom.scss\" }, \"selector_id\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.identifier.scss\" }] } }, \"match\": \"(?x)\\n(\\\\#)                                  # Valid id-name\\n(\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]     # Valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\n    | \\\\#\\\\{                           # Interpolation (escaped to avoid Coffeelint errors)\\n    | \\\\.?\\\\$                          # Possible start of interpolation variable\\n    | }                                # Possible end of interpolation\\n  )+\\n)                                      # Followed by either:\\n(?= $                                  # - End of the line\\n  | [\\\\s,\\\\#)\\\\[:{>+~|]                # - Another selector\\n  | \\\\.[^$]                            # - Class selector, negating module variable\\n  | /\\\\*                               # - A block comment\\n)\", \"name\": \"entity.other.attribute-name.id.css\" }, \"selector_placeholder\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\\\\\([0-9a-fA-F]{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"match\": \"\\\\$|}\", \"name\": \"invalid.illegal.identifier.scss\" }] } }, \"match\": \"(?x)\\n(%)                                    # Valid placeholder-name\\n(\\n  (?: [-a-zA-Z_0-9]|[^\\\\x00-\\\\x7F]     # Valid identifier characters\\n    | \\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\n    | \\\\#\\\\{                           # Interpolation (escaped to avoid Coffeelint errors)\\n    | \\\\.\\\\$                           # Possible start of interpolation module scope variable\\n    | \\\\$                              # Possible start of interpolation variable\\n    | }                                # Possible end of interpolation\\n  )+\\n)                                      # Followed by either:\\n(?= ;                                  # - End of statement\\n  | $                                  # - End of the line\\n  | [\\\\s,\\\\#)\\\\[:{>+~|]                # - Another selector\\n  | \\\\.[^$]                            # - Class selector, negating module variable\\n  | /\\\\*                               # - A block comment\\n)\", \"name\": \"entity.other.attribute-name.placeholder.css\" }, \"selector_pseudo_class\": { \"patterns\": [{ \"begin\": \"((:)\\\\bnth-(?:child|last-child|of-type|last-of-type))(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.definition.pseudo-class.begin.bracket.round.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.pseudo-class.end.bracket.round.css\" } }, \"patterns\": [{ \"include\": \"#interpolation\" }, { \"match\": \"\\\\d+\", \"name\": \"constant.numeric.css\" }, { \"match\": \"(?<=\\\\d)n\\\\b|\\\\b(n|even|odd)\\\\b\", \"name\": \"constant.other.scss\" }, { \"match\": \"\\\\w+\", \"name\": \"invalid.illegal.scss\" }] }, { \"include\": \"source.css#pseudo-classes\" }, { \"include\": \"source.css#pseudo-elements\" }, { \"include\": \"source.css#functional-pseudo-classes\" }] }, \"selectors\": { \"patterns\": [{ \"include\": \"source.css#tag-names\" }, { \"include\": \"#selector_custom\" }, { \"include\": \"#selector_class\" }, { \"include\": \"#selector_id\" }, { \"include\": \"#selector_pseudo_class\" }, { \"include\": \"#tag_wildcard\" }, { \"include\": \"#tag_parent_reference\" }, { \"include\": \"source.css#pseudo-elements\" }, { \"include\": \"#selector_attribute\" }, { \"include\": \"#selector_placeholder\" }, { \"include\": \"#parent_selector_suffix\" }] }, \"string_double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.scss\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.scss\" } }, \"name\": \"string.quoted.double.scss\", \"patterns\": [{ \"match\": \"\\\\\\\\(\\\\h{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"include\": \"#interpolation\" }] }, \"string_single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.scss\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.scss\" } }, \"name\": \"string.quoted.single.scss\", \"patterns\": [{ \"match\": \"\\\\\\\\(\\\\h{1,6}|.)\", \"name\": \"constant.character.escape.scss\" }, { \"include\": \"#interpolation\" }] }, \"tag_parent_reference\": { \"match\": \"&\", \"name\": \"entity.name.tag.reference.scss\" }, \"tag_wildcard\": { \"match\": \"\\\\*\", \"name\": \"entity.name.tag.wildcard.scss\" }, \"variable\": { \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#interpolation\" }] }, \"variable_setting\": { \"begin\": \"(?=\\\\$[\\\\w-]+\\\\s*:)\", \"contentName\": \"meta.definition.variable.scss\", \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.scss\" } }, \"patterns\": [{ \"match\": \"\\\\$[\\\\w-]+(?=\\\\s*:)\", \"name\": \"variable.scss\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.scss\" } }, \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#comment_docblock\" }, { \"include\": \"#comment_block\" }, { \"include\": \"#comment_line\" }, { \"include\": \"#map\" }, { \"include\": \"#property_values\" }, { \"include\": \"#variable\" }, { \"match\": \",\", \"name\": \"punctuation.separator.delimiter.scss\" }] }] }, \"variables\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.scss\" }, \"2\": { \"name\": \"punctuation.access.module.scss\" }, \"3\": { \"name\": \"variable.scss\" } }, \"match\": \"\\\\b([\\\\w-]+)(\\\\.)(\\\\$[\\\\w-]+)\\\\b\" }, { \"match\": \"(\\\\$|\\\\-\\\\-)[A-Za-z0-9_-]+\\\\b\", \"name\": \"variable.scss\" }] } }, \"scopeName\": \"source.css.scss\", \"embeddedLangs\": [\"css\"] });\nvar scss = [\n  ...css,\n  lang$i\n];\n\nconst lang$h = Object.freeze({ \"displayName\": \"Stylus\", \"fileTypes\": [\"styl\", \"stylus\", \"css.styl\", \"css.stylus\"], \"name\": \"stylus\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#at_rule\" }, { \"include\": \"#language_keywords\" }, { \"include\": \"#language_constants\" }, { \"include\": \"#variable_declaration\" }, { \"include\": \"#function\" }, { \"include\": \"#selector\" }, { \"include\": \"#declaration\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.property-list.begin.css\" }, \"2\": { \"name\": \"punctuation.section.property-list.end.css\" } }, \"match\": \"(\\\\{)(\\\\})\", \"name\": \"meta.brace.curly.css\" }, { \"match\": \"\\\\{|\\\\}\", \"name\": \"meta.brace.curly.css\" }, { \"include\": \"#numeric\" }, { \"include\": \"#string\" }, { \"include\": \"#operator\" }], \"repository\": { \"at_rule\": { \"patterns\": [{ \"begin\": \"\\\\s*((@)(import|require))\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.import.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" } }, \"end\": \"\\\\s*((?=;|$|\\\\n))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.at-rule.import.css\", \"patterns\": [{ \"include\": \"#string\" }] }, { \"begin\": \"\\\\s*((@)(extend[s]?)\\\\b)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.extend.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" } }, \"end\": \"\\\\s*((?=;|$|\\\\n))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.at-rule.extend.css\", \"patterns\": [{ \"include\": \"#selector\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.fontface.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" } }, \"match\": \"^\\\\s*((@)font-face)\\\\b\", \"name\": \"meta.at-rule.fontface.stylus\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.css.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" } }, \"match\": \"^\\\\s*((@)css)\\\\b\", \"name\": \"meta.at-rule.css.stylus\" }, { \"begin\": \"\\\\s*((@)charset)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.charset.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" } }, \"end\": \"\\\\s*((?=;|$|\\\\n))\", \"name\": \"meta.at-rule.charset.stylus\", \"patterns\": [{ \"include\": \"#string\" }] }, { \"begin\": \"\\\\s*((@)keyframes)\\\\b\\\\s+([a-zA-Z_-][a-zA-Z0-9_-]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.keyframes.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" }, \"3\": { \"name\": \"entity.name.function.keyframe.stylus\" } }, \"end\": \"\\\\s*((?=\\\\{|$|\\\\n))\", \"name\": \"meta.at-rule.keyframes.stylus\" }, { \"begin\": \"(?=(\\\\b(\\\\d+%|from\\\\b|to\\\\b)))\", \"end\": \"(?=(\\\\{|\\\\n))\", \"name\": \"meta.at-rule.keyframes.stylus\", \"patterns\": [{ \"match\": \"(\\\\b(\\\\d+%|from\\\\b|to\\\\b))\", \"name\": \"entity.other.attribute-name.stylus\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.media.stylus\" }, \"2\": { \"name\": \"punctuation.definition.keyword.stylus\" } }, \"match\": \"^\\\\s*((@)media)\\\\b\", \"name\": \"meta.at-rule.media.stylus\" }, { \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(width|scan|resolution|orientation|monochrome|min-width|min-resolution|min-monochrome|min-height|min-device-width|min-device-height|min-device-aspect-ratio|min-color-index|min-color|min-aspect-ratio|max-width|max-resolution|max-monochrome|max-height|max-device-width|max-device-height|max-device-aspect-ratio|max-color-index|max-color|max-aspect-ratio|height|grid|device-width|device-height|device-aspect-ratio|color-index|color|aspect-ratio)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"support.type.property-name.media-feature.media.css\" }, { \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(tv|tty|screen|projection|print|handheld|embossed|braille|aural|all)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"support.constant.media-type.media.css\" }, { \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(portrait|landscape)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"support.constant.property-value.media-property.media.css\" }] }, \"char_escape\": { \"match\": \"\\\\\\\\(.)\", \"name\": \"constant.character.escape.stylus\" }, \"color\": { \"patterns\": [{ \"begin\": \"\\\\b(rgb|rgba|hsl|hsla)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.function.css\" } }, \"name\": \"meta.function.color.css\", \"patterns\": [{ \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#numeric\" }, { \"include\": \"#property_variable\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.css\" } }, \"match\": \"(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\\\\b\", \"name\": \"constant.other.color.rgb-value.css\" }, { \"comment\": \"http://www.w3.org/TR/CSS21/syndata.html#value-def-color\", \"match\": \"\\\\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\\\\b\", \"name\": \"support.constant.color.w3c-standard-color-name.css\" }, { \"comment\": \"http://www.w3.org/TR/css3-color/#svg-color\", \"match\": \"\\\\b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\\\\b\", \"name\": \"support.constant.color.w3c-extended-color-name.css\" }] }, \"comment\": { \"patterns\": [{ \"include\": \"#comment_block\" }, { \"include\": \"#comment_line\" }] }, \"comment_block\": { \"begin\": \"/\\\\*\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.css\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.css\" } }, \"name\": \"comment.block.css\" }, \"comment_line\": { \"begin\": \"(^[ \\\\t]+)?(?=//)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.stylus\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.stylus\" } }, \"end\": \"(?=\\\\n)\", \"name\": \"comment.line.double-slash.stylus\" }] }, \"declaration\": { \"begin\": \"((?<=^)[^\\\\S\\\\n]+)|((?<=;)[^\\\\S\\\\n]*)|((?<=\\\\{)[^\\\\S\\\\n]*)\", \"end\": \"(?=\\\\n)|(;)|(?=\\\\})|(\\\\n)\", \"endCaptures\": { \"2\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.property-list.css\", \"patterns\": [{ \"match\": \"(?x) (?<![\\\\w-])\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.css\" }, { \"include\": \"#language_keywords\" }, { \"include\": \"#language_constants\" }, { \"match\": \"(?:(?<=^)[^\\\\S\\\\n]+(\\\\n))\" }, { \"captures\": { \"1\": { \"name\": \"support.type.property-name.css\" }, \"2\": { \"name\": \"punctuation.separator.key-value.css\" }, \"3\": { \"name\": \"variable.section.css\" } }, \"match\": \"\\\\G\\\\s*(counter-reset|counter-increment)(?:(:)|[^\\\\S\\\\n])[^\\\\S\\\\n]*([a-zA-Z_-][a-zA-Z0-9_-]*)\", \"name\": \"meta.property.counter.css\" }, { \"begin\": \"\\\\G\\\\s*(filter)(?:(:)|[^\\\\S\\\\n])[^\\\\S\\\\n]*\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.property-name.css\" }, \"2\": { \"name\": \"punctuation.separator.key-value.css\" } }, \"end\": \"(?=\\\\n|;|\\\\}|$)\", \"name\": \"meta.property.filter.css\", \"patterns\": [{ \"include\": \"#function\" }, { \"include\": \"#property_values\" }] }, { \"include\": \"#property\" }, { \"include\": \"#interpolation\" }, { \"include\": \"$self\" }] }, \"font_name\": { \"match\": \"(\\\\b(?i:arial|century|comic|courier|cursive|fantasy|futura|garamond|georgia|helvetica|impact|lucida|monospace|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif)\\\\b)\", \"name\": \"support.constant.font-name.css\" }, \"function\": { \"begin\": \"(?=[a-zA-Z_-][a-zA-Z0-9_-]*\\\\()\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.function.css\" } }, \"patterns\": [{ \"begin\": \"(format|url|local)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.misc.css\", \"patterns\": [{ \"match\": \"(?<=\\\\()[^\\\\)\\\\s]*(?=\\\\))\", \"name\": \"string.css\" }, { \"include\": \"#string\" }, { \"include\": \"#variable\" }, { \"include\": \"#operator\" }, { \"match\": \"\\\\s*\" }] }, { \"captures\": { \"1\": { \"name\": \"support.function.misc.counter.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" }, \"3\": { \"name\": \"variable.section.css\" } }, \"match\": \"(counter)(\\\\()([a-zA-Z_-][a-zA-Z0-9_-]*)(?=\\\\))\", \"name\": \"meta.function.misc.counter.css\" }, { \"begin\": \"(counters)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.counters.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.misc.counters.css\", \"patterns\": [{ \"match\": \"\\\\G[a-zA-Z_-][a-zA-Z0-9_-]*\", \"name\": \"variable.section.css\" }, { \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#string\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(attr)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.attr.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.misc.attr.css\", \"patterns\": [{ \"match\": \"\\\\G[a-zA-Z_-][a-zA-Z0-9_-]*\", \"name\": \"entity.other.attribute-name.attribute.css\" }, { \"match\": \"(?<=[a-zA-Z0-9_-])\\\\s*\\\\b(string|color|url|integer|number|length|em|ex|px|rem|vw|vh|vmin|vmax|mm|cm|in|pt|pc|angle|deg|grad|rad|time|s|ms|frequency|Hz|kHz|%)\\\\b\", \"name\": \"support.type.attr.css\" }, { \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#string\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(calc)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.misc.calc.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.misc.calc.css\", \"patterns\": [{ \"include\": \"#property_values\" }] }, { \"begin\": \"(cubic-bezier)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.timing.cubic-bezier.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.timing.cubic-bezier.css\", \"patterns\": [{ \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#numeric\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(steps)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.timing.steps.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.timing.steps.css\", \"patterns\": [{ \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#numeric\" }, { \"match\": \"\\\\b(start|end)\\\\b\", \"name\": \"support.constant.timing.steps.direction.css\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.gradient.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.gradient.css\", \"patterns\": [{ \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#numeric\" }, { \"include\": \"#color\" }, { \"match\": \"\\\\b(to|bottom|right|left|top|circle|ellipse|center|closest-side|closest-corner|farthest-side|farthest-corner|at)\\\\b\", \"name\": \"support.constant.gradient.css\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(blur|brightness|contrast|grayscale|hue-rotate|invert|opacity|saturate|sepia)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.filter.css\", \"patterns\": [{ \"include\": \"#numeric\" }, { \"include\": \"#property_variable\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(drop-shadow)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.drop-shadow.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.filter.drop-shadow.css\", \"patterns\": [{ \"include\": \"#numeric\" }, { \"include\": \"#color\" }, { \"include\": \"#property_variable\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(matrix|matrix3d|perspective|rotate|rotate3d|rotate[Xx]|rotate[yY]|rotate[zZ]|scale|scale3d|scale[xX]|scale[yY]|scale[zZ]|skew|skew[xX]|skew[yY]|translate|translate3d|translate[xX]|translate[yY]|translate[zZ])(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.transform.css\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.transform.css\", \"patterns\": [{ \"include\": \"#numeric\" }, { \"include\": \"#property_variable\" }, { \"include\": \"#interpolation\" }] }, { \"match\": \"(url|local|format|counter|counters|attr|calc)(?=\\\\()\", \"name\": \"support.function.misc.css\" }, { \"match\": \"(cubic-bezier|steps)(?=\\\\()\", \"name\": \"support.function.timing.css\" }, { \"match\": \"(linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient)(?=\\\\()\", \"name\": \"support.function.gradient.css\" }, { \"match\": \"(blur|brightness|contrast|drop-shadow|grayscale|hue-rotate|invert|opacity|saturate|sepia)(?=\\\\()\", \"name\": \"support.function.filter.css\" }, { \"match\": \"(matrix|matrix3d|perspective|rotate|rotate3d|rotate[Xx]|rotate[yY]|rotate[zZ]|scale|scale3d|scale[xX]|scale[yY]|scale[zZ]|skew|skew[xX]|skew[yY]|translate|translate3d|translate[xX]|translate[yY]|translate[zZ])(?=\\\\()\", \"name\": \"support.function.transform.css\" }, { \"begin\": \"([a-zA-Z_-][a-zA-Z0-9_-]*)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.stylus\" }, \"2\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function.stylus\", \"patterns\": [{ \"match\": \"(?x)\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.argument.stylus\" }, { \"match\": \"\\\\s*(,)\\\\s*\", \"name\": \"punctuation.separator.parameter.css\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#property_values\" }] }, { \"match\": \"\\\\(\", \"name\": \"punctuation.section.function.css\" }] }, \"interpolation\": { \"begin\": \"(?:(\\\\{)[^\\\\S\\\\n]*)(?=[^;=]*[^\\\\S\\\\n]*\\\\})\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.curly\" } }, \"end\": \"(?:[^\\\\S\\\\n]*(\\\\}))|\\\\n|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.curly\" } }, \"name\": \"meta.interpolation.stylus\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#numeric\" }, { \"include\": \"#string\" }, { \"include\": \"#operator\" }] }, \"language_constants\": { \"match\": \"\\\\b(true|false|null)\\\\b\", \"name\": \"constant.language.stylus\" }, \"language_keywords\": { \"patterns\": [{ \"match\": \"(\\\\b|\\\\s)(return|else|for|unless|if|else)\\\\b\", \"name\": \"keyword.control.stylus\" }, { \"match\": \"(\\\\b|\\\\s)(!important|in|is defined|is a)\\\\b\", \"name\": \"keyword.other.stylus\" }, { \"match\": \"\\\\barguments\\\\b\", \"name\": \"variable.language.stylus\" }] }, \"numeric\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.unit.css\" } }, \"match\": \"(?x) (?<!\\\\w|-)(?:(?:-|\\\\+)?(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+)) ((?:px|pt|ch|cm|mm|in|r?em|ex|pc|deg|g?rad|dpi|dpcm|dppx|fr|ms|s|turn|vh|vmax|vmin|vw)\\\\b|%)?\", \"name\": \"constant.numeric.css\" }] }, \"operator\": { \"patterns\": [{ \"match\": \"((?:\\\\?|:|!|~|\\\\+|(\\\\s-\\\\s)|(?:\\\\*)?\\\\*|\\\\/|%|(\\\\.)?\\\\.\\\\.|<|>|(?:=|:|\\\\?|\\\\+|-|\\\\*|\\\\/|%|<|>)?=|!=)|\\\\b(?:in|is(?:nt)?|(?<!:)not|or|and)\\\\b)\", \"name\": \"keyword.operator.stylus\" }, { \"include\": \"#char_escape\" }] }, \"property\": { \"begin\": \"(?x:\\\\G\\\\s*(?:\\n  (-webkit-[-A-Za-z]+|-moz-[-A-Za-z]+|-o-[-A-Za-z]+|-ms-[-A-Za-z]+|-khtml-[-A-Za-z]+|zoom|z-index|y|x|wrap|word-wrap|word-spacing|word-break|word|width|widows|white-space-collapse|white-space|white|weight|volume|voice-volume|voice-stress|voice-rate|voice-pitch-range|voice-pitch|voice-family|voice-duration|voice-balance|voice|visibility|vertical-align|variant|user-select|up|unicode-bidi|unicode-range|unicode|trim|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform|touch-action|top-width|top-style|top-right-radius|top-left-radius|top-color|top|timing-function|text-wrap|text-transform|text-shadow|text-replace|text-rendering|text-overflow|text-outline|text-justify|text-indent|text-height|text-emphasis|text-decoration|text-align-last|text-align|text|target-position|target-new|target-name|target|table-layout|tab-size|style-type|style-position|style-image|style|string-set|stretch|stress|stacking-strategy|stacking-shift|stacking-ruby|stacking|src|speed|speech-rate|speech|speak-punctuation|speak-numeral|speak-header|speak|span|spacing|space-collapse|space|sizing|size-adjust|size|shadow|respond-to|rule-width|rule-style|rule-color|rule|ruby-span|ruby-position|ruby-overhang|ruby-align|ruby|rows|rotation-point|rotation|role|right-width|right-style|right-color|right|richness|rest-before|rest-after|rest|resource|resize|reset|replace|repeat|rendering-intent|rate|radius|quotes|punctuation-trim|punctuation|property|profile|presentation-level|presentation|position|pointer-events|point|play-state|play-during|play-count|pitch-range|pitch|phonemes|pause-before|pause-after|pause|page-policy|page-break-inside|page-break-before|page-break-after|page|padding-top|padding-right|padding-left|padding-bottom|padding|pack|overhang|overflow-y|overflow-x|overflow-style|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|origin|orientation|orient|ordinal-group|order|opacity|offset|numeral|new|nav-up|nav-right|nav-left|nav-index|nav-down|nav|name|move-to|model|mix-blend-mode|min-width|min-height|min|max-width|max-height|max|marquee-style|marquee-speed|marquee-play-count|marquee-direction|marquee|marks|mark-before|mark-after|mark|margin-top|margin-right|margin-left|margin-bottom|margin|mask-image|list-style-type|list-style-position|list-style-image|list-style|list|lines|line-stacking-strategy|line-stacking-shift|line-stacking-ruby|line-stacking|line-height|line-break|level|letter-spacing|length|left-width|left-style|left-color|left|label|justify-content|justify|iteration-count|inline-box-align|initial-value|initial-size|initial-before-align|initial-before-adjust|initial-after-align|initial-after-adjust|index|indent|increment|image-resolution|image-orientation|image|icon|hyphens|hyphenate-resource|hyphenate-lines|hyphenate-character|hyphenate-before|hyphenate-after|hyphenate|height|header|hanging-punctuation|gap|grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-start|grid-row|grid-row-end|grid-row-start|grid-template|grid-template-areas|grid-template-columns|grid-template-rows|row-gap|gap|font-kerning|font-language-override|font-weight|font-variant-caps|font-variant|font-style|font-synthesis|font-stretch|font-size-adjust|font-size|font-family|font|float-offset|float|flex-wrap|flex-shrink|flex-grow|flex-group|flex-flow|flex-direction|flex-basis|flex|fit-position|fit|fill|filter|family|empty-cells|emphasis|elevation|duration|drop-initial-value|drop-initial-size|drop-initial-before-align|drop-initial-before-adjust|drop-initial-after-align|drop-initial-after-adjust|drop|down|dominant-baseline|display-role|display-model|display|direction|delay|decoration-break|decoration|cursor|cue-before|cue-after|cue|crop|counter-reset|counter-increment|counter|count|content|columns|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|column-break-before|column-break-after|column|color-profile|color|collapse|clip|clear|character|caption-side|break-inside|break-before|break-after|break|box-sizing|box-shadow|box-pack|box-orient|box-ordinal-group|box-lines|box-flex-group|box-flex|box-direction|box-decoration-break|box-align|box|bottom-width|bottom-style|bottom-right-radius|bottom-left-radius|bottom-color|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-length|border-left-width|border-left-style|border-left-color|border-left|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|bookmark-target|bookmark-level|bookmark-label|bookmark|binding|bidi|before|baseline-shift|baseline|balance|background-blend-mode|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-break|background-attachment|background|azimuth|attachment|appearance|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-duration|animation-direction|animation-delay|animation-fill-mode|animation|alignment-baseline|alignment-adjust|alignment|align-self|align-last|align-items|align-content|align|after|adjust|will-change)|\\n  (writing-mode|text-anchor|stroke-width|stroke-opacity|stroke-miterlimit|stroke-linejoin|stroke-linecap|stroke-dashoffset|stroke-dasharray|stroke|stop-opacity|stop-color|shape-rendering|marker-start|marker-mid|marker-end|lighting-color|kerning|image-rendering|glyph-orientation-vertical|glyph-orientation-horizontal|flood-opacity|flood-color|fill-rule|fill-opacity|fill|enable-background|color-rendering|color-interpolation-filters|color-interpolation|clip-rule|clip-path)|\\n  ([a-zA-Z_-][a-zA-Z0-9_-]*)\\n)(?!([^\\\\S\\\\n]*&)|([^\\\\S\\\\n]*\\\\{))(?=:|([^\\\\S\\\\n]+[^\\\\s])))\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.property-name.css\" }, \"2\": { \"name\": \"support.type.property-name.svg.css\" }, \"3\": { \"name\": \"support.function.mixin.stylus\" } }, \"end\": \"(;)|(?=\\\\n|\\\\}|$)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"patterns\": [{ \"include\": \"#property_value\" }] }, \"property_value\": { \"begin\": \"\\\\G(?:(:)|(\\\\s))(\\\\s*)(?!&)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.css\" }, \"2\": { \"name\": \"punctuation.separator.key-value.css\" } }, \"end\": \"(?=\\\\n|;|\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"name\": \"meta.property-value.css\", \"patterns\": [{ \"include\": \"#property_values\" }, { \"match\": \"[^\\\\n]+?\" }] }, \"property_values\": { \"patterns\": [{ \"include\": \"#function\" }, { \"include\": \"#comment\" }, { \"include\": \"#language_keywords\" }, { \"include\": \"#language_constants\" }, { \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(wrap-reverse|wrap|whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|unicase|underline|ultra-expanded|ultra-condensed|transparent|transform|top|titling-caps|thin|thick|text-top|text-bottom|text|tb-rl|table-row-group|table-row|table-header-group|table-footer-group|table-column-group|table-column|table-cell|table|sw-resize|super|strict|stretch|step-start|step-end|static|square|space-between|space-around|space|solid|soft-light|small-caps|separate|semi-expanded|semi-condensed|se-resize|scroll|screen|saturation|s-resize|running|rtl|row-reverse|row-resize|row|round|right|ridge|reverse|repeat-y|repeat-x|repeat|relative|progressive|progress|pre-wrap|pre-line|pre|pointer|petite-caps|paused|pan-x|pan-left|pan-right|pan-y|pan-up|pan-down|padding-box|overline|overlay|outside|outset|optimizeSpeed|optimizeLegibility|opacity|oblique|nw-resize|nowrap|not-allowed|normal|none|no-repeat|no-drop|newspaper|ne-resize|n-resize|multiply|move|middle|medium|max-height|manipulation|main-size|luminosity|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|local|list-item|linear(?!-)|line-through|line-edge|line|lighter|lighten|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline-block|inline|inherit|infinite|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|hue|horizontal|hidden|help|hard-light|hand|groove|geometricPrecision|forwards|flex-start|flex-end|flex|fixed|extra-expanded|extra-condensed|expanded|exclusion|ellipsis|ease-out|ease-in-out|ease-in|ease|e-resize|double|dotted|distribute-space|distribute-letter|distribute-all-lines|distribute|disc|disabled|difference|default|decimal|dashed|darken|currentColor|crosshair|cover|content-box|contain|condensed|column-reverse|column|color-dodge|color-burn|color|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|border-box|bolder|bold|block|bidi-override|below|baseline|balance|backwards|auto|antialiased|always|alternate-reverse|alternate|all-small-caps|all-scroll|all-petite-caps|all|absolute)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"support.constant.property-value.css\" }, { \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(start|sRGB|square|round|optimizeSpeed|optimizeQuality|nonzero|miter|middle|linearRGB|geometricPrecision |evenodd |end |crispEdges|butt|bevel)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"support.constant.property-value.svg.css\" }, { \"include\": \"#font_name\" }, { \"include\": \"#numeric\" }, { \"include\": \"#color\" }, { \"include\": \"#string\" }, { \"match\": \"\\\\!\\\\s*important\", \"name\": \"keyword.other.important.css\" }, { \"include\": \"#operator\" }, { \"include\": \"#stylus_keywords\" }, { \"include\": \"#property_variable\" }] }, \"property_variable\": { \"patterns\": [{ \"include\": \"#variable\" }, { \"match\": \"(?<!^)(\\\\@[a-zA-Z_-][a-zA-Z0-9_-]*)\", \"name\": \"variable.property.stylus\" }] }, \"selector\": { \"patterns\": [{ \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(a|abbr|acronym|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|math|menu|menuitem|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rb|rp|rt|rtc|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"entity.name.tag.css\" }, { \"match\": \"(?:(?=\\\\w)(?<![\\\\w-]))(vkern|view|use|tspan|tref|title|textPath|text|symbol|switch|svg|style|stop|set|script|rect|radialGradient|polyline|polygon|pattern|path|mpath|missing-glyph|metadata|mask|marker|linearGradient|line|image|hkern|glyphRef|glyph|g|foreignObject|font-face-uri|font-face-src|font-face-name|font-face-format|font-face|font|filter|feTurbulence|feTile|feSpotLight|feSpecularLighting|fePointLight|feOffset|feMorphology|feMergeNode|feMerge|feImage|feGaussianBlur|feFuncR|feFuncG|feFuncB|feFuncA|feFlood|feDistantLight|feDisplacementMap|feDiffuseLighting|feConvolveMatrix|feComposite|feComponentTransfer|feColorMatrix|feBlend|ellipse|desc|defs|cursor|color-profile|clipPath|circle|animateTransform|animateMotion|animateColor|animate|altGlyphItem|altGlyphDef|altGlyph|a)(?:(?<=\\\\w)(?![\\\\w-]))\", \"name\": \"entity.name.tag.svg.css\" }, { \"match\": \"\\\\s*(\\\\,)\\\\s*\", \"name\": \"meta.selector.stylus\" }, { \"match\": \"\\\\*\", \"name\": \"meta.selector.stylus\" }, { \"captures\": { \"2\": { \"name\": \"entity.other.attribute-name.parent-selector-suffix.stylus\" } }, \"match\": \"\\\\s*(\\\\&)([a-zA-Z0-9_-]+)\\\\s*\", \"name\": \"meta.selector.stylus\" }, { \"match\": \"\\\\s*(\\\\&)\\\\s*\", \"name\": \"meta.selector.stylus\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(\\\\.)[a-zA-Z0-9_-]+\", \"name\": \"entity.other.attribute-name.class.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(#)[a-zA-Z][a-zA-Z0-9_-]*\", \"name\": \"entity.other.attribute-name.id.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(:+)(after|before|content|first-letter|first-line|host|(-(moz|webkit|ms)-)?selection)\\\\b\", \"name\": \"entity.other.attribute-name.pseudo-element.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(:)((first|last)-child|(first|last|only)-of-type|empty|root|target|first|left|right)\\\\b\", \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(:)(checked|enabled|default|disabled|indeterminate|invalid|optional|required|valid)\\\\b\", \"name\": \"entity.other.attribute-name.pseudo-class.ui-state.css\" }, { \"begin\": \"((:)not)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.css\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.css\" } }, \"patterns\": [{ \"include\": \"#selector\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"punctuation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.css\" }, \"4\": { \"name\": \"constant.numeric.css\" }, \"5\": { \"name\": \"punctuation.section.function.css\" } }, \"match\": \"((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\\\\()(\\\\-?(?:\\\\d+n?|n)(?:\\\\+\\\\d+)?|even|odd)(\\\\))\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"puncutation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.css\" }, \"4\": { \"name\": \"constant.language.css\" }, \"5\": { \"name\": \"punctuation.section.function.css\" } }, \"match\": \"((:)dir)\\\\s*(?:(\\\\()(ltr|rtl)?(\\\\)))?\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, \"2\": { \"name\": \"puncutation.definition.entity.css\" }, \"3\": { \"name\": \"punctuation.section.function.css\" }, \"4\": { \"name\": \"constant.language.css\" }, \"6\": { \"name\": \"punctuation.section.function.css\" } }, \"match\": \"((:)lang)\\\\s*(?:(\\\\()(\\\\w+(-\\\\w+)?)?(\\\\)))?\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(:)(active|hover|link|visited|focus)\\\\b\", \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": \"(::)(shadow)\\\\b\", \"name\": \"entity.other.attribute-name.pseudo-class.css\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.css\" }, \"2\": { \"name\": \"entity.other.attribute-name.attribute.css\" }, \"3\": { \"name\": \"punctuation.separator.operator.css\" }, \"4\": { \"name\": \"string.unquoted.attribute-value.css\" }, \"5\": { \"name\": \"string.quoted.double.attribute-value.css\" }, \"6\": { \"name\": \"punctuation.definition.string.begin.css\" }, \"7\": { \"name\": \"punctuation.definition.string.end.css\" }, \"8\": { \"name\": \"punctuation.definition.entity.css\" } }, \"match\": `(?i)(\\\\[)\\\\s*(-?[_a-z\\\\\\\\[[:^ascii:]]][_a-z0-9\\\\-\\\\\\\\[[:^ascii:]]]*)(?:\\\\s*([~|^$*]?=)\\\\s*(?:(-?[_a-z\\\\\\\\[[:^ascii:]]][_a-z0-9\\\\-\\\\\\\\[[:^ascii:]]]*)|((?>(['\"])(?:[^\\\\\\\\]|\\\\\\\\.)*?(\\\\6)))))?\\\\s*(\\\\])`, \"name\": \"meta.attribute-selector.css\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#variable\" }] }, \"string\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.double.css\", \"patterns\": [{ \"match\": \"\\\\\\\\([a-fA-F0-9]{1,6}|.)\", \"name\": \"constant.character.escape.css\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.css\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.css\" } }, \"name\": \"string.quoted.single.css\", \"patterns\": [{ \"match\": \"\\\\\\\\([a-fA-F0-9]{1,6}|.)\", \"name\": \"constant.character.escape.css\" }] }] }, \"variable\": { \"match\": \"(\\\\$[a-zA-Z_-][a-zA-Z0-9_-]*)\", \"name\": \"variable.stylus\" }, \"variable_declaration\": { \"begin\": \"^[^\\\\S\\\\n]*(\\\\$?[a-zA-Z_-][a-zA-Z0-9_-]*)[^\\\\S\\\\n]*(\\\\=|\\\\?\\\\=|\\\\:\\\\=)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.stylus\" }, \"2\": { \"name\": \"keyword.operator.stylus\" } }, \"end\": \"(\\\\n)|(;)|(?=\\\\})\", \"endCaptures\": { \"2\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"patterns\": [{ \"include\": \"#property_values\" }] } }, \"scopeName\": \"source.stylus\", \"aliases\": [\"styl\"] });\nvar stylus = [\n  lang$h\n];\n\nconst lang$g = Object.freeze({ \"displayName\": \"CoffeeScript\", \"name\": \"coffee\", \"patterns\": [{ \"include\": \"#jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.new.coffee\" }, \"2\": { \"name\": \"storage.type.class.coffee\" }, \"3\": { \"name\": \"entity.name.type.instance.coffee\" }, \"4\": { \"name\": \"entity.name.type.instance.coffee\" } }, \"match\": \"(new)\\\\s+(?:(?:(class)\\\\s+(\\\\w+(?:\\\\.\\\\w*)*)?)|(\\\\w+(?:\\\\.\\\\w*)*))\", \"name\": \"meta.class.instance.constructor.coffee\" }, { \"begin\": \"'''\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.coffee\" } }, \"end\": \"'''\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"name\": \"string.quoted.single.heredoc.coffee\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.backslash.coffee\" } }, \"match\": \"(\\\\\\\\).\", \"name\": \"constant.character.escape.backslash.coffee\" }] }, { \"begin\": '\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.coffee\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"name\": \"string.quoted.double.heredoc.coffee\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.backslash.coffee\" } }, \"match\": \"(\\\\\\\\).\", \"name\": \"constant.character.escape.backslash.coffee\" }, { \"include\": \"#interpolated_coffee\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.coffee\" }, \"2\": { \"name\": \"source.js.embedded.coffee\", \"patterns\": [{ \"include\": \"source.js\" }] }, \"3\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"match\": \"(`)(.*)(`)\", \"name\": \"string.quoted.script.coffee\" }, { \"begin\": \"(?<!#)###(?!#)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.coffee\" } }, \"end\": \"###\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.coffee\" } }, \"name\": \"comment.block.coffee\", \"patterns\": [{ \"match\": \"(?<=^|\\\\s)@\\\\w*(?=\\\\s)\", \"name\": \"storage.type.annotation.coffee\" }] }, { \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.coffee\" } }, \"end\": \"$\", \"name\": \"comment.line.number-sign.coffee\" }, { \"begin\": \"///\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.coffee\" } }, \"end\": \"(///)[gimuy]*\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"name\": \"string.regexp.multiline.coffee\", \"patterns\": [{ \"include\": \"#heregexp\" }] }, { \"begin\": \"(?<![\\\\w$])(/)(?=(?![/*+?])(.+)(/)[gimuy]*(?!\\\\s*[\\\\w$/(]))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.coffee\" } }, \"end\": \"(/)[gimuy]*(?!\\\\s*[\\\\w$/(])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"name\": \"string.regexp.coffee\", \"patterns\": [{ \"include\": \"source.js.regexp\" }] }, { \"match\": \"\\\\b(?<![\\\\.\\\\$])(break|by|catch|continue|else|finally|for|in|of|if|return|switch|then|throw|try|unless|when|while|until|loop|do|export|import|default|from|as|yield|async|await|(?<=for)\\\\s+own)(?!\\\\s*:)\\\\b\", \"name\": \"keyword.control.coffee\" }, { \"match\": \"\\\\b(?<![\\\\.\\\\$])(delete|instanceof|new|typeof)(?!\\\\s*:)\\\\b\", \"name\": \"keyword.operator.$1.coffee\" }, { \"match\": \"\\\\b(?<![\\\\.\\\\$])(case|function|var|void|with|const|let|enum|native|__hasProp|__extends|__slice|__bind|__indexOf|implements|interface|package|private|protected|public|static)(?!\\\\s*:)\\\\b\", \"name\": \"keyword.reserved.coffee\" }, { \"begin\": \"(?x)\\n(?<=\\\\s|^)((@)?[a-zA-Z_$][\\\\w$]*)\\n\\\\s*([:=])\\\\s*\\n(?=(\\\\([^\\\\(\\\\)]*\\\\)\\\\s*)?[=-]>)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.coffee\" }, \"2\": { \"name\": \"variable.other.readwrite.instance.coffee\" }, \"3\": { \"name\": \"keyword.operator.assignment.coffee\" } }, \"end\": \"[=-]>\", \"endCaptures\": { \"0\": { \"name\": \"storage.type.function.coffee\" } }, \"name\": \"meta.function.coffee\", \"patterns\": [{ \"include\": \"#function_params\" }] }, { \"begin\": `(?x)\n(?<=\\\\s|^)(?:((')([^']*?)('))|((\")([^\"]*?)(\")))\n\\\\s*([:=])\\\\s*\n(?=(\\\\([^\\\\(\\\\)]*\\\\)\\\\s*)?[=-]>)`, \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.single.coffee\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.coffee\" }, \"3\": { \"name\": \"entity.name.function.coffee\" }, \"4\": { \"name\": \"punctuation.definition.string.end.coffee\" }, \"5\": { \"name\": \"string.quoted.double.coffee\" }, \"6\": { \"name\": \"punctuation.definition.string.begin.coffee\" }, \"7\": { \"name\": \"entity.name.function.coffee\" }, \"8\": { \"name\": \"punctuation.definition.string.end.coffee\" }, \"9\": { \"name\": \"keyword.operator.assignment.coffee\" } }, \"end\": \"[=-]>\", \"endCaptures\": { \"0\": { \"name\": \"storage.type.function.coffee\" } }, \"name\": \"meta.function.coffee\", \"patterns\": [{ \"include\": \"#function_params\" }] }, { \"begin\": \"(?=(\\\\([^\\\\(\\\\)]*\\\\)\\\\s*)?[=-]>)\", \"end\": \"[=-]>\", \"endCaptures\": { \"0\": { \"name\": \"storage.type.function.coffee\" } }, \"name\": \"meta.function.inline.coffee\", \"patterns\": [{ \"include\": \"#function_params\" }] }, { \"begin\": `(?<=\\\\s|^)({)(?=[^'\"#]+?}[\\\\s\\\\]}]*=)`, \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.destructuring.begin.bracket.curly.coffee\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.destructuring.end.bracket.curly.coffee\" } }, \"name\": \"meta.variable.assignment.destructured.object.coffee\", \"patterns\": [{ \"include\": \"$self\" }, { \"match\": \"[a-zA-Z$_]\\\\w*\", \"name\": \"variable.assignment.coffee\" }] }, { \"begin\": `(?<=\\\\s|^)(\\\\[)(?=[^'\"#]+?\\\\][\\\\s\\\\]}]*=)`, \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.destructuring.begin.bracket.square.coffee\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.destructuring.end.bracket.square.coffee\" } }, \"name\": \"meta.variable.assignment.destructured.array.coffee\", \"patterns\": [{ \"include\": \"$self\" }, { \"match\": \"[a-zA-Z$_]\\\\w*\", \"name\": \"variable.assignment.coffee\" }] }, { \"match\": \"\\\\b(?<!\\\\.|::)(true|on|yes)(?!\\\\s*[:=][^=])\\\\b\", \"name\": \"constant.language.boolean.true.coffee\" }, { \"match\": \"\\\\b(?<!\\\\.|::)(false|off|no)(?!\\\\s*[:=][^=])\\\\b\", \"name\": \"constant.language.boolean.false.coffee\" }, { \"match\": \"\\\\b(?<!\\\\.|::)null(?!\\\\s*[:=][^=])\\\\b\", \"name\": \"constant.language.null.coffee\" }, { \"match\": \"\\\\b(?<!\\\\.|::)extends(?!\\\\s*[:=])\\\\b\", \"name\": \"variable.language.coffee\" }, { \"match\": \"(?<!\\\\.)\\\\b(?<!\\\\$)(super|this|arguments)(?!\\\\s*[:=][^=]|\\\\$)\\\\b\", \"name\": \"variable.language.$1.coffee\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.coffee\" }, \"2\": { \"name\": \"keyword.control.inheritance.coffee\" }, \"3\": { \"name\": \"entity.other.inherited-class.coffee\" } }, \"match\": \"(?<=\\\\s|^|\\\\[|\\\\()(class)\\\\s+(extends)\\\\s+(@?[a-zA-Z\\\\$\\\\._][\\\\w\\\\.]*)\", \"name\": \"meta.class.coffee\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.coffee\" }, \"2\": { \"name\": \"entity.name.type.class.coffee\" }, \"3\": { \"name\": \"keyword.control.inheritance.coffee\" }, \"4\": { \"name\": \"entity.other.inherited-class.coffee\" } }, \"match\": \"(?<=\\\\s|^|\\\\[|\\\\()(class\\\\b)\\\\s+(@?[a-zA-Z\\\\$_][\\\\w\\\\.]*)?(?:\\\\s+(extends)\\\\s+(@?[a-zA-Z\\\\$\\\\._][\\\\w\\\\.]*))?\", \"name\": \"meta.class.coffee\" }, { \"match\": \"\\\\b(debugger|\\\\\\\\)\\\\b\", \"name\": \"keyword.other.coffee\" }, { \"match\": \"\\\\b(Array|ArrayBuffer|Blob|Boolean|Date|document|Function|Int(8|16|32|64)Array|Math|Map|Number|Object|Proxy|RegExp|Set|String|WeakMap|window|Uint(8|16|32|64)Array|XMLHttpRequest)\\\\b\", \"name\": \"support.class.coffee\" }, { \"match\": \"\\\\b(console)\\\\b\", \"name\": \"entity.name.type.object.coffee\" }, { \"match\": \"((?<=console\\\\.)(debug|warn|info|log|error|time|timeEnd|assert))\\\\b\", \"name\": \"support.function.console.coffee\" }, { \"match\": \"((?<=\\\\.)(apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf))\\\\b\", \"name\": \"support.function.method.array.coffee\" }, { \"match\": \"((?<=Array\\\\.)(isArray))\\\\b\", \"name\": \"support.function.static.array.coffee\" }, { \"match\": \"((?<=Object\\\\.)(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|isnt|keys|preventExtensions|seal))\\\\b\", \"name\": \"support.function.static.object.coffee\" }, { \"match\": \"((?<=Math\\\\.)(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc))\\\\b\", \"name\": \"support.function.static.math.coffee\" }, { \"match\": \"((?<=Number\\\\.)(is(Finite|Integer|NaN)|toInteger))\\\\b\", \"name\": \"support.function.static.number.coffee\" }, { \"match\": \"(?<!\\\\.)\\\\b(module|exports|__filename|__dirname|global|process)(?!\\\\s*:)\\\\b\", \"name\": \"support.variable.coffee\" }, { \"match\": \"\\\\b(Infinity|NaN|undefined)\\\\b\", \"name\": \"constant.language.coffee\" }, { \"include\": \"#operators\" }, { \"include\": \"#method_calls\" }, { \"include\": \"#function_calls\" }, { \"include\": \"#numbers\" }, { \"include\": \"#objects\" }, { \"include\": \"#properties\" }, { \"match\": \"::\", \"name\": \"keyword.operator.prototype.coffee\" }, { \"match\": \"(?<!\\\\$)\\\\b[0-9]+[\\\\w$]*\", \"name\": \"invalid.illegal.identifier.coffee\" }, { \"match\": \";\", \"name\": \"punctuation.terminator.statement.coffee\" }, { \"match\": \",\", \"name\": \"punctuation.separator.delimiter.coffee\" }, { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.curly.coffee\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.curly.coffee\" } }, \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.bracket.square.coffee\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.bracket.square.coffee\" } }, \"patterns\": [{ \"match\": \"(?<!\\\\.)\\\\.{3}\", \"name\": \"keyword.operator.slice.exclusive.coffee\" }, { \"match\": \"(?<!\\\\.)\\\\.{2}\", \"name\": \"keyword.operator.slice.inclusive.coffee\" }, { \"include\": \"$self\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.coffee\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.coffee\" } }, \"patterns\": [{ \"include\": \"$self\" }] }, { \"include\": \"#instance_variable\" }, { \"include\": \"#single_quoted_string\" }, { \"include\": \"#double_quoted_string\" }], \"repository\": { \"arguments\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.arguments.begin.bracket.round.coffee\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.arguments.end.bracket.round.coffee\" } }, \"name\": \"meta.arguments.coffee\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": `(?=(@|@?[\\\\w$]+|[=-]>|\\\\-\\\\d|\\\\[|{|\"|'))`, \"end\": \"(?=\\\\s*(?<![\\\\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\\\\w$]))|(?=\\\\s*(}|\\\\]|\\\\)|#|$))\", \"name\": \"meta.arguments.coffee\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"double_quoted_string\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.coffee\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"name\": \"string.quoted.double.coffee\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.backslash.coffee\" } }, \"match\": \"(\\\\\\\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)\", \"name\": \"constant.character.escape.backslash.coffee\" }, { \"include\": \"#interpolated_coffee\" }] }] }, \"embedded_comment\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.coffee\" } }, \"match\": \"(?<!\\\\\\\\)(#).*$\\\\n?\", \"name\": \"comment.line.number-sign.coffee\" }] }, \"function_calls\": { \"patterns\": [{ \"begin\": \"(@)?([\\\\w$]+)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.readwrite.instance.coffee\" }, \"2\": { \"patterns\": [{ \"include\": \"#function_names\" }] } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.function-call.coffee\", \"patterns\": [{ \"include\": \"#arguments\" }] }, { \"begin\": `(?x)\n(@)?([\\\\w$]+)\n\\\\s*\n(?=\\\\s+(?!(?<![\\\\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\\\\w$]))(?=(@?[\\\\w$]+|[=-]>|\\\\-\\\\d|\\\\[|{|\"|')))`, \"beginCaptures\": { \"1\": { \"name\": \"variable.other.readwrite.instance.coffee\" }, \"2\": { \"patterns\": [{ \"include\": \"#function_names\" }] } }, \"end\": \"(?=\\\\s*(?<![\\\\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\\\\w$]))|(?=\\\\s*(}|\\\\]|\\\\)|#|$))\", \"name\": \"meta.function-call.coffee\", \"patterns\": [{ \"include\": \"#arguments\" }] }] }, \"function_names\": { \"patterns\": [{ \"match\": \"(?x)\\n\\\\b(isNaN|isFinite|eval|uneval|parseInt|parseFloat|decodeURI|\\ndecodeURIComponent|encodeURI|encodeURIComponent|escape|unescape|\\nrequire|set(Interval|Timeout)|clear(Interval|Timeout))\\\\b\", \"name\": \"support.function.coffee\" }, { \"match\": \"[a-zA-Z_$][\\\\w$]*\", \"name\": \"entity.name.function.coffee\" }, { \"match\": \"\\\\d[\\\\w$]*\", \"name\": \"invalid.illegal.identifier.coffee\" }] }, \"function_params\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.bracket.round.coffee\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.bracket.round.coffee\" } }, \"name\": \"meta.parameters.coffee\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.parameter.function.coffee\" }, \"2\": { \"name\": \"keyword.operator.splat.coffee\" } }, \"match\": \"([a-zA-Z_$][\\\\w$]*)(\\\\.\\\\.\\\\.)?\" }, { \"captures\": { \"1\": { \"name\": \"variable.parameter.function.readwrite.instance.coffee\" }, \"2\": { \"name\": \"keyword.operator.splat.coffee\" } }, \"match\": \"(@(?:[a-zA-Z_$][\\\\w$]*)?)(\\\\.\\\\.\\\\.)?\" }, { \"include\": \"$self\" }] }] }, \"heregexp\": { \"patterns\": [{ \"match\": \"\\\\\\\\[bB]|\\\\^|\\\\$\", \"name\": \"keyword.control.anchor.regexp\" }, { \"match\": \"\\\\\\\\[1-9]\\\\d*\", \"name\": \"keyword.other.back-reference.regexp\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp\" }, { \"begin\": \"(\\\\()((\\\\?=)|(\\\\?!))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" }, \"3\": { \"name\": \"meta.assertion.look-ahead.regexp\" }, \"4\": { \"name\": \"meta.assertion.negative-look-ahead.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.assertion.regexp\", \"patterns\": [{ \"include\": \"#heregexp\" }] }, { \"begin\": \"\\\\((\\\\?:)?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.regexp\", \"patterns\": [{ \"include\": \"#heregexp\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" } }, \"name\": \"constant.other.character-class.set.regexp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.control.regexp\" }, \"3\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"4\": { \"name\": \"constant.character.numeric.regexp\" }, \"5\": { \"name\": \"constant.character.control.regexp\" }, \"6\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\", \"name\": \"constant.other.character-class.range.regexp\" }, { \"include\": \"#regex-character-class\" }] }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#interpolated_coffee\" }, { \"include\": \"#embedded_comment\" }] }, \"instance_variable\": { \"patterns\": [{ \"match\": \"(@)([a-zA-Z_\\\\$]\\\\w*)?\", \"name\": \"variable.other.readwrite.instance.coffee\" }] }, \"interpolated_coffee\": { \"patterns\": [{ \"begin\": \"\\\\#\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.embedded.coffee\" } }, \"end\": \"\\\\}\", \"name\": \"source.coffee.embedded.source\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"jsx\": { \"patterns\": [{ \"include\": \"#jsx-tag\" }, { \"include\": \"#jsx-end-tag\" }] }, \"jsx-attribute\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.coffee\" }, \"2\": { \"name\": \"keyword.operator.assignment.coffee\" } }, \"match\": \"(?:^|\\\\s+)([-\\\\w.]+)\\\\s*(=)\" }, { \"include\": \"#double_quoted_string\" }, { \"include\": \"#single_quoted_string\" }, { \"include\": \"#jsx-expression\" }] }, \"jsx-end-tag\": { \"patterns\": [{ \"begin\": \"(</)([-\\\\w\\\\.]+)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.coffee\" }, \"2\": { \"name\": \"entity.name.tag.coffee\" } }, \"end\": \"(/?>)\", \"name\": \"meta.tag.coffee\" }] }, \"jsx-expression\": { \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.curly.coffee\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.curly.coffee\" } }, \"patterns\": [{ \"include\": \"#double_quoted_string\" }, { \"include\": \"$self\" }] }, \"jsx-tag\": { \"patterns\": [{ \"begin\": \"(<)([-\\\\w\\\\.]+)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.coffee\" }, \"2\": { \"name\": \"entity.name.tag.coffee\" } }, \"end\": \"(/?>)\", \"name\": \"meta.tag.coffee\", \"patterns\": [{ \"include\": \"#jsx-attribute\" }] }] }, \"method_calls\": { \"patterns\": [{ \"begin\": \"(?:(\\\\.)|(::))\\\\s*([\\\\w$]+)\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.method.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"patterns\": [{ \"include\": \"#method_names\" }] } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.method-call.coffee\", \"patterns\": [{ \"include\": \"#arguments\" }] }, { \"begin\": `(?:(\\\\.)|(::))\\\\s*([\\\\w$]+)\\\\s*(?=\\\\s+(?!(?<![\\\\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\\\\w$]))(?=(@|@?[\\\\w$]+|[=-]>|\\\\-\\\\d|\\\\[|{|\"|')))`, \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.method.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"patterns\": [{ \"include\": \"#method_names\" }] } }, \"end\": \"(?=\\\\s*(?<![\\\\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\\\\w$]))|(?=\\\\s*(}|\\\\]|\\\\)|#|$))\", \"name\": \"meta.method-call.coffee\", \"patterns\": [{ \"include\": \"#arguments\" }] }] }, \"method_names\": { \"patterns\": [{ \"match\": \"(?x)\\n\\\\bon(Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|\\nReadystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|\\nBefore(cut|deactivate|unload|update|paste|print|editfocus|activate)|\\nBlur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|\\nChange|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|\\nDatasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|\\nDragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|\\nErrorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\\\\b\", \"name\": \"support.function.event-handler.coffee\" }, { \"match\": \"(?x)\\n\\\\b(shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|\\nscrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|\\nsup|sub|substr|substring|splice|split|send|set(Milliseconds|Seconds|Minutes|Hours|\\nMonth|Year|FullYear|Date|UTC(Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|\\nTime|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|\\nsavePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|\\ncontextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|\\ncreateEventObject|to(GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|\\ntest|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|\\nuntaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|\\nprint|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|\\nfileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|\\nforward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|\\nabort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|\\nreleaseCapture|releaseEvents|go|get(Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|\\nTime|Date|TimezoneOffset|UTC(Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|\\nAttention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|\\nmoveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back)\\\\b\", \"name\": \"support.function.coffee\" }, { \"match\": \"(?x)\\n\\\\b(acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|\\nappendChild|appendData|before|blur|canPlayType|captureStream|\\ncaretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|\\ncloneContents|cloneNode|cloneRange|close|closest|collapse|\\ncompareBoundaryPoints|compareDocumentPosition|comparePoint|contains|\\nconvertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|\\ncreateAttributeNS|createCaption|createCDATASection|createComment|\\ncreateContextualFragment|createDocument|createDocumentFragment|\\ncreateDocumentType|createElement|createElementNS|createEntityReference|\\ncreateEvent|createExpression|createHTMLDocument|createNodeIterator|\\ncreateNSResolver|createProcessingInstruction|createRange|createShadowRoot|\\ncreateTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|\\ndeleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|\\ndeleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|\\nenableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|\\nexitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|\\ngetAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|\\ngetAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|\\ngetClientRects|getContext|getDestinationInsertionPoints|getElementById|\\ngetElementsByClassName|getElementsByName|getElementsByTagName|\\ngetElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|\\ngetVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|\\nhasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|\\ninsertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|\\ninsertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|\\nisPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|\\nlookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|\\nmoveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|\\nparentNode|pause|play|postMessage|prepend|preventDefault|previousNode|\\npreviousSibling|probablySupportsContext|queryCommandEnabled|\\nqueryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|\\nquerySelector|querySelectorAll|registerContentHandler|registerElement|\\nregisterProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|\\nremoveAttributeNode|removeAttributeNS|removeChild|removeEventListener|\\nremoveItem|replace|replaceChild|replaceData|replaceWith|reportValidity|\\nrequestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|\\nscrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|\\nsetAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|\\nsetCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|\\nsetRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|\\nslice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|\\nsubmit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|\\ntoDataURL|toggle|toString|values|write|writeln)\\\\b\", \"name\": \"support.function.dom.coffee\" }, { \"match\": \"[a-zA-Z_$][\\\\w$]*\", \"name\": \"entity.name.function.coffee\" }, { \"match\": \"\\\\d[\\\\w$]*\", \"name\": \"invalid.illegal.identifier.coffee\" }] }, \"numbers\": { \"patterns\": [{ \"match\": \"\\\\b(?<!\\\\$)0(x|X)[0-9a-fA-F]+\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.hex.coffee\" }, { \"match\": \"\\\\b(?<!\\\\$)0(b|B)[01]+\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.binary.coffee\" }, { \"match\": \"\\\\b(?<!\\\\$)0(o|O)?[0-7]+\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.octal.coffee\" }, { \"captures\": { \"0\": { \"name\": \"constant.numeric.decimal.coffee\" }, \"1\": { \"name\": \"punctuation.separator.decimal.period.coffee\" }, \"2\": { \"name\": \"punctuation.separator.decimal.period.coffee\" }, \"3\": { \"name\": \"punctuation.separator.decimal.period.coffee\" }, \"4\": { \"name\": \"punctuation.separator.decimal.period.coffee\" }, \"5\": { \"name\": \"punctuation.separator.decimal.period.coffee\" }, \"6\": { \"name\": \"punctuation.separator.decimal.period.coffee\" } }, \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n  (?:\\\\b[0-9]+(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9]+(\\\\.)[eE][+-]?[0-9]+\\\\b)|       # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)|       # .1E+3\\n  (?:\\\\b[0-9]+[eE][+-]?[0-9]+\\\\b)|            # 1E+3\\n  (?:\\\\b[0-9]+(\\\\.)[0-9]+\\\\b)|                # 1.1\\n  (?:\\\\b[0-9]+(?=\\\\.{2,3}))|                  # 1 followed by a slice\\n  (?:\\\\b[0-9]+(\\\\.)\\\\B)|                      # 1.\\n  (?:\\\\B(\\\\.)[0-9]+\\\\b)|                      # .1\\n  (?:\\\\b[0-9]+\\\\b(?!\\\\.))                     # 1\\n)(?!\\\\$)\" }] }, \"objects\": { \"patterns\": [{ \"match\": \"[A-Z][A-Z0-9_$]*(?=\\\\s*\\\\??(\\\\.\\\\s*[a-zA-Z_$]\\\\w*|::))\", \"name\": \"constant.other.object.coffee\" }, { \"match\": \"[a-zA-Z_$][\\\\w$]*(?=\\\\s*\\\\??(\\\\.\\\\s*[a-zA-Z_$]\\\\w*|::))\", \"name\": \"variable.other.object.coffee\" }] }, \"operators\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.assignment.coffee\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.coffee\" } }, \"match\": \"(?:([a-zA-Z$_][\\\\w$]*)?\\\\s+|(?<![\\\\w$]))(and=|or=)\" }, { \"captures\": { \"1\": { \"name\": \"variable.assignment.coffee\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.coffee\" } }, \"match\": \"([a-zA-Z$_][\\\\w$]*)?\\\\s*(%=|\\\\+=|-=|\\\\*=|&&=|\\\\|\\\\|=|\\\\?=|(?<!\\\\()/=)\" }, { \"captures\": { \"1\": { \"name\": \"variable.assignment.coffee\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.bitwise.coffee\" } }, \"match\": \"([a-zA-Z$_][\\\\w$]*)?\\\\s*(&=|\\\\^=|<<=|>>=|>>>=|\\\\|=)\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.coffee\" }, { \"match\": \"!=|<=|>=|==|<|>\", \"name\": \"keyword.operator.comparison.coffee\" }, { \"match\": \"&&|!|\\\\|\\\\|\", \"name\": \"keyword.operator.logical.coffee\" }, { \"match\": \"&|\\\\||\\\\^|~\", \"name\": \"keyword.operator.bitwise.coffee\" }, { \"captures\": { \"1\": { \"name\": \"variable.assignment.coffee\" }, \"2\": { \"name\": \"keyword.operator.assignment.coffee\" } }, \"match\": \"([a-zA-Z$_][\\\\w$]*)?\\\\s*(=|:(?!:))(?![>=])\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.coffee\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.coffee\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.splat.coffee\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.existential.coffee\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.coffee\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.coffee\" }, \"2\": { \"name\": \"keyword.operator.comparison.coffee\" } }, \"match\": \"(?x)\\n\\\\b(?<![\\\\.\\\\$])\\n(?:\\n  (and|or|not) # logical\\n  |\\n  (is|isnt) # comparison\\n)\\n(?!\\\\s*:)\\\\b\" }] }, \"properties\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.property.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"name\": \"constant.other.object.property.coffee\" } }, \"match\": \"(?:(\\\\.)|(::))\\\\s*([A-Z][A-Z0-9_$]*\\\\b\\\\$*)(?=\\\\s*\\\\??(\\\\.\\\\s*[a-zA-Z_$]\\\\w*|::))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.property.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"name\": \"variable.other.object.property.coffee\" } }, \"match\": \"(?:(\\\\.)|(::))\\\\s*(\\\\$*[a-zA-Z_$][\\\\w$]*)(?=\\\\s*\\\\??(\\\\.\\\\s*[a-zA-Z_$]\\\\w*|::))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.property.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"name\": \"constant.other.property.coffee\" } }, \"match\": \"(?:(\\\\.)|(::))\\\\s*([A-Z][A-Z0-9_$]*\\\\b\\\\$*)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.property.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"name\": \"variable.other.property.coffee\" } }, \"match\": \"(?:(\\\\.)|(::))\\\\s*(\\\\$*[a-zA-Z_$][\\\\w$]*)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.property.period.coffee\" }, \"2\": { \"name\": \"keyword.operator.prototype.coffee\" }, \"3\": { \"name\": \"invalid.illegal.identifier.coffee\" } }, \"match\": \"(?:(\\\\.)|(::))\\\\s*([0-9][\\\\w$]*)\" }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdD]|\\\\.\", \"name\": \"constant.character.character-class.regexp\" }, { \"match\": \"\\\\\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})\", \"name\": \"constant.character.numeric.regexp\" }, { \"match\": \"\\\\\\\\c[A-Z]\", \"name\": \"constant.character.control.regexp\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"single_quoted_string\": { \"patterns\": [{ \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.coffee\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.coffee\" } }, \"name\": \"string.quoted.single.coffee\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.backslash.coffee\" } }, \"match\": \"(\\\\\\\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)\", \"name\": \"constant.character.escape.backslash.coffee\" }] }] } }, \"scopeName\": \"source.coffee\", \"embeddedLangs\": [\"javascript\"], \"aliases\": [\"coffeescript\"] });\nvar coffee = [\n  ...javascript,\n  lang$g\n];\n\nconst lang$f = Object.freeze({ \"displayName\": \"Pug\", \"name\": \"pug\", \"patterns\": [{ \"comment\": \"Doctype declaration.\", \"match\": \"^(!!!|doctype)(\\\\s*[a-zA-Z0-9-_]+)?\", \"name\": \"meta.tag.sgml.doctype.html\" }, { \"begin\": \"^(\\\\s*)//-\", \"comment\": \"Unbuffered (pug-only) comments.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"comment.unbuffered.block.pug\" }, { \"begin\": \"^(\\\\s*)//\", \"comment\": \"Buffered (html) comments.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"string.comment.buffered.block.pug\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"invalid.illegal.comment.comment.block.pug\" } }, \"comment\": \"Buffered comments inside buffered comments will generate invalid html.\", \"match\": \"^\\\\s*(//)(?!-)\", \"name\": \"string.comment.buffered.block.pug\" }] }, { \"begin\": \"<!--\", \"end\": \"--\\\\s*>\", \"name\": \"comment.unbuffered.block.pug\", \"patterns\": [{ \"match\": \"--\", \"name\": \"invalid.illegal.comment.comment.block.pug\" }] }, { \"begin\": \"^(\\\\s*)-$\", \"comment\": \"Unbuffered code block.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\s*)(script)((\\\\.$)|(?=[^\\\\n]*((text|application)/javascript|module).*\\\\.$))\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.tag.pug\" } }, \"comment\": \"Script tag with JavaScript code.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"begin\": \"\\\\G(?=\\\\()\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#tag_attributes\" }] }, { \"begin\": \"\\\\G(?=[.#])\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#complete_tag\" }] }, { \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\s*)(style)((\\\\.$)|(?=[.#(].*\\\\.$))\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.tag.pug\" } }, \"comment\": \"Style tag with CSS code.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"begin\": \"\\\\G(?=\\\\()\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#tag_attributes\" }] }, { \"begin\": \"\\\\G(?=[.#])\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#complete_tag\" }] }, { \"include\": \"source.css\" }] }, { \"begin\": \"^(\\\\s*):(sass)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.sass.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.sass.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.sass\" }] }, { \"begin\": \"^(\\\\s*):(scss)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.scss.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.css.scss.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.css.scss\" }] }, { \"begin\": \"^(\\\\s*):(less)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.less.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.less.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.less\" }] }, { \"begin\": \"^(\\\\s*):(stylus)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.stylus.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.stylus\" }] }, { \"begin\": \"^(\\\\s*):(coffee(-?script)?)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.coffeescript.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.coffeescript.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.coffee\" }] }, { \"begin\": \"^(\\\\s*):(uglify-js)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.js.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.js.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\s*)((:(?=.))|(:$))\", \"beginCaptures\": { \"4\": { \"name\": \"invalid.illegal.empty.generic.filter.pug\" } }, \"comment\": \"Generic Pug filter.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"patterns\": [{ \"begin\": \"\\\\G(?<=:)(?=.)\", \"end\": \"$\", \"name\": \"name.generic.filter.pug\", \"patterns\": [{ \"match\": \"\\\\G\\\\(\", \"name\": \"invalid.illegal.name.generic.filter.pug\" }, { \"match\": \"[\\\\w-]\", \"name\": \"constant.language.name.generic.filter.pug\" }, { \"include\": \"#tag_attributes\" }, { \"match\": \"\\\\W\", \"name\": \"invalid.illegal.name.generic.filter.pug\" }] }] }, { \"begin\": `^(\\\\s*)(?:(?=\\\\.$)|(?:(?=[\\\\w.#].*?\\\\.$)(?=(?:(?:(?:(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+))|(?:(?:[#!]\\\\{[^}]*\\\\})|(?:\\\\w(?:(?:[\\\\w:-]+[\\\\w-])|(?:[\\\\w-]*)))))(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+)|(?:\\\\((?:[^()\\\\'\\\\\"]*(?:(?:\\\\'(?:[^\\\\']|(?:(?<!\\\\\\\\)\\\\\\\\\\\\'))*\\\\')|(?:\\\\\"(?:[^\\\\\"]|(?:(?<!\\\\\\\\)\\\\\\\\\\\\\"))*\\\\\")))*[^()]*\\\\))*)*)(?:(?:(?::\\\\s+)|(?<=\\\\)))(?:(?:(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+))|(?:(?:[#!]\\\\{[^}]*\\\\})|(?:\\\\w(?:(?:[\\\\w:-]+[\\\\w-])|(?:[\\\\w-]*)))))(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+)|(?:\\\\((?:[^()\\\\'\\\\\"]*(?:(?:\\\\'(?:[^\\\\']|(?:(?<!\\\\\\\\)\\\\\\\\\\\\'))*\\\\')|(?:\\\\\"(?:[^\\\\\"]|(?:(?<!\\\\\\\\)\\\\\\\\\\\\\"))*\\\\\")))*[^()]*\\\\))*)*))*)\\\\.$)(?:(?:(#[\\\\w-]+)|(\\\\.[\\\\w-]+))|((?:[#!]\\\\{[^}]*\\\\})|(?:\\\\w(?:(?:[\\\\w:-]+[\\\\w-])|(?:[\\\\w-]*)))))))`, \"beginCaptures\": { \"2\": { \"name\": \"meta.selector.css entity.other.attribute-name.id.css.pug\" }, \"3\": { \"name\": \"meta.selector.css entity.other.attribute-name.class.css.pug\" }, \"4\": { \"name\": \"meta.tag.other entity.name.tag.pug\" } }, \"comment\": \"Generated from dot_block_tag.py\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"patterns\": [{ \"match\": \"\\\\.$\", \"name\": \"storage.type.function.pug.dot-block-dot\" }, { \"include\": \"#tag_attributes\" }, { \"include\": \"#complete_tag\" }, { \"begin\": \"^(?=.)\", \"end\": \"$\", \"name\": \"text.block.pug\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }] }, { \"begin\": \"^\\\\s*\", \"comment\": \"All constructs that generally span a single line starting with any number of white-spaces.\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#blocks_and_includes\" }, { \"include\": \"#unbuffered_code\" }, { \"include\": \"#mixin_definition\" }, { \"include\": \"#mixin_call\" }, { \"include\": \"#flow_control\" }, { \"include\": \"#flow_control_each\" }, { \"include\": \"#case_conds\" }, { \"begin\": \"\\\\|\", \"comment\": \"Tag pipe text line.\", \"end\": \"$\", \"name\": \"text.block.pipe.pug\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, { \"include\": \"#printed_expression\" }, { \"begin\": \"\\\\G(?=(#[^\\\\{\\\\w-])|[^\\\\w.#])\", \"comment\": \"Line starting with characters incompatible with tag name/id/class is standalone text.\", \"end\": \"$\", \"patterns\": [{ \"begin\": \"</?(?=[!#])\", \"end\": \">|$\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, { \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, { \"include\": \"#complete_tag\" }] }], \"repository\": { \"babel_parens\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)|(({\\\\s*)?$)\", \"patterns\": [{ \"include\": \"#babel_parens\" }, { \"include\": \"source.js\" }] }, \"blocks_and_includes\": { \"captures\": { \"1\": { \"name\": \"storage.type.import.include.pug\" }, \"4\": { \"name\": \"variable.control.import.include.pug\" } }, \"comment\": \"Template blocks and includes.\", \"match\": \"(extends|include|yield|append|prepend|block( (append|prepend))?)\\\\s+(.*)$\", \"name\": \"meta.first-class.pug\" }, \"case_conds\": { \"begin\": \"(default|when)((\\\\s+|(?=:))|$)\", \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" } }, \"comment\": \"Pug case conditionals.\", \"end\": \"$\", \"name\": \"meta.control.flow.pug\", \"patterns\": [{ \"begin\": \"\\\\G(?!:)\", \"end\": \"(?=:\\\\s+)|$\", \"name\": \"js.embedded.control.flow.pug\", \"patterns\": [{ \"include\": \"#case_when_paren\" }, { \"include\": \"source.js\" }] }, { \"begin\": \":\\\\s+\", \"end\": \"$\", \"name\": \"tag.case.control.flow.pug\", \"patterns\": [{ \"include\": \"#complete_tag\" }] }] }, \"case_when_paren\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"name\": \"js.when.control.flow.pug\", \"patterns\": [{ \"include\": \"#case_when_paren\" }, { \"match\": \":\", \"name\": \"invalid.illegal.name.tag.pug\" }, { \"include\": \"source.js\" }] }, \"complete_tag\": { \"begin\": \"(?=[\\\\w.#])|(:\\\\s*)\", \"end\": \"(\\\\.?$)|(?=:.)\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.function.pug.dot-block-dot\" } }, \"patterns\": [{ \"include\": \"#blocks_and_includes\" }, { \"include\": \"#unbuffered_code\" }, { \"include\": \"#mixin_call\" }, { \"include\": \"#flow_control\" }, { \"include\": \"#flow_control_each\" }, { \"match\": \"(?<=:)\\\\w.*$\", \"name\": \"invalid.illegal.name.tag.pug\" }, { \"include\": \"#tag_name\" }, { \"include\": \"#tag_id\" }, { \"include\": \"#tag_classes\" }, { \"include\": \"#tag_attributes\" }, { \"include\": \"#tag_mixin_attributes\" }, { \"captures\": { \"2\": { \"name\": \"invalid.illegal.end.tag.pug\" }, \"4\": { \"name\": \"invalid.illegal.end.tag.pug\" } }, \"match\": \"((\\\\.)\\\\s+$)|((:)\\\\s*$)\" }, { \"include\": \"#printed_expression\" }, { \"include\": \"#tag_text\" }] }, \"embedded_html\": { \"begin\": \"(?=<[^>]*>)\", \"end\": \"$|(?=>)\", \"name\": \"html\", \"patterns\": [{ \"include\": \"text.html.basic\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, \"flow_control\": { \"begin\": \"(for|if|else if|else|until|while|unless|case)(\\\\s+|$)\", \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" } }, \"comment\": \"Pug control flow.\", \"end\": \"$\", \"name\": \"meta.control.flow.pug\", \"patterns\": [{ \"begin\": \"\", \"end\": \"$\", \"name\": \"js.embedded.control.flow.pug\", \"patterns\": [{ \"include\": \"source.js\" }] }] }, \"flow_control_each\": { \"begin\": \"(each)(\\\\s+|$)\", \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" } }, \"end\": \"$\", \"name\": \"meta.control.flow.pug.each\", \"patterns\": [{ \"match\": \"([\\\\w$_]+)(?:\\\\s*,\\\\s*([\\\\w$_]+))?\", \"name\": \"variable.other.pug.each-var\" }, { \"begin\": \"\", \"end\": \"$\", \"name\": \"js.embedded.control.flow.pug\", \"patterns\": [{ \"include\": \"source.js\" }] }] }, \"html_entity\": { \"patterns\": [{ \"match\": \"(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.html.text.pug\" }, { \"match\": \"[<>&]\", \"name\": \"invalid.illegal.html_entity.text.pug\" }] }, \"inline_pug\": { \"begin\": \"(?<!\\\\\\\\)(#\\\\[)\", \"captures\": { \"1\": { \"name\": \"entity.name.function.pug\" }, \"2\": { \"name\": \"entity.name.function.pug\" } }, \"end\": \"(\\\\])\", \"name\": \"inline.pug\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#mixin_call\" }, { \"begin\": \"(?<!\\\\])(?=[\\\\w.#])|(:\\\\s*)\", \"end\": \"(?=\\\\]|(:.)|=|\\\\s)\", \"name\": \"tag.inline.pug\", \"patterns\": [{ \"include\": \"#tag_name\" }, { \"include\": \"#tag_id\" }, { \"include\": \"#tag_classes\" }, { \"include\": \"#tag_attributes\" }, { \"include\": \"#tag_mixin_attributes\" }, { \"include\": \"#inline_pug\" }, { \"match\": \"\\\\[\", \"name\": \"invalid.illegal.tag.pug\" }] }, { \"include\": \"#unbuffered_code\" }, { \"include\": \"#printed_expression\" }, { \"match\": \"\\\\[\", \"name\": \"invalid.illegal.tag.pug\" }, { \"include\": \"#inline_pug_text\" }] }, \"inline_pug_text\": { \"begin\": \"\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#inline_pug_text\" }] }, { \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, \"interpolated_error\": { \"match\": \"(?<!\\\\\\\\)[#!]\\\\{(?=[^}]*$)\", \"name\": \"invalid.illegal.tag.pug\" }, \"interpolated_value\": { \"begin\": \"(?<!\\\\\\\\)[#!]\\\\{(?=.*?\\\\})\", \"end\": \"\\\\}\", \"name\": \"string.interpolated.pug\", \"patterns\": [{ \"match\": \"{\", \"name\": \"invalid.illegal.tag.pug\" }, { \"include\": \"source.js\" }] }, \"js_braces\": { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#js_braces\" }, { \"include\": \"source.js\" }] }, \"js_brackets\": { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#js_brackets\" }, { \"include\": \"source.js\" }] }, \"js_parens\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"include\": \"source.js\" }] }, \"mixin_call\": { \"begin\": \"((?:mixin\\\\s+)|\\\\+)([\\\\w-]+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.pug\" }, \"2\": { \"name\": \"meta.tag.other entity.name.function.pug\" } }, \"end\": \"(?!\\\\()|$\", \"patterns\": [{ \"begin\": \"(?<!\\\\))\\\\(\", \"end\": \"\\\\)\", \"name\": \"args.mixin.pug\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"captures\": { \"1\": { \"name\": \"meta.tag.other entity.other.attribute-name.tag.pug\" } }, \"match\": \"([^\\\\s(),=/]+)\\\\s*=\\\\s*\" }, { \"include\": \"source.js\" }] }, { \"include\": \"#tag_attributes\" }] }, \"mixin_definition\": { \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" }, \"2\": { \"name\": \"meta.tag.other entity.name.function.pug\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.js\" }, \"4\": { \"name\": \"variable.parameter.function.js\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.js\" } }, \"match\": \"(mixin\\\\s+)([\\\\w-]+)(?:(\\\\()\\\\s*((?:[a-zA-Z_]\\\\w*\\\\s*)(?:,\\\\s*[a-zA-Z_]\\\\w*\\\\s*)*)(\\\\)))?$\" }, \"printed_expression\": { \"begin\": \"(!?\\\\=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"constant\" } }, \"end\": \"(?=\\\\])|$\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"#js_brackets\" }, { \"include\": \"source.js\" }] }, \"tag_attribute_name\": { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.tag.pug\" } }, \"match\": \"([^\\\\s(),=/!]+)\\\\s*\" }, \"tag_attribute_name_paren\": { \"begin\": \"\\\\(\\\\s*\", \"end\": \"\\\\)\", \"name\": \"entity.other.attribute-name.tag.pug\", \"patterns\": [{ \"include\": \"#tag_attribute_name_paren\" }, { \"include\": \"#tag_attribute_name\" }] }, \"tag_attributes\": { \"begin\": \"(\\\\(\\\\s*)\", \"captures\": { \"1\": { \"name\": \"constant.name.attribute.tag.pug\" } }, \"end\": \"(\\\\))\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"include\": \"#tag_attribute_name_paren\" }, { \"include\": \"#tag_attribute_name\" }, { \"match\": \"!(?!=)\", \"name\": \"invalid.illegal.tag.pug\" }, { \"begin\": \"=\\\\s*\", \"end\": \"$|(?=,|(?:\\\\s+[^!%&*\\\\-+~|<>?/])|\\\\))\", \"name\": \"attribute_value\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"include\": \"#js_brackets\" }, { \"include\": \"#js_braces\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"(?<=[%&*\\\\-+~|<>:?/])\\\\s+\", \"end\": \"$|(?=,|(?:\\\\s+[^!%&*\\\\-+~|<>?/])|\\\\))\", \"name\": \"attribute_value2\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"include\": \"#js_brackets\" }, { \"include\": \"#js_braces\" }, { \"include\": \"source.js\" }] }] }, \"tag_classes\": { \"captures\": { \"1\": { \"name\": \"invalid.illegal.tag.pug\" } }, \"match\": \"\\\\.([^\\\\w-])?[\\\\w-]*\", \"name\": \"meta.selector.css entity.other.attribute-name.class.css.pug\" }, \"tag_id\": { \"match\": \"#[\\\\w-]+\", \"name\": \"meta.selector.css entity.other.attribute-name.id.css.pug\" }, \"tag_mixin_attributes\": { \"begin\": \"(&attributes\\\\()\", \"captures\": { \"1\": { \"name\": \"entity.name.function.pug\" } }, \"end\": \"(\\\\))\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"match\": \"attributes(?=\\\\))\", \"name\": \"storage.type.keyword.pug\" }, { \"include\": \"source.js\" }] }, \"tag_name\": { \"begin\": \"([#!]\\\\{(?=.*?\\\\}))|(\\\\w(([\\\\w:-]+[\\\\w-])|([\\\\w-]*)))\", \"end\": \"(\\\\G(?<!\\\\5[^\\\\w-]))|\\\\}|$\", \"name\": \"meta.tag.other entity.name.tag.pug\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\{)\", \"end\": \"(?=\\\\})\", \"name\": \"meta.tag.other entity.name.tag.pug\", \"patterns\": [{ \"match\": \"{\", \"name\": \"invalid.illegal.tag.pug\" }, { \"include\": \"source.js\" }] }] }, \"tag_text\": { \"begin\": \"(?=.)\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, \"unbuffered_code\": { \"begin\": \"(-|(([a-zA-Z0-9_]+)\\\\s+=))\", \"beginCaptures\": { \"3\": { \"name\": \"variable.parameter.javascript.embedded.pug\" } }, \"comment\": \"name = function() {}\", \"end\": \"(?=\\\\])|(({\\\\s*)?$)\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"#js_brackets\" }, { \"include\": \"#babel_parens\" }, { \"include\": \"source.js\" }] } }, \"scopeName\": \"text.pug\", \"embeddedLangs\": [\"javascript\", \"css\", \"sass\", \"scss\", \"stylus\", \"coffee\", \"html\"], \"aliases\": [\"jade\"] });\nvar pug = [\n  ...javascript,\n  ...css,\n  ...sass,\n  ...scss,\n  ...stylus,\n  ...coffee,\n  ...html,\n  lang$f\n];\n\nconst lang$e = Object.freeze({ \"displayName\": \"Less\", \"name\": \"less\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#less-namespace-accessors\" }, { \"include\": \"#less-extend\" }, { \"include\": \"#at-rules\" }, { \"include\": \"#less-variable-assignment\" }, { \"include\": \"#property-list\" }, { \"include\": \"#selector\" }], \"repository\": { \"angle-type\": { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"(?i:[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))(deg|grad|rad|turn))\\\\b\", \"name\": \"constant.numeric.less\" }, \"at-charset\": { \"begin\": \"\\\\s*((@)charset\\\\b)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.charset.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" } }, \"end\": \"\\\\s*((?=;|$))\", \"name\": \"meta.at-rule.charset.less\", \"patterns\": [{ \"include\": \"#literal-string\" }] }, \"at-counter-style\": { \"begin\": \"\\\\s*((@)counter-style\\\\b)\\\\s+(?:(?i:\\\\b(decimal|none)\\\\b)|(-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*))\\\\s*(?=\\\\{|$)\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.counter-style.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"invalid.illegal.counter-style-name.less\" }, \"4\": { \"name\": \"entity.other.counter-style-name.css\" } }, \"end\": \"\\\\s*(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.begin.less\" } }, \"name\": \"meta.at-rule.counter-style.less\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#rule-list\" }] }, \"at-custom-media\": { \"begin\": \"(?=\\\\s*@custom-media\\\\b)\", \"end\": \"\\\\s*(?=;)\", \"name\": \"meta.at-rule.custom-media.less\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"punctuation.section.property-list.less\" } }, \"match\": \"\\\\s*;\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.custom-media.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"support.constant.custom-media.less\" } }, \"match\": \"\\\\s*((@)custom-media)(?=.*?)\" }, { \"include\": \"#media-query-list\" }] }, \"at-font-face\": { \"begin\": \"\\\\s*((@)font-face)\\\\s*(?=\\\\{|$)\", \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.font-face.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" } }, \"end\": \"\\\\s*(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"name\": \"meta.at-rule.font-face.less\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#rule-list\" }] }, \"at-import\": { \"begin\": \"\\\\s*((@)import\\\\b)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.import.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.at-rule.import.less\", \"patterns\": [{ \"include\": \"#url-function\" }, { \"include\": \"#less-variables\" }, { \"begin\": `(?<=([\"'])|([\"']\\\\)))\\\\s*`, \"end\": \"\\\\s*(?=\\\\;)\", \"patterns\": [{ \"include\": \"#media-query\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.group.less\", \"patterns\": [{ \"match\": \"reference|inline|less|css|once|multiple|optional\", \"name\": \"constant.language.import-directive.less\" }, { \"include\": \"#comma-delimiter\" }] }, { \"include\": \"#literal-string\" }] }, \"at-keyframes\": { \"begin\": \"\\\\s*((@)(-webkit-|-moz-|-o-)?keyframes)(?=.*?\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.keyframe.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"support.type.property-vendor.less\" }, \"4\": { \"name\": \"support.constant.keyframe.less\" } }, \"end\": \"\\\\s*(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"patterns\": [{ \"begin\": \"\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.begin.less\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.keyframe-selector.less\" }, \"2\": { \"name\": \"constant.numeric.less\" }, \"3\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"\\\\s*(?:(from|to)|((?:\\\\.[0-9]+|[0-9]+(?:\\\\.[0-9]*)?)(%)))\\\\s*,?\\\\s*\" }, { \"include\": \"$self\" }] }, { \"begin\": \"\\\\s*(?=[^{;])\", \"end\": \"\\\\s*(?=\\\\{)\", \"name\": \"meta.at-rule.keyframe.less\", \"patterns\": [{ \"include\": \"#keyframe-name\" }] }] }, \"at-media\": { \"begin\": \"(?=\\\\s*@media\\\\b)\", \"end\": \"\\\\s*(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"patterns\": [{ \"begin\": \"\\\\s*((@)media)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.media.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"support.constant.media.less\" } }, \"end\": \"\\\\s*(?=\\\\{)\", \"name\": \"meta.at-rule.media.less\", \"patterns\": [{ \"include\": \"#media-query-list\" }] }, { \"begin\": \"\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.begin.less\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#rule-list-body\" }, { \"include\": \"$self\" }] }] }, \"at-namespace\": { \"begin\": \"\\\\s*((@)namespace)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.namespace.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.at-rule.namespace.less\", \"patterns\": [{ \"include\": \"#url-function\" }, { \"include\": \"#literal-string\" }, { \"match\": \"(-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"name\": \"entity.name.constant.namespace-prefix.less\" }] }, \"at-page\": { \"captures\": { \"1\": { \"name\": \"keyword.control.at-rule.page.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"punctuation.definition.entity.less\" }, \"4\": { \"name\": \"entity.other.attribute-name.pseudo-class.less\" } }, \"match\": \"\\\\s*((@)page)\\\\s*(?:(:)(first|left|right))?\\\\s*(?=\\\\{|$)\", \"name\": \"meta.at-rule.page.less\", \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#rule-list\" }] }, \"at-rules\": { \"patterns\": [{ \"include\": \"#at-charset\" }, { \"include\": \"#at-counter-style\" }, { \"include\": \"#at-custom-media\" }, { \"include\": \"#at-font-face\" }, { \"include\": \"#at-media\" }, { \"include\": \"#at-import\" }, { \"include\": \"#at-keyframes\" }, { \"include\": \"#at-namespace\" }, { \"include\": \"#at-page\" }, { \"include\": \"#at-supports\" }, { \"include\": \"#at-viewport\" }] }, \"at-supports\": { \"begin\": \"(?=\\\\s*@supports\\\\b)\", \"end\": \"(?=\\\\s*)(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"patterns\": [{ \"begin\": \"\\\\s*((@)supports)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.supports.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"support.constant.supports.less\" } }, \"end\": \"\\\\s*(?=\\\\{)\", \"name\": \"meta.at-rule.supports.less\", \"patterns\": [{ \"include\": \"#at-supports-operators\" }, { \"include\": \"#at-supports-parens\" }] }, { \"begin\": \"\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.property-list.begin.less\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#rule-list-body\" }, { \"include\": \"$self\" }] }] }, \"at-supports-operators\": { \"match\": \"\\\\b(?:and|or|not)\\\\b\", \"name\": \"keyword.operator.logic.less\" }, \"at-supports-parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.group.less\", \"patterns\": [{ \"include\": \"#at-supports-operators\" }, { \"include\": \"#at-supports-parens\" }, { \"include\": \"#rule-list-body\" }] }, \"at-viewport\": { \"begin\": \"((@(-ms-)?)viewport)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.at-rule.viewport.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" }, \"3\": { \"name\": \"support.type.vendor-prefix.less\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"name\": \"meta.at-rule.viewport.less\", \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.block.begin.less\" } }, \"end\": \"(?=\\\\})\", \"name\": \"meta.block.less\", \"patterns\": [{ \"include\": \"#rule-list-body\" }] }] }, \"attr-function\": { \"begin\": \"\\\\b(attr)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#qualified-name\" }, { \"include\": \"#literal-string\" }, { \"begin\": \"(-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"end\": \"(?=\\\\))\", \"name\": \"entity.other.attribute-name.less\", \"patterns\": [{ \"match\": \"(?x)\\\\b((?i:em|ex|ch|rem)|(?i:vw|vh|vmin|vmax)|(?i:cm|mm|q|in|pt|pc|px|fr)|(?i:deg|grad|rad|turn)|(?i:s|ms)|(?i:Hz|kHz)|(?i:dpi|dpcm|dppx))\\\\b\", \"name\": \"keyword.other.unit.less\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#property-value-constants\" }, { \"include\": \"#numeric-values\" }] }, { \"include\": \"#color-values\" }] }] }, \"builtin-functions\": { \"patterns\": [{ \"include\": \"#attr-function\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#color-functions\" }, { \"include\": \"#counter-functions\" }, { \"include\": \"#cross-fade-function\" }, { \"include\": \"#cubic-bezier-function\" }, { \"include\": \"#filter-function\" }, { \"include\": \"#format-function\" }, { \"include\": \"#gradient-functions\" }, { \"include\": \"#grid-repeat-function\" }, { \"include\": \"#image-function\" }, { \"include\": \"#less-functions\" }, { \"include\": \"#local-function\" }, { \"include\": \"#minmax-function\" }, { \"include\": \"#regexp-function\" }, { \"include\": \"#shape-functions\" }, { \"include\": \"#steps-function\" }, { \"include\": \"#symbols-function\" }, { \"include\": \"#transform-functions\" }, { \"include\": \"#url-function\" }, { \"include\": \"#var-function\" }] }, \"calc-function\": { \"begin\": \"\\\\b(calc)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.calc.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-strings\" }, { \"include\": \"#var-function\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#attr-function\" }, { \"include\": \"#less-math\" }] }] }, \"color-adjuster-operators\": { \"match\": \"[\\\\-\\\\+*](?=\\\\s+)\", \"name\": \"keyword.operator.less\" }, \"color-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(rgba?)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-strings\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#number-type\" }] }] }, { \"begin\": \"\\\\b(hs(l|v)a?|hwb)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-strings\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#angle-type\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#number-type\" }] }] }, { \"include\": \"#less-color-functions\" }] }, \"color-values\": { \"patterns\": [{ \"include\": \"#color-functions\" }, { \"include\": \"#less-functions\" }, { \"include\": \"#less-variables\" }, { \"match\": \"\\\\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\\\\b\", \"name\": \"support.constant.color.w3c-standard-color-name.less\" }, { \"match\": \"\\\\b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\\\\b\", \"name\": \"support.constant.color.w3c-extended-color-keywords.less\" }, { \"match\": \"\\\\b((?i)currentColor|transparent)\\\\b\", \"name\": \"support.constant.color.w3c-special-color-keyword.less\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.less\" } }, \"match\": \"(#)(\\\\h{3}|\\\\h{4}|\\\\h{6}|\\\\h{8})\\\\b\", \"name\": \"constant.other.color.rgb-value.less\" }] }, \"comma-delimiter\": { \"captures\": { \"1\": { \"name\": \"punctuation.separator.less\" } }, \"match\": \"\\\\s*(,)\\\\s*\" }, \"comment-block\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.less\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.less\" }, { \"include\": \"#comment-line\" }] }, \"comment-line\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.less\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.less\" }, \"counter-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(counter)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-strings\" }, { \"include\": \"#less-variables\" }, { \"match\": \"(?:--(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))+|-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"name\": \"entity.other.counter-name.less\" }, { \"begin\": \"(?=,)\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"match\": \"\\\\b((?xi:arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|decimal-leading-zero|decimal|devanagari|disclosure-closed|disclosure-open|disc|ethiopic-numeric|georgian|gujarati|gurmukhi|hebrew|hiragana-iroha|hiragana|japanese-formal|japanese-informal|kannada|katakana-iroha|katakana|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman)|none)\\\\b\", \"name\": \"support.constant.property-value.counter-style.less\" }] }] }] }, { \"begin\": \"\\\\b(counters)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"(-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"name\": \"entity.other.counter-name.less string.unquoted.less\" }, { \"begin\": \"(?=,)\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-strings\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#comma-delimiter\" }, { \"match\": \"\\\\b((?xi:arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|decimal-leading-zero|decimal|devanagari|disclosure-closed|disclosure-open|disc|ethiopic-numeric|georgian|gujarati|gurmukhi|hebrew|hiragana-iroha|hiragana|japanese-formal|japanese-informal|kannada|katakana-iroha|katakana|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman)|none)\\\\b\", \"name\": \"support.constant.property-value.counter-style.less\" }] }] }] }] }, \"cross-fade-function\": { \"patterns\": [{ \"begin\": \"\\\\b(cross-fade)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.image.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#color-values\" }, { \"include\": \"#image-type\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#unquoted-string\" }] }] }] }, \"cubic-bezier-function\": { \"begin\": \"\\\\b(cubic-bezier)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.timing.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#number-type\" }] }] }, \"custom-property-name\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.custom-property.less\" }, \"2\": { \"name\": \"support.type.custom-property.name.less\" } }, \"match\": \"\\\\s*(--)((?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))+)\", \"name\": \"support.type.custom-property.less\" }, \"dimensions\": { \"patterns\": [{ \"include\": \"#angle-type\" }, { \"include\": \"#frequency-type\" }, { \"include\": \"#length-type\" }, { \"include\": \"#resolution-type\" }, { \"include\": \"#time-type\" }] }, \"filter-function\": { \"begin\": \"\\\\b(filter)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.group.less\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#image-type\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#filter-functions\" }] }] }, \"filter-functions\": { \"patterns\": [{ \"include\": \"#less-functions\" }, { \"begin\": \"\\\\b(blur)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#length-type\" }] }] }, { \"begin\": \"\\\\b(brightness|contrast|grayscale|invert|opacity|saturate|sepia)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#percentage-type\" }, { \"include\": \"#number-type\" }, { \"include\": \"#less-functions\" }] }] }, { \"begin\": \"\\\\b(drop-shadow)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#length-type\" }, { \"include\": \"#color-values\" }] }] }, { \"begin\": \"\\\\b(hue-rotate)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.filter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#angle-type\" }] }] }] }, \"format-function\": { \"patterns\": [{ \"begin\": \"\\\\b(format)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.format.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#literal-string\" }] }] }] }, \"frequency-type\": { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"(?i:[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))(Hz|kHz))\\\\b\", \"name\": \"constant.numeric.less\" }, \"gradient-functions\": { \"patterns\": [{ \"begin\": \"\\\\b((?:repeating-)?linear-gradient)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.gradient.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#angle-type\" }, { \"include\": \"#color-values\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#length-type\" }, { \"include\": \"#comma-delimiter\" }, { \"match\": \"\\\\bto\\\\b\", \"name\": \"keyword.other.less\" }, { \"match\": \"\\\\b(top|right|bottom|left)\\\\b\", \"name\": \"support.constant.property-value.less\" }] }] }, { \"begin\": \"\\\\b((?:repeating-)?radial-gradient)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.gradient.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#color-values\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#length-type\" }, { \"include\": \"#comma-delimiter\" }, { \"match\": \"\\\\b(at|circle|ellipse)\\\\b\", \"name\": \"keyword.other.less\" }, { \"match\": \"\\\\b(top|right|bottom|left|center|(farthest|closest)-(corner|side))\\\\b\", \"name\": \"support.constant.property-value.less\" }] }] }] }, \"grid-repeat-function\": { \"begin\": \"\\\\b(repeat)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.grid.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#var-function\" }, { \"include\": \"#length-type\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#minmax-function\" }, { \"include\": \"#integer-type\" }, { \"match\": \"\\\\b(auto-(fill|fit))\\\\b\", \"name\": \"support.keyword.repetitions.less\" }, { \"match\": \"\\\\b(((max|min)-content)|auto)\\\\b\", \"name\": \"support.constant.property-value.less\" }] }] }, \"image-function\": { \"begin\": \"\\\\b(image)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.image.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#image-type\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#color-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#unquoted-string\" }] }] }, \"image-type\": { \"patterns\": [{ \"include\": \"#cross-fade-function\" }, { \"include\": \"#gradient-functions\" }, { \"include\": \"#image-function\" }, { \"include\": \"#url-function\" }] }, \"integer-type\": { \"match\": \"(?:[-+]?\\\\d+)\", \"name\": \"constant.numeric.less\" }, \"keyframe-name\": { \"begin\": \"\\\\s*(-?(?:[_a-z]|[^\\\\x{00}-\\\\x{7F}]|(?:(:?\\\\\\\\[0-9a-f]{1,6}(\\\\r\\\\n|[\\\\s\\\\t\\\\r\\\\n\\\\f])?)|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f]))(?:[_a-z0-9-]|[^\\\\x{00}-\\\\x{7F}]|(?:(:?\\\\\\\\[0-9a-f]{1,6}(\\\\r\\\\n|[\\\\t\\\\r\\\\n\\\\f])?)|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f]))*)?\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.constant.animation-name.less\" } }, \"end\": \"\\\\s*(?:(,)|(?=[{;]))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.arbitrary-repetition.less\" } } }, \"length-type\": { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"0|(?i:[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))(em|ex|ch|rem|vw|vh|vmin|vmax|(c|m)?m|q|in|pt|pc|px|fr))\\\\b\", \"name\": \"constant.numeric.less\" }, \"less-boolean-function\": { \"begin\": \"\\\\b(boolean)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.boolean.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-logical-comparisons\" }] }] }, \"less-color-blend-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(multiply|screen|overlay|(soft|hard)light|difference|exclusion|negation|average)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-blend.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#color-values\" }] }] }] }, \"less-color-channel-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(hue|saturation|lightness|hsv(hue|saturation|value)|red|green|blue|alpha|luma|luminance)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-definition.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }] }] }] }, \"less-color-definition-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(argb)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-definition.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#color-values\" }] }] }] }, \"less-color-functions\": { \"patterns\": [{ \"include\": \"#less-color-blend-functions\" }, { \"include\": \"#less-color-channel-functions\" }, { \"include\": \"#less-color-definition-functions\" }, { \"include\": \"#less-color-operation-functions\" }] }, \"less-color-operation-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(fade|shade|tint)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-operation.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#percentage-type\" }] }] }, { \"begin\": \"\\\\b(spin)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-operation.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#number-type\" }] }] }, { \"begin\": \"\\\\b(((de)?saturate)|((light|dark)en)|(fade(in|out)))(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-operation.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#percentage-type\" }, { \"match\": \"\\\\brelative\\\\b\", \"name\": \"constant.language.relative.less\" }] }] }, { \"begin\": \"\\\\b(contrast)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-operation.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#percentage-type\" }] }] }, { \"begin\": \"\\\\b(greyscale)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-operation.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }] }] }, { \"begin\": \"\\\\b(mix)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color-operation.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#color-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#less-math\" }, { \"include\": \"#percentage-type\" }] }] }] }, \"less-extend\": { \"begin\": \"(:)(extend)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" }, \"2\": { \"name\": \"entity.other.attribute-name.pseudo-class.extend.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"\\\\ball\\\\b\", \"name\": \"constant.language.all.less\" }, { \"include\": \"#selectors\" }] }] }, \"less-functions\": { \"patterns\": [{ \"include\": \"#less-boolean-function\" }, { \"include\": \"#less-color-functions\" }, { \"include\": \"#less-if-function\" }, { \"include\": \"#less-list-functions\" }, { \"include\": \"#less-math-functions\" }, { \"include\": \"#less-misc-functions\" }, { \"include\": \"#less-string-functions\" }, { \"include\": \"#less-type-functions\" }] }, \"less-if-function\": { \"begin\": \"\\\\b(if)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.if.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-mixin-guards\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#property-values\" }] }] }, \"less-list-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(length)(?=\\\\()\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.length.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#property-values\" }, { \"include\": \"#comma-delimiter\" }] }] }, { \"begin\": \"\\\\b(extract)(?=\\\\()\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.extract.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#property-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#integer-type\" }] }] }, { \"begin\": \"\\\\b(range)(?=\\\\()\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.range.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#property-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#integer-type\" }] }] }] }, \"less-logical-comparisons\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.less\" } }, \"match\": \"\\\\s*(=|((<|>)=?))\\\\s*\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.group.less\", \"patterns\": [{ \"include\": \"#less-logical-comparisons\" }] }, { \"match\": \"\\\\btrue|false\\\\b\", \"name\": \"constant.language.less\" }, { \"match\": \",\", \"name\": \"punctuation.separator.less\" }, { \"include\": \"#property-values\" }, { \"include\": \"#selectors\" }, { \"include\": \"#unquoted-string\" }] }, \"less-math\": { \"patterns\": [{ \"match\": \"[-\\\\+\\\\*\\\\/]\", \"name\": \"keyword.operator.arithmetic.less\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.group.less\", \"patterns\": [{ \"include\": \"#less-math\" }] }, { \"include\": \"#numeric-values\" }, { \"include\": \"#less-variables\" }] }, \"less-math-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(ceil|floor|percentage|round|sqrt|abs|a?(sin|cos|tan))(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.math.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#numeric-values\" }] }] }, { \"captures\": { \"2\": { \"name\": \"support.function.math.less\" }, \"3\": { \"name\": \"punctuation.definition.group.begin.less\" }, \"4\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"match\": \"((pi)(\\\\()(\\\\)))\", \"name\": \"meta.function-call.less\" }, { \"begin\": \"\\\\b(pow|m(od|in|ax))(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.math.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#numeric-values\" }, { \"include\": \"#comma-delimiter\" }] }] }] }, \"less-misc-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(color)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.color.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#literal-string\" }] }] }, { \"begin\": \"\\\\b(image-(size|width|height))(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.image.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#literal-string\" }, { \"include\": \"#unquoted-string\" }] }] }, { \"begin\": \"\\\\b(convert|unit)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.convert.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#dimensions\" }, { \"include\": \"#numeric-values\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#comma-delimiter\" }, { \"match\": \"((c|m)?m|in|p(t|c|x)|m?s|g?rad|deg|turn|%|r?em|ex|ch)\", \"name\": \"keyword.other.unit.less\" }] }] }, { \"begin\": \"\\\\b(data-uri)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.data-uri.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#literal-string\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.less\" } }, \"match\": \"\\\\s*(?:(,))\" }] }] }, { \"captures\": { \"2\": { \"name\": \"punctuation.definition.group.begin.less\" }, \"3\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"match\": \"\\\\b(default(\\\\()(\\\\)))\\\\b\", \"name\": \"support.function.default.less\" }, { \"begin\": \"\\\\b(get-unit)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.get-unit.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#dimensions\" }] }] }, { \"begin\": \"\\\\b(svg-gradient)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.svg-gradient.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#angle-type\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#color-values\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#length-type\" }, { \"match\": \"\\\\bto\\\\b\", \"name\": \"keyword.other.less\" }, { \"match\": \"\\\\b(top|right|bottom|left|center)\\\\b\", \"name\": \"support.constant.property-value.less\" }, { \"match\": \"\\\\b(at|circle|ellipse)\\\\b\", \"name\": \"keyword.other.less\" }] }] }] }, \"less-mixin-guards\": { \"patterns\": [{ \"begin\": \"\\\\s*(and|not|or)?\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.logical.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.group.less\", \"patterns\": [{ \"include\": \"#less-variable-comparison\" }, { \"captures\": { \"1\": { \"name\": \"meta.group.less\" }, \"2\": { \"name\": \"punctuation.definition.group.begin.less\" }, \"3\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"match\": \"default((\\\\()(\\\\)))\", \"name\": \"support.function.default.less\" }, { \"include\": \"#property-values\" }, { \"include\": \"#less-logical-comparisons\" }, { \"include\": \"$self\" }] }] }] }, \"less-namespace-accessors\": { \"patterns\": [{ \"begin\": \"(?=\\\\s*when\\\\b)\", \"end\": \"\\\\s*(?:(,)|(?=[{;]))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"name\": \"meta.conditional.guarded-namespace.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.conditional.less\" }, \"2\": { \"name\": \"punctuation.definition.keyword.less\" } }, \"match\": \"\\\\s*(when)(?=.*?)\" }, { \"include\": \"#less-mixin-guards\" }, { \"include\": \"#comma-delimiter\" }, { \"begin\": \"\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.property-list.begin.less\" } }, \"end\": \"(?=\\\\})\", \"name\": \"meta.block.less\", \"patterns\": [{ \"include\": \"#rule-list-body\" }] }, { \"include\": \"#selectors\" }] }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.end.less\" }, \"2\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.group.less\", \"patterns\": [{ \"include\": \"#less-variable-assignment\" }, { \"include\": \"#comma-delimiter\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"match\": \"\\\\s*(;)|(?=[})])\" }, { \"include\": \"#property-values\" }, { \"include\": \"#rule-list-body\" }] }] }, \"less-number-units\": { \"patterns\": [{ \"match\": \"\\\\b((c|m)?m|in|p(t|c)|m?s|g?rad|deg|turn)\\\\b\", \"name\": \"keyword.other.unit.less\" }, { \"match\": \"\\\\b(r?em|ex|ch|vw|vh|vmin|vmax|cm|mm|q|in|pt|pc|px|fr|s|ms|Hz|kHz|dpi|dpcm|dppx|deg|grad|rad|turn)\\\\b\" }] }, \"less-string-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(e(scape)?)(?=\\\\()\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.escape.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#unquoted-string\" }] }] }, { \"begin\": \"\\\\s*(%)(?=\\\\()\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.format.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#property-values\" }] }] }, { \"begin\": \"\\\\b(replace)(?=\\\\()\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.replace.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#property-values\" }] }] }] }, \"less-strings\": { \"patterns\": [{ \"begin\": `(~)('|\")`, \"beginCaptures\": { \"1\": { \"name\": \"constant.character.escape.less\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.less\" } }, \"contentName\": \"markup.raw.inline.less\", \"end\": `('|\")|(\\\\n)`, \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.less\" }, \"2\": { \"name\": \"invalid.illegal.newline.less\" } }, \"name\": \"string.quoted.other.less\", \"patterns\": [{ \"include\": \"#string-content\" }] }] }, \"less-type-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(is(number|string|color|keyword|url|pixel|em|percentage|ruleset))(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.type.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#property-values\" }] }] }, { \"begin\": \"\\\\b(isunit)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.type.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#property-values\" }, { \"include\": \"#comma-delimiter\" }, { \"match\": \"(?x)\\\\b((?i:em|ex|ch|rem)|(?i:vw|vh|vmin|vmax)|(?i:cm|mm|q|in|pt|pc|px|fr)|(?i:deg|grad|rad|turn)|(?i:s|ms)|(?i:Hz|kHz)|(?i:dpi|dpcm|dppx))\\\\b\", \"name\": \"keyword.other.unit.less\" }] }] }, { \"begin\": \"\\\\b(isdefined)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.type.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }] }] }] }, \"less-variable-assignment\": { \"patterns\": [{ \"begin\": \"(@)(-?(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.readwrite.less\" }, \"1\": { \"name\": \"punctuation.definition.variable.less\" }, \"2\": { \"name\": \"support.other.variable.less\" } }, \"end\": \"\\\\s*(;|(\\\\.{3})|(?=\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" }, \"2\": { \"name\": \"keyword.operator.spread.less\" } }, \"name\": \"meta.property-value.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"match\": \"(((\\\\+_?)?):)([\\\\s\\\\t]*)\" }, { \"include\": \"#property-values\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#property-list\" }, { \"include\": \"#unquoted-string\" }] }] }, \"less-variable-comparison\": { \"patterns\": [{ \"begin\": \"(@{1,2})([-]?([_a-z]|[^\\\\x{00}-\\\\x{7F}]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.readwrite.less\" }, \"1\": { \"name\": \"punctuation.definition.variable.less\" }, \"2\": { \"name\": \"support.other.variable.less\" } }, \"end\": \"\\\\s*(?=\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.less\" } }, \"match\": \"\\\\s*(=|((<|>)=?))\\\\s*\" }, { \"match\": \"\\\\btrue\\\\b\", \"name\": \"constant.language.less\" }, { \"include\": \"#property-values\" }, { \"include\": \"#selectors\" }, { \"include\": \"#unquoted-string\" }, { \"match\": \",\", \"name\": \"punctuation.separator.less\" }] }] }, \"less-variable-interpolation\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.less\" }, \"2\": { \"name\": \"punctuation.definition.expression.less\" }, \"3\": { \"name\": \"support.other.variable.less\" }, \"4\": { \"name\": \"punctuation.definition.expression.less\" } }, \"match\": \"(@)(\\\\{)([-\\\\w]+)(\\\\})\", \"name\": \"variable.other.readwrite.less\" }, \"less-variables\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.less\" }, \"2\": { \"name\": \"support.other.variable.less\" } }, \"match\": \"\\\\s*(@@?)([-\\\\w]+)\", \"name\": \"variable.other.readwrite.less\" }, \"literal-string\": { \"patterns\": [{ \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.less\" } }, \"end\": \"(')|(\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.less\" }, \"2\": { \"name\": \"invalid.illegal.newline.less\" } }, \"name\": \"string.quoted.single.less\", \"patterns\": [{ \"include\": \"#string-content\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.less\" } }, \"end\": '(\")|(\\\\n)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.less\" }, \"2\": { \"name\": \"invalid.illegal.newline.less\" } }, \"name\": \"string.quoted.double.less\", \"patterns\": [{ \"include\": \"#string-content\" }] }, { \"include\": \"#less-strings\" }] }, \"local-function\": { \"begin\": \"\\\\b(local)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.font-face.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#unquoted-string\" }] }] }, \"media-query\": { \"begin\": \"\\\\s*(only|not)?\\\\s*(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.logic.media.less\" }, \"2\": { \"name\": \"support.constant.media.less\" } }, \"end\": \"\\\\s*(?:(,)|(?=[{;]))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.arbitrary-repetition.less\" } }, \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#custom-property-name\" }, { \"begin\": \"\\\\s*(and)?\\\\s*(\\\\()\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.logic.media.less\" }, \"2\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.group.less\", \"patterns\": [{ \"begin\": \"((-webkit-|-o-)?((min|max)-)?(-moz-)?(((device-)?(height|width|aspect-ratio|pixel-ratio))|(color(-index)?)|monochrome|resolution))|grid|scan|orientation\\\\s*(?=[:)])\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.property-name.media.less\" }, \"2\": { \"name\": \"support.type.vendor-prefix.less\" }, \"5\": { \"name\": \"support.type.vendor-prefix.less\" } }, \"end\": \"(((\\\\+_?)?):)|(?=\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" } } }, { \"match\": \"\\\\b(portrait|landscape|progressive|interlace)\", \"name\": \"support.constant.property-value.less\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.less\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.less\" }, \"3\": { \"name\": \"constant.numeric.less\" } }, \"match\": \"\\\\s*(\\\\d+)(/)(\\\\d+)\" }, { \"include\": \"#less-math\" }] }] }, \"media-query-list\": { \"begin\": \"\\\\s*(?=[^{;])\", \"end\": \"\\\\s*(?=[{;])\", \"patterns\": [{ \"include\": \"#media-query\" }] }, \"minmax-function\": { \"begin\": \"\\\\b(minmax)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.grid.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#length-type\" }, { \"include\": \"#comma-delimiter\" }, { \"match\": \"\\\\b(max-content|min-content)\\\\b\", \"name\": \"support.constant.property-value.less\" }] }] }, \"number-type\": { \"match\": \"[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))\", \"name\": \"constant.numeric.less\" }, \"numeric-values\": { \"patterns\": [{ \"include\": \"#dimensions\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#number-type\" }] }, \"percentage-type\": { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))(%)\", \"name\": \"constant.numeric.less\" }, \"property-list\": { \"patterns\": [{ \"begin\": \"(?=(?=[^;]*)\\\\{)\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.end.less\" } }, \"patterns\": [{ \"include\": \"#rule-list\" }] }] }, \"property-value-constants\": { \"patterns\": [{ \"match\": \"(?x)\\\\b(\\n    absolute|active|add\\n  |all(-(petite|small)-caps|-scroll)?\\n  |alpha(betic)?\\n  |alternate(-reverse)?\\n  |always|annotation|antialiased|at\\n  |auto(hiding-scrollbar)?\\n  |avoid(-column|-page|-region)?\\n  |background(-color|-image|-position|-size)?\\n  |backwards|balance|baseline|below|bevel|bicubic|bidi-override|blink\\n  |block(-line-height)?\\n  |blur\\n  |bold(er)?\\n  |border(-bottom|-left|-right|-top)?-(color|radius|width|style)\\n  |border-(bottom|top)-(left|right)-radius\\n  |border-image(-outset|-repeat|-slice|-source|-width)?\\n  |border(-bottom|-left|-right|-top|-collapse|-spacing|-box)?\\n  |both|bottom\\n  |box(-shadow)?\\n  |break-(all|word)\\n  |brightness\\n  |butt(on)?\\n  |capitalize\\n  |cent(er|ral)\\n  |char(acter-variant)?\\n  |cjk-ideographic|clip|clone|close-quote\\n  |closest-(corner|side)\\n  |col-resize|collapse\\n  |color(-stop|-burn|-dodge)?\\n  |column((-count|-gap|-reverse|-rule(-color|-width)?|-width)|s)?\\n  |common-ligatures|condensed|consider-shifts|contain\\n  |content(-box|s)?\\n  |contextual|contrast|cover\\n  |crisp(-e|E)dges\\n  |crop\\n  |cross(hair)?\\n  |da(rken|shed)\\n  |default|dense|diagonal-fractions|difference|disabled\\n  |discretionary-ligatures|disregard-shifts\\n  |distribute(-all-lines|-letter|-space)?\\n  |dotted|double|drop-shadow\\n  |(nwse|nesw|ns|ew|sw|se|nw|ne|w|s|e|n)-resize\\n  |ease(-in-out|-in|-out)?\\n  |element|ellipsis|embed|end|EndColorStr|evenodd\\n  |exclu(de(-ruby)?|sion)\\n  |expanded\\n  |(extra|semi|ultra)-(condensed|expanded)\\n  |farthest-(corner|side)?\\n  |fill(-box|-opacity)?\\n  |filter|fixed|flat\\n  |flex((-basis|-end|-grow|-shrink|-start)|box)?\\n  |flip|flood-color\\n  |font(-size(-adjust)?|-stretch|-weight)?\\n  |forwards\\n  |from(-image)?\\n  |full-width|geometricPrecision|glyphs|gradient|grayscale\\n  |grid(-height)?\\n  |groove|hand|hanging|hard-light|height|help|hidden|hide\\n  |historical-(forms|ligatures)\\n  |horizontal(-tb)?\\n  |hue\\n  |ideograph(-alpha|-numeric|-parenthesis|-space|ic)\\n  |inactive|include-ruby|infinite|inherit|initial\\n  |inline(-block|-box|-flex(box)?|-line-height|-table)?\\n  |inset|inside\\n  |inter(-ideograph|-word|sect)\\n  |invert|isolat(e|ion)|italic\\n  |jis(04|78|83|90)\\n  |justify(-all)?\\n  |keep-all\\n  |large[r]?\\n  |last|layout|left|letter-spacing\\n  |light(e[nr]|ing-color)\\n  |line(-edge|-height|-through)?\\n  |linear(-gradient|RGB)?\\n  |lining-nums|list-item|local|loose|lowercase|lr-tb|ltr\\n  |lumin(osity|ance)|manual\\n  |manipulation\\n  |margin(-bottom|-box|-left|-right|-top)?\\n  |marker(-offset|s)?\\n  |mathematical\\n  |max-(content|height|lines|size|width)\\n  |medium|middle\\n  |min-(content|height|width)\\n  |miter|mixed|move|multiply|newspaper\\n  |no-(change|clip|(close|open)-quote|(common|discretionary|historical)-ligatures|contextual|drop|repeat)\\n  |none|nonzero|normal|not-allowed|nowrap|oblique\\n  |offset(-after|-before|-end|-start)?\\n  |oldstyle-nums|opacity|open-quote\\n  |optimize(Legibility|Precision|Quality|Speed)\\n  |order|ordinal|ornaments\\n  |outline(-color|-offset|-width)?\\n  |outset|outside|over(line|-edge|lay)\\n  |padding(-bottom|-box|-left|-right|-top|-box)?\\n  |page|painted|paused\\n  |pan-(x|left|right|y|up|down)\\n  |perspective-origin\\n  |petite-caps|pixelated|pointer\\n  |pinch-zoom\\n  |pre(-line|-wrap)?\\n  |preserve-3d\\n  |progid:DXImageTransform.Microsoft.(Alpha|Blur|dropshadow|gradient|Shadow)\\n  |progress\\n  |proportional-(nums|width)\\n  |radial-gradient|recto|region|relative\\n  |repeat(-[xy])?\\n  |repeating-(linear|radial)-gradient\\n  |replaced|reset-size|reverse|ridge|right\\n  |round\\n  |row(-resize|-reverse)?\\n  |rtl|ruby|running|saturat(e|ion)|screen\\n  |scroll(-position|bar)?\\n  |separate|sepia\\n  |scale-down\\n  |shape-(image-threshold|margin|outside)\\n  |show\\n  |sideways(-lr|-rl)?\\n  |simplified\\n  |size\\n  |slashed-zero|slice\\n  |small(-caps|er)?\\n  |smooth|snap|solid|soft-light\\n  |space(-around|-between)?\\n  |span|sRGB\\n  |stack(ed-fractions)?\\n  |start(ColorStr)?\\n  |static\\n  |step-(end|start)\\n  |sticky\\n  |stop-(color|opacity)\\n  |stretch|strict\\n  |stroke(-box|-dash(array|offset)|-miterlimit|-opacity|-width)?\\n  |style(set)?\\n  |stylistic\\n  |sub(grid|pixel-antialiased|tract)?\\n  |super|swash\\n  |table(-caption|-cell|(-column|-footer|-header|-row)-group|-column|-row)?\\n  |tabular-nums|tb-rl\\n  |text((-bottom|-(decoration|emphasis)-color|-indent|-(over|under)-edge|-shadow|-size(-adjust)?|-top)|field)?\\n  |thi(ck|n)\\n  |titling-ca(ps|se)\\n  |to[p]?\\n  |touch|traditional\\n  |transform(-origin)?\\n  |under(-edge|line)?\\n  |unicase|unset|uppercase|upright\\n  |use-(glyph-orientation|script)\\n  |verso\\n  |vertical(-align|-ideographic|-lr|-rl|-text)?\\n  |view-box\\n  |viewport-fill(-opacity)?\\n  |visibility\\n  |visible(Fill|Painted|Stroke)?\\n  |wait|wavy|weight|whitespace|(device-)?width|word-spacing\\n  |wrap(-reverse)?\\n  |x{1,2}-(large|small)\\n  |z-index|zero\\n  |zoom(-in|-out)?\\n  |((?xi:arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|decimal-leading-zero|decimal|devanagari|disclosure-closed|disclosure-open|disc|ethiopic-numeric|georgian|gujarati|gurmukhi|hebrew|hiragana-iroha|hiragana|japanese-formal|japanese-informal|kannada|katakana-iroha|katakana|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman)))\\\\b\", \"name\": \"support.constant.property-value.less\" }, { \"match\": \"\\\\b(?i:sans-serif|serif|monospace|fantasy|cursive)\\\\b(?=\\\\s*[;,\\\\n}])\", \"name\": \"support.constant.font-name.less\" }] }, \"property-values\": { \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#vendor-prefix\" }, { \"include\": \"#builtin-functions\" }, { \"include\": \"#color-functions\" }, { \"include\": \"#less-math\" }, { \"include\": \"#less-functions\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#unicode-range\" }, { \"include\": \"#numeric-values\" }, { \"include\": \"#color-values\" }, { \"include\": \"#property-value-constants\" }, { \"include\": \"#literal-string\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.less\" } }, \"match\": \"(\\\\!)\\\\s*important\", \"name\": \"keyword.other.important.less\" }] }, \"pseudo-classes\": { \"patterns\": [{ \"begin\": \"(:)(dir|lang)(?=\\\\()\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"entity.other.attribute-name.pseudo-class.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#unquoted-string\" }] }] }, { \"begin\": \"(:)(not)(?=\\\\()\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"entity.other.attribute-name.pseudo-class.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#selectors\" }] }] }, { \"begin\": \"(:)(nth(-last)?-(child|of-type))(?=\\\\()\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" }, \"2\": { \"name\": \"entity.other.attribute-name.pseudo-class.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.group.less\", \"patterns\": [{ \"match\": \"\\\\b(even|odd)\\\\b\", \"name\": \"keyword.other.pseudo-class.less\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"(?:[-+]?(?:\\\\d+)?(n)(\\\\s*[-+]\\\\s*\\\\d+)?|[-+]?\\\\s*\\\\d+)\", \"name\": \"constant.numeric.less\" }, { \"include\": \"#less-math\" }, { \"include\": \"#less-strings\" }, { \"include\": \"#less-variable-interpolation\" }] }] }, { \"begin\": \"(:)(host-context)(?=\\\\()\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"entity.other.attribute-name.pseudo-class.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#selectors\" }] }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" }, \"2\": { \"name\": \"entity.other.attribute-name.pseudo-class.less\" } }, \"match\": \"(:)(active|any|checked|default|disabled|empty|enabled|first(-(child|of-type))?|fullscreen|focus|host|hover|indeterminate|in-range|invalid|last-(child|of-type)|left|link|only-(child|of-type)|optional|out-of-range|read-(only|write)|required|right|root|scope|target|valid|visited)\", \"name\": \"meta.function-call.less\" }] }, \"pseudo-elements\": { \"patterns\": [{ \"begin\": \"(::)(slotted)(?=\\\\()\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"entity.other.attribute-name.pseudo-class.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#selectors\" }] }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" }, \"2\": { \"name\": \"punctuation.definition.entity.less\" }, \"3\": { \"name\": \"support.type.vendor-prefix.less\" } }, \"match\": \"(?:(:{1,2})(?:before|after|first-line|first-letter)|(::)(-(?:moz|ms|webkit)-)?(?:(-?(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)))\\\\b\", \"name\": \"entity.other.attribute-name.pseudo-element.less\" }] }, \"qualified-name\": { \"captures\": { \"1\": { \"name\": \"entity.name.constant.less\" }, \"2\": { \"name\": \"entity.name.namespace.wildcard.less\" }, \"3\": { \"name\": \"punctuation.separator.namespace.less\" } }, \"match\": \"(?:(-?(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)|(\\\\*))?([|])(?!=)\" }, \"regexp-function\": { \"begin\": \"\\\\b(regexp)(?=\\\\()\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"support.function.regexp.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.function-call.less\", \"patterns\": [{ \"include\": \"#literal-string\" }] }] }, \"resolution-type\": { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"(?i:[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))(dpi|dpcm|dppx))\\\\b\", \"name\": \"constant.numeric.less\" }, \"rule-list\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.begin.less\" } }, \"end\": \"(?=\\\\s*\\\\})\", \"name\": \"meta.property-list.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"match\": \"\\\\s*(;)|(?=[})])\" }, { \"include\": \"#rule-list-body\" }, { \"include\": \"#less-extend\" }] }] }, \"rule-list-body\": { \"patterns\": [{ \"include\": \"#comment-block\" }, { \"include\": \"#comment-line\" }, { \"include\": \"#at-rules\" }, { \"include\": \"#less-variable-assignment\" }, { \"include\": \"#less-variable-interpolation\" }, { \"begin\": \"(?=[-a-z])\", \"end\": \"$|(?![-a-z])\", \"patterns\": [{ \"include\": \"#vendor-prefix\" }, { \"include\": \"#custom-property-name\" }, { \"include\": \"#filter-function\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.custom-property.prefix.less\" }, \"2\": { \"name\": \"support.type.custom-property.name.less\" } }, \"match\": \"\\\\b(var-)(-?(?:[[-\\\\w][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)(?=\\\\s)\", \"name\": \"invalid.deprecated.custom-property.less\" }, { \"begin\": \"\\\\bfont(-family)?(?!-)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.property-name.less\" } }, \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.property-name.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"match\": \"(((\\\\+_?)?):)([\\\\s\\\\t]*)\" }, { \"include\": \"#property-values\" }, { \"match\": \"-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*(\\\\s+-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)*\", \"name\": \"string.unquoted.less\" }, { \"match\": \",\", \"name\": \"punctuation.separator.less\" }] }, { \"begin\": \"\\\\banimation(-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function))?\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.property-name.less\" } }, \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"patterns\": [{ \"begin\": \"(((\\\\+_?)?):)(?=[\\\\s\\\\t]*)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" } }, \"captures\": { \"1\": { \"name\": \"punctuation.definition.arbitrary-repetition.less\" } }, \"contentName\": \"meta.property-value.less\", \"end\": \"(?=\\\\s*(;)|(?=[})]))\", \"patterns\": [{ \"match\": \"\\\\b(linear|ease(-in)?(-out)?|step-(start|end)|none|forwards|backwards|both|normal|alternate(-reverse)?|reverse|running|paused)\\\\b\", \"name\": \"support.constant.property-value.less\" }, { \"include\": \"#cubic-bezier-function\" }, { \"include\": \"#steps-function\" }, { \"include\": \"#time-type\" }, { \"include\": \"#number-type\" }, { \"match\": \"-?(?:[_a-zA-Z]|[^\\\\x{00}-\\\\x{7F}]|(?:(:?\\\\\\\\[0-9a-f]{1,6}(\\\\r\\\\n|[\\\\s\\\\t\\\\r\\\\n\\\\f])?)|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f]))(?:[-_a-zA-Z0-9]|[^\\\\x{00}-\\\\x{7F}]|(?:(:?\\\\\\\\[0-9a-f]{1,6}(\\\\r\\\\n|[\\\\t\\\\r\\\\n\\\\f])?)|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f]))*\", \"name\": \"variable.other.constant.animation-name.less\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#property-values\" }, { \"match\": \"\\\\s*(?:(,))\" }] }] }, { \"begin\": \"\\\\b(transition(-(property|duration|delay|timing-function))?)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"meta.property-name.less\" }, \"1\": { \"name\": \"support.type.property-name.less\" } }, \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"match\": \"(((\\\\+_?)?):)([\\\\s\\\\t]*)\" }, { \"include\": \"#time-type\" }, { \"include\": \"#property-values\" }, { \"include\": \"#cubic-bezier-function\" }, { \"include\": \"#steps-function\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.arbitrary-repetition.less\" } }, \"match\": \"\\\\s*(?:(,))\" }] }, { \"begin\": \"\\\\bfilter\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.property-name.less\" } }, \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.property-name.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"match\": \"(((\\\\+_?)?):)([\\\\s\\\\t]*)\" }, { \"match\": \"\\\\b(inherit|initial|unset|none)\\\\b\", \"name\": \"meta.property-value.less\" }, { \"include\": \"#filter-functions\" }] }, { \"begin\": \"\\\\bwill-change\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.property-name.less\" } }, \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.property-name.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"match\": \"(((\\\\+_?)?):)([\\\\s\\\\t]*)\" }, { \"match\": \"unset|initial|inherit|will-change|auto|scroll-position|contents\", \"name\": \"invalid.illegal.property-value.less\" }, { \"match\": \"-?(?:[[-\\\\w][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*\", \"name\": \"support.constant.property-value.less\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.arbitrary-repetition.less\" } }, \"match\": \"\\\\s*(?:(,))\" }] }, { \"begin\": \"\\\\bcounter-(increment|(re)?set)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.property-name.less\" } }, \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"name\": \"meta.property-name.less\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"match\": \"(((\\\\+_?)?):)([\\\\s\\\\t]*)\" }, { \"match\": \"-?(?:[[-\\\\w][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{9f}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*\", \"name\": \"entity.name.constant.counter-name.less\" }, { \"include\": \"#integer-type\" }, { \"match\": \"unset|initial|inherit|auto\", \"name\": \"invalid.illegal.property-value.less\" }] }, { \"match\": \"(?x)\\\\b( accent-height | align-content | align-items | align-self | alignment-baseline | all | animation-timing-function | animation-play-state | animation-name | animation-iteration-count | animation-fill-mode | animation-duration | animation-direction | animation-delay | animation | appearance | ascent | azimuth | backface-visibility | background-size | background-repeat-y | background-repeat-x | background-repeat | background-position-y | background-position-x | background-position | background-origin | background-image | background-color | background-clip | background-blend-mode | background-attachment | background | baseline-shift | begin | bias | blend-mode | border-((top|right|bottom|left)-)?(width|style|color) | border-(top|bottom)-(right|left)-radius | border-image-(width|source|slice|repeat|outset) | border-(top|right|bottom|left|collapse|image|radius|spacing) | border | bottom | box-(align|decoration-break|direction|flex|ordinal-group|orient|pack|shadow|sizing) | break-(after|before|inside) | caption-side | clear | clip-path | clip-rule | clip | color(-(interpolation(-filters)?|profile|rendering))? | columns | column-(break-before|count|fill|gap|(rule(-(color|style|width))?)|span|width) | contain | content | counter-(increment|reset) | cursor | (c|d|f)(x|y) | direction | display | divisor | dominant-baseline | dur | elevation | empty-cells | enable-background | end | fallback | fill(-(opacity|rule))? | filter | flex(-(align|basis|direction|flow|grow|item-align|line-pack|negative|order|pack|positive|preferred-size|shrink|wrap))? | float | flood-(color|opacity) | font-display | font-family | font-feature-settings | font-kerning | font-language-override | font-size(-adjust)? | font-smoothing | font-stretch | font-style | font-synthesis | font-variant(-(alternates|caps|east-asian|ligatures|numeric|position))? | font-weight | font | fr | glyph-orientation-(horizontal|vertical) | grid-(area|gap) | grid-auto-(columns|flow|rows) | grid-(column|row)(-(end|gap|start))? | grid-template(-(areas|columns|rows))? | height | hyphens | image-(orientation|rendering|resolution) | isolation | justify-content | kerning | left | letter-spacing | lighting-color | line-(box-contain|break|clamp|height) | list-style(-(image|position|type))? | margin(-(bottom|left|right|top))? | marker(-(end|mid|start))? | mask(-(clip||composite|image|origin|position|repeat|size|type))? | (max|min)-(height|width) | mix-blend-mode | nbsp-mode | negative | object-(fit|position) | opacity | operator | order | orphans | outline(-(color|offset|style|width))? | overflow(-(scrolling|wrap|x|y))? | pad(ding(-(bottom|left|right|top))?)? | page(-break-(after|before|inside))? | paint-order | pause(-(after|before))? | perspective(-origin(-(x|y))?)? | pitch(-range)? | pointer-events | position | prefix | quotes | range | resize | right | rotate | scale | scroll-behavior | shape-(image-threshold|margin|outside|rendering) | size | speak(-as)? | src | stop-(color|opacity) | stroke(-(dash(array|offset)|line(cap|join)|miterlimit|opacity|width))? | suffix | symbols | system | tab-size | table-layout | tap-highlight-color | text-align(-last)? | text-decoration(-(color|line|style))? | text-emphasis(-(color|position|style))? | text-(anchor|fill-color|height|indent|justify|orientation|overflow|rendering|shadow|transform|underline-position) | top | touch-action | transform(-origin(-(x|y))?) | transform(-style)? | transition(-(delay|duration|property|timing-function))? | translate | unicode-(bidi|range) | user-(drag|select) | vertical-align | visibility | white-space | widows | width | will-change | word-(break|spacing|wrap) | writing-mode | z-index | zoom )\\\\b\", \"name\": \"support.type.property-name.less\" }, { \"include\": \"$self\" }] }, { \"begin\": \"\\\\b(((\\\\+_?)?):)([\\\\s\\\\t]*)\", \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.less\" }, \"4\": { \"name\": \"meta.property-value.less\" } }, \"contentName\": \"meta.property-value.less\", \"end\": \"\\\\s*(;)|(?=[})])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.less\" } }, \"patterns\": [{ \"include\": \"#property-values\" }] }, { \"include\": \"$self\" }] }, \"selector\": { \"patterns\": [{ \"begin\": \"(?=[>~+/\\\\.*#a-zA-Z\\\\[&]|(\\\\:{1,2}[^\\\\s])|@\\\\{)\", \"contentName\": \"meta.selector.less\", \"end\": \"(?=@(?!\\\\{)|[{;])\", \"patterns\": [{ \"include\": \"#comment-line\" }, { \"include\": \"#selectors\" }, { \"include\": \"#less-namespace-accessors\" }, { \"include\": \"#less-variable-interpolation\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.less\" } }, \"match\": \"(\\\\!)\\\\s*important\", \"name\": \"keyword.other.important.less\" }] }] }, \"selectors\": { \"patterns\": [{ \"match\": \"\\\\b([a-z](?:(?:[-_a-z0-9\\\\x{00B7}]|\\\\\\\\\\\\.|[[\\\\x{00C0}-\\\\x{00D6}][\\\\x{00D8}-\\\\x{00F6}][\\\\x{00F8}-\\\\x{02FF}][\\\\x{0300}-\\\\x{037D}][\\\\x{037F}-\\\\x{1FFF}][\\\\x{200C}-\\\\x{200D}][\\\\x{203F}-\\\\x{2040}][\\\\x{2070}-\\\\x{218F}][\\\\x{2C00}-\\\\x{2FEF}][\\\\x{3001}-\\\\x{D7FF}][\\\\x{F900}-\\\\x{FDCF}][\\\\x{FDF0}-\\\\x{FFFD}][\\\\x{10000}-\\\\x{EFFFF}]]))*-(?:(?:[-_a-z0-9\\\\x{00B7}]|\\\\\\\\\\\\.|[[\\\\x{00C0}-\\\\x{00D6}][\\\\x{00D8}-\\\\x{00F6}][\\\\x{00F8}-\\\\x{02FF}][\\\\x{0300}-\\\\x{037D}][\\\\x{037F}-\\\\x{1FFF}][\\\\x{200C}-\\\\x{200D}][\\\\x{203F}-\\\\x{2040}][\\\\x{2070}-\\\\x{218F}][\\\\x{2C00}-\\\\x{2FEF}][\\\\x{3001}-\\\\x{D7FF}][\\\\x{F900}-\\\\x{FDCF}][\\\\x{FDF0}-\\\\x{FFFD}][\\\\x{10000}-\\\\x{EFFFF}]]))*)\\\\b\", \"name\": \"entity.name.tag.custom.less\" }, { \"match\": \"(?x)\\\\b( a | abbr | acronym | address | applet | area | article | aside | audio | b | base | basefont | bdi | bdo | big | blockquote | body | br | button | canvas | caption | circle | cite | clipPath | code | col | colgroup | content | data | dataList | dd | defs | del | details | dfn | dialog | dir | div | dl | dt | element | ellipse | em | embed | eventsource | fieldset | figcaption | figure | filter | footer | foreignObject | form | frame | frameset | g | glyph | glyphRef | h1 | h2 | h3 | h4 | h5 | h6 | head | header | hgroup | hr | html | i | iframe | image | img | input | ins | isindex | kbd | keygen | label | legend | li | line | linearGradient | link | main | map | mark | marker | mask | menu | meta | meter | nav | noframes | noscript | object | ol | optgroup | option | output | p | param | path | pattern | picture | polygon | polyline | pre | progress | q | radialGradient | rect | rp | ruby | rt | rtc | s | samp | script | section | select | shadow | small | source | span | stop | strike | strong | style | sub | summary | sup | svg | switch | symbol | table | tbody | td | template | textarea | textPath | tfoot | th | thead | time | title | tr | track | tref | tspan | tt | u | ul | use | var | video | wbr | xmp )\\\\b\", \"name\": \"entity.name.tag.less\" }, { \"begin\": \"(\\\\.)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"(?![-\\\\w]|[^\\\\x{00}-\\\\x{9f}]|\\\\\\\\([A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9])|(\\\\@(?=\\\\{)))\", \"name\": \"entity.other.attribute-name.class.less\", \"patterns\": [{ \"include\": \"#less-variable-interpolation\" }] }, { \"begin\": \"(#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"(?![-\\\\w]|[^\\\\x{00}-\\\\x{9f}]|\\\\\\\\([A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9])|(\\\\@(?=\\\\{)))\", \"name\": \"entity.other.attribute-name.id.less\", \"patterns\": [{ \"include\": \"#less-variable-interpolation\" }] }, { \"begin\": \"(&)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.entity.less\" } }, \"contentName\": \"entity.other.attribute-name.parent.less\", \"end\": \"(?![-\\\\w]|[^\\\\x{00}-\\\\x{9f}]|\\\\\\\\([A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9])|(\\\\@(?=\\\\{)))\", \"name\": \"entity.other.attribute-name.parent.less\", \"patterns\": [{ \"include\": \"#less-variable-interpolation\" }, { \"include\": \"#selectors\" }] }, { \"include\": \"#pseudo-elements\" }, { \"include\": \"#pseudo-classes\" }, { \"include\": \"#less-extend\" }, { \"match\": \"(?!\\\\+_?:)(?:>{1,3}|[~+])(?![>~+;}])\", \"name\": \"punctuation.separator.combinator.less\" }, { \"match\": \"((?:>{1,3}|[~+])){2,}\", \"name\": \"invalid.illegal.combinator.less\" }, { \"match\": \"\\\\/deep\\\\/\", \"name\": \"invalid.illegal.combinator.less\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.entity.less\" } }, \"end\": \"\\\\]\", \"name\": \"meta.attribute-selector.less\", \"patterns\": [{ \"include\": \"#less-variable-interpolation\" }, { \"include\": \"#qualified-name\" }, { \"match\": \"(-?(?:[[_a-zA-Z][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))(?:[[-\\\\w][^\\\\x{00}-\\\\x{7F}]]|(?:\\\\\\\\\\\\h{1,6}[\\\\s\\\\t\\\\n\\\\f]?|\\\\\\\\[^\\\\n\\\\f\\\\h]))*)\", \"name\": \"entity.other.attribute-name.less\" }, { \"begin\": \"\\\\s*([~*|^$]?=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"keyword.operator.attribute-selector.less\" } }, \"end\": \"(?=(\\\\s|\\\\]))\", \"patterns\": [{ \"include\": \"#less-variable-interpolation\" }, { \"match\": `[^\\\\s\\\\]\\\\['\"]`, \"name\": \"string.unquoted.less\" }, { \"include\": \"#literal-string\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.less\" } }, \"match\": \"(?:\\\\s+([iI]))?\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.entity.less\" }] }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.arbitrary-repetition.less\" } }, \"match\": \"\\\\s*(?:(,))\" }, { \"match\": \"\\\\*\", \"name\": \"entity.name.tag.wildcard.less\" }] }, \"shape-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(rect)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.shape.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"\\\\bauto\\\\b\", \"name\": \"support.constant.property-value.less\" }, { \"include\": \"#length-type\" }, { \"include\": \"#comma-delimiter\" }] }] }, { \"begin\": \"\\\\b(inset)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.shape.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"\\\\bround\\\\b\", \"name\": \"keyword.other.less\" }, { \"include\": \"#length-type\" }, { \"include\": \"#percentage-type\" }] }] }, { \"begin\": \"\\\\b(circle|ellipse)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.shape.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"\\\\bat\\\\b\", \"name\": \"keyword.other.less\" }, { \"match\": \"\\\\b(top|right|bottom|left|center|closest-side|farthest-side)\\\\b\", \"name\": \"support.constant.property-value.less\" }, { \"include\": \"#length-type\" }, { \"include\": \"#percentage-type\" }] }] }, { \"begin\": \"\\\\b(polygon)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.shape.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"\\\\b(nonzero|evenodd)\\\\b\", \"name\": \"support.constant.property-value.less\" }, { \"include\": \"#length-type\" }, { \"include\": \"#percentage-type\" }] }] }] }, \"steps-function\": { \"begin\": \"\\\\b(steps)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.timing.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#integer-type\" }, { \"match\": \"(end|middle|start)\", \"name\": \"support.keyword.timing-direction.less\" }] }] }, \"string-content\": { \"patterns\": [{ \"include\": \"#less-variable-interpolation\" }, { \"match\": \"\\\\\\\\\\\\s*\\\\n\", \"name\": \"constant.character.escape.newline.less\" }, { \"match\": \"\\\\\\\\(\\\\h{1,6}|.)\", \"name\": \"constant.character.escape.less\" }] }, \"symbols-function\": { \"begin\": \"\\\\b(symbols)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.counter.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \"\\\\b(cyclic|numeric|alphabetic|symbolic|fixed)\\\\b\", \"name\": \"support.constant.symbol-type.less\" }, { \"include\": \"#comma-delimiter\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#image-type\" }] }] }, \"time-type\": { \"captures\": { \"1\": { \"name\": \"keyword.other.unit.less\" } }, \"match\": \"(?i:[-+]?(?:(?:\\\\d*\\\\.\\\\d+(?:[eE](?:[-+]?\\\\d+))*)|(?:[-+]?\\\\d+))(s|ms))\\\\b\", \"name\": \"constant.numeric.less\" }, \"transform-functions\": { \"patterns\": [{ \"begin\": \"\\\\b(matrix3d|scale3d|matrix|scale)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#number-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(translate(3d)?)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#percentage-type\" }, { \"include\": \"#length-type\" }, { \"include\": \"#number-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(translate[XY])(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#percentage-type\" }, { \"include\": \"#length-type\" }, { \"include\": \"#number-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(rotate[XYZ]?|skew[XY])(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#angle-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(skew)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#angle-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(translateZ|perspective)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#length-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(rotate3d)(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#angle-type\" }, { \"include\": \"#number-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#var-function\" }] }] }, { \"begin\": \"\\\\b(scale[XYZ])(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.transform.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#number-type\" }, { \"include\": \"#less-variables\" }, { \"include\": \"#calc-function\" }, { \"include\": \"#var-function\" }] }] }] }, \"unicode-range\": { \"captures\": { \"1\": { \"name\": \"support.constant.unicode-range.prefix.less\" }, \"2\": { \"name\": \"constant.codepoint-range.less\" }, \"3\": { \"name\": \"punctuation.section.range.less\" } }, \"match\": \"(?i)(u\\\\+)([0-9a-f?]{1,6}(?:(-)[0-9a-f]{1,6})?)\", \"name\": \"support.unicode-range.less\" }, \"unquoted-string\": { \"match\": `[^\\\\s'\"]`, \"name\": \"string.unquoted.less\" }, \"url-function\": { \"begin\": \"\\\\b(url)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.url.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#less-variables\" }, { \"include\": \"#literal-string\" }, { \"include\": \"#unquoted-string\" }, { \"include\": \"#var-function\" }] }] }, \"var-function\": { \"patterns\": [{ \"begin\": \"\\\\b(var)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.var.less\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.end.less\" } }, \"name\": \"meta.function-call.less\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.begin.less\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#comma-delimiter\" }, { \"include\": \"#custom-property-name\" }, { \"include\": \"#less-variables\" }] }] }] }, \"vendor-prefix\": { \"match\": \"-(?:webkit|moz(-osx)?|ms|o)-\", \"name\": \"support.type.vendor-prefix.less\" } }, \"scopeName\": \"source.css.less\" });\nvar less = [\n  lang$e\n];\n\nconst lang$d = Object.freeze({ \"displayName\": \"TypeScript\", \"name\": \"typescript\", \"patterns\": [{ \"include\": \"#directives\" }, { \"include\": \"#statements\" }, { \"include\": \"#shebang\" }], \"repository\": { \"access-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ts\" }, \"after-operator-block-as-object-literal\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[:=(,\\\\[?+!>]|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^yield|[^\\\\._$[:alnum:]]yield|^throw|[^\\\\._$[:alnum:]]throw|^in|[^\\\\._$[:alnum:]]in|^of|[^\\\\._$[:alnum:]]of|^typeof|[^\\\\._$[:alnum:]]typeof|&&|\\\\|\\\\||\\\\*)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"meta.objectliteral.ts\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"patterns\": [{ \"include\": \"#binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"patterns\": [{ \"include\": \"#binding-element-const\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"name\": \"meta.array.literal.ts\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"arrow-function\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" }, \"2\": { \"name\": \"variable.parameter.ts\" } }, \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?==>)\", \"name\": \"meta.arrow.ts\" }, { \"begin\": \"(?x) (?:\\n  (?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\n)? ((?<![})!\\\\]])\\\\s*\\n  (?=\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  )\\n)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.arrow.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#arrow-return-type\" }, { \"include\": \"#possibly-arrow-return-type\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.ts\" } }, \"end\": \"((?<=\\\\}|\\\\S)(?<!=>)|((?!\\\\{)(?=\\\\S)))(?!\\\\/[\\\\/\\\\*])\", \"name\": \"meta.arrow.ts\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }] }] }, \"arrow-return-type\": { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.return.type.arrow.ts\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"arrow-return-type-body\": { \"patterns\": [{ \"begin\": \"(?<=[:])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"async-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(async)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.async.ts\" }, \"binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#array-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }] }, \"boolean-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))true(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.true.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))false(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.false.ts\" }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"{\", \"end\": \"}|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"cast\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"meta.brace.angle.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"meta.brace.angle.ts\" } }, \"match\": \"\\\\s*(<)\\\\s*(const)\\\\s*(>)\", \"name\": \"cast.expr.ts\" }, { \"begin\": \"(?:(?<!\\\\+\\\\+|--)(?<=^return|[^\\\\._$[:alnum:]]return|^throw|[^\\\\._$[:alnum:]]throw|^yield|[^\\\\._$[:alnum:]]yield|^await|[^\\\\._$[:alnum:]]await|^default|[^\\\\._$[:alnum:]]default|[=(,:>*?\\\\&\\\\|\\\\^]|[^_$[:alnum:]](?:\\\\+\\\\+|\\\\-\\\\-)|[^\\\\+]\\\\+|[^\\\\-]\\\\-))\\\\s*(<)(?!<?\\\\=)(?!\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.angle.ts\" } }, \"end\": \"(\\\\>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.angle.ts\" } }, \"name\": \"cast.expr.ts\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?:(?<=^))\\\\s*(<)(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*>)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.angle.ts\" } }, \"end\": \"(\\\\>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.angle.ts\" } }, \"name\": \"cast.expr.ts\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"class-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(class)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.ts\" }, \"4\": { \"name\": \"storage.type.class.ts\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.ts\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-declaration-or-expression-patterns\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.ts\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"class-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(class)\\\\b(?=\\\\s+|[<{]|\\\\/[\\\\/*])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"storage.type.class.ts\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.ts\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-or-interface-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#decorator\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#string\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#property-accessor\" }, { \"include\": \"#async-modifier\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-or-interface-heritage\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(extends|implements)\\\\b)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" }, \"3\": { \"name\": \"punctuation.accessor.optional.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)*\\\\s*)\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.inherited-class.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"include\": \"#expressionPunctuations\" }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ts\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ts\" } }, \"name\": \"comment.block.documentation.ts\", \"patterns\": [{ \"include\": \"#docblock\" }] }, { \"begin\": \"(/\\\\*)(?:\\\\s*((@)internal)(?=\\\\s|(\\\\*/)))?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.ts\" }, \"2\": { \"name\": \"storage.type.internaldeclaration.ts\" }, \"3\": { \"name\": \"punctuation.decorator.internaldeclaration.ts\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ts\" } }, \"name\": \"comment.block.ts\" }, { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.ts\" }, \"2\": { \"name\": \"comment.line.double-slash.ts\" }, \"3\": { \"name\": \"punctuation.definition.comment.ts\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.ts\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.ts\" } }, \"contentName\": \"comment.line.double-slash.ts\", \"end\": \"(?=$)\" }] }, \"control-statement\": { \"patterns\": [{ \"include\": \"#switch-statement\" }, { \"include\": \"#for-loop\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.trycatch.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.loop.ts\" }, \"2\": { \"name\": \"entity.name.label.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|goto)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.loop.ts\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.ts\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.switch.ts\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(with)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.with.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(package)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(debugger)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.other.debugger.ts\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"meta.block.ts\", \"patterns\": [{ \"include\": \"#statements\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#decorator\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#function-declaration\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#interface-declaration\" }, { \"include\": \"#enum-declaration\" }, { \"include\": \"#namespace-declaration\" }, { \"include\": \"#type-alias-declaration\" }, { \"include\": \"#import-equals-declaration\" }, { \"include\": \"#import-declaration\" }, { \"include\": \"#export-declaration\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(declare|export)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ts\" }] }, \"decorator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.decorator.ts\" } }, \"end\": \"(?=\\\\s)\", \"name\": \"meta.decorator.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"destructuring-const\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.ts\", \"patterns\": [{ \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.ts\", \"patterns\": [{ \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-parameter\": { \"patterns\": [{ \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"name\": \"meta.parameter.object-binding-pattern.ts\", \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, { \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"name\": \"meta.paramter.array-binding-pattern.ts\", \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }] }, \"destructuring-parameter-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"variable.parameter.ts\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.ts\", \"patterns\": [{ \"include\": \"#object-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.ts\", \"patterns\": [{ \"include\": \"#array-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-variable-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"meta.definition.variable.ts variable.other.readwrite.ts\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable-rest-const\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"meta.definition.variable.ts variable.other.constant.ts\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"directives\": { \"begin\": \"^(///)\\\\s*(?=<(reference|amd-dependency|amd-module)(\\\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\\\s*=\\\\s*((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)))+\\\\s*/>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.ts\" } }, \"end\": \"(?=$)\", \"name\": \"comment.line.triple-slash.directive.ts\", \"patterns\": [{ \"begin\": \"(<)(reference|amd-dependency|amd-module)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.directive.ts\" }, \"2\": { \"name\": \"entity.name.tag.directive.ts\" } }, \"end\": \"/>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.directive.ts\" } }, \"name\": \"meta.tag.ts\", \"patterns\": [{ \"match\": \"path|types|no-default-lib|lib|name|resolution-mode\", \"name\": \"entity.other.attribute-name.directive.ts\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.ts\" }, { \"include\": \"#string\" }] }] }, \"docblock\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.access-type.jsdoc\" } }, \"match\": \"(?x)\\n((@)(?:access|api))\\n\\\\s+\\n(private|protected|public)\\n\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"5\": { \"name\": \"constant.other.email.link.underline.jsdoc\" }, \"6\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"match\": \"(?x)\\n((@)author)\\n\\\\s+\\n(\\n  [^@\\\\s<>*/]\\n  (?:[^@<>*/]|\\\\*[^/])*\\n)\\n(?:\\n  \\\\s*\\n  (<)\\n  ([^>\\\\s]+)\\n  (>)\\n)?\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"keyword.operator.control.jsdoc\" }, \"5\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)borrows) \\\\s+\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <that namepath>\\n\\\\s+ (as) \\\\s+              # as\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <this namepath>\" }, { \"begin\": \"((@)example)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=@|\\\\*/)\", \"name\": \"meta.example.jsdoc\", \"patterns\": [{ \"match\": \"^\\\\s\\\\*\\\\s+\" }, { \"begin\": \"\\\\G(<)caption(>)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"contentName\": \"constant.other.description.jsdoc\", \"end\": \"(</)caption(>)|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } } }, { \"captures\": { \"0\": { \"name\": \"source.embedded.ts\" } }, \"match\": \"[^\\\\s@*](?:[^*]|\\\\*[^/])*\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.symbol-type.jsdoc\" } }, \"match\": \"(?x) ((@)kind) \\\\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"4\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)see)\\n\\\\s+\\n(?:\\n  # URL\\n  (\\n    (?=https?://)\\n    (?:[^\\\\s*]|\\\\*[^/])+\\n  )\\n  |\\n  # JSDoc namepath\\n  (\\n    (?!\\n      # Avoid matching bare URIs (also acceptable as links)\\n      https?://\\n      |\\n      # Avoid matching {@inline tags}; we match those below\\n      (?:\\\\[[^\\\\[\\\\]]*\\\\])? # Possible description [preceding]{@tag}\\n      {@(?:link|linkcode|linkplain|tutorial)\\\\b\\n    )\\n    # Matched namepath\\n    (?:[^@\\\\s*/]|\\\\*[^/])+\\n  )\\n)\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n((@)template)\\n\\\\s+\\n# One or more valid identifiers\\n(\\n  [A-Za-z_$]         # First character: non-numeric word character\\n  [\\\\w$.\\\\[\\\\]]*        # Rest of identifier\\n  (?:                # Possible list of additional identifiers\\n    \\\\s* , \\\\s*\\n    [A-Za-z_$]\\n    [\\\\w$.\\\\[\\\\]]*\\n  )*\\n)\" }, { \"begin\": \"(?x)((@)template)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:arg|argument|const|constant|member|namespace|param|var)\\n)\\n\\\\s+\\n(\\n  [A-Za-z_$]\\n  [\\\\w$.\\\\[\\\\]]*\\n)\" }, { \"begin\": \"((@)typedef)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"(?:[^@\\\\s*/]|\\\\*[^/])+\", \"name\": \"entity.name.type.instance.jsdoc\" }] }, { \"begin\": \"((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.optional-value.begin.bracket.square.jsdoc\" }, \"2\": { \"name\": \"keyword.operator.assignment.jsdoc\" }, \"3\": { \"name\": \"source.embedded.ts\" }, \"4\": { \"name\": \"punctuation.definition.optional-value.end.bracket.square.jsdoc\" }, \"5\": { \"name\": \"invalid.illegal.syntax.jsdoc\" } }, \"match\": `(?x)\n(\\\\[)\\\\s*\n[\\\\w$]+\n(?:\n  (?:\\\\[\\\\])?                                        # Foo[ ].bar properties within an array\n  \\\\.                                                # Foo.Bar namespaced parameter\n  [\\\\w$]+\n)*\n(?:\n  \\\\s*\n  (=)                                                # [foo=bar] Default parameter value\n  \\\\s*\n  (\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\n    (?>\n      \"(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!\"))|[^*\\\\\\\\])*?\" |                      # [foo=\"bar\"] Double-quoted\n      '(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!'))|[^*\\\\\\\\])*?' |                      # [foo='bar'] Single-quoted\n      \\\\[ (?:(?:\\\\*(?!/))|[^*])*? \\\\] |                                # [foo=[1,2]] Array literal\n      (?:(?:\\\\*(?!/))|\\\\s(?!\\\\s*\\\\])|\\\\[.*?(?:\\\\]|(?=\\\\*/))|[^*\\\\s\\\\[\\\\]])*   # Everything else\n    )*\n  )\n)?\n\\\\s*(?:(\\\\])((?:[^*\\\\s]|\\\\*[^\\\\s/])+)?|(?=\\\\*/))`, \"name\": \"variable.other.jsdoc\" }] }, { \"begin\": \"(?x)\\n(\\n  (@)\\n  (?:define|enum|exception|export|extends|lends|implements|modifies\\n  |namespace|private|protected|returns?|satisfies|suppress|this|throws|type\\n  |yields?)\\n)\\n\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\\n)\\n\\\\s+\\n(\\n  (?:\\n    [^{}@\\\\s*] | \\\\*[^/]\\n  )+\\n)\" }, { \"begin\": `((@)(?:default(?:value)?|license|version))\\\\s+(([''\"]))`, \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.string.begin.jsdoc\" } }, \"contentName\": \"variable.other.jsdoc\", \"end\": \"(\\\\3)|(?=$|\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.string.end.jsdoc\" } } }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"((@)(?:default(?:value)?|license|tutorial|variation|version))\\\\s+([^\\\\s*]+)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\\\b\", \"name\": \"storage.type.class.jsdoc\" }, { \"include\": \"#inline-tags\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"((@)(?:[_$[:alpha:]][_$[:alnum:]]*))(?=\\\\s+)\" }] }, \"enum-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.ts\" }, \"4\": { \"name\": \"storage.type.enum.ts\" }, \"5\": { \"name\": \"entity.name.type.enum.ts\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.ts\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"export-declaration\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"keyword.control.as.ts\" }, \"3\": { \"name\": \"storage.type.namespace.ts\" }, \"4\": { \"name\": \"entity.name.type.module.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)\\\\s+(as)\\\\s+(namespace)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?(?:(?:\\\\s*(=))|(?:\\\\s+(default)(?=\\\\s+)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"keyword.control.type.ts\" }, \"3\": { \"name\": \"keyword.operator.assignment.ts\" }, \"4\": { \"name\": \"keyword.control.default.ts\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.default.ts\", \"patterns\": [{ \"include\": \"#interface-declaration\" }, { \"include\": \"#expression\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?\\\\b(?!(\\\\$)|(\\\\s*:))((?=\\\\s*[\\\\{*])|((?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s|,))(?!\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"keyword.control.type.ts\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.ts\", \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-inside-possibly-arrow-parens\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.operator.rest.ts\" }, \"3\": { \"name\": \"entity.name.function.ts variable.language.this.ts\" }, \"4\": { \"name\": \"entity.name.function.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.operator.rest.ts\" }, \"3\": { \"name\": \"variable.parameter.ts variable.language.this.ts\" }, \"4\": { \"name\": \"variable.parameter.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*[:,]|$)\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.ts\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(await)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.flow.ts\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?=\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*\\\\*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.ts\" } }, \"end\": \"\\\\*\", \"endCaptures\": { \"0\": { \"name\": \"keyword.generator.asterisk.ts\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.ts\" }, \"2\": { \"name\": \"keyword.generator.asterisk.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s*(\\\\*))?\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))delete(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.delete.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))in(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.in.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))of(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.of.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.instanceof.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.new.ts\" }, { \"include\": \"#typeof-operator\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))void(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.void.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*($|[;,:})\\\\]]))\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.ts\" }, \"2\": { \"name\": \"keyword.control.satisfies.ts\" } }, \"end\": \"(?=^|[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisfies)\\\\s+)|(\\\\s+\\\\<))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.spread.ts\" }, { \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.ts\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.ts\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.ts\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.ts\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.ts\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.ts\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.ts\" } }, \"match\": \"(?<=[_$[:alnum:]])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.ts\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.ts\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.ts\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.ts\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.ts\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.ts\" }, { \"begin\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)+(?:(/=)|(?:(/)(?![/*]))))\", \"end\": \"(?:(/=)|(?:(/)(?!\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.ts\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.ts\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.ts\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.ts\" } }, \"match\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }] }, \"expressionPunctuations\": { \"patterns\": [{ \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-accessor\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#regex\" }, { \"include\": \"#comment\" }, { \"include\": \"#function-expression\" }, { \"include\": \"#class-expression\" }, { \"include\": \"#arrow-function\" }, { \"include\": \"#paren-expression-possibly-arrow\" }, { \"include\": \"#cast\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#new-expr\" }, { \"include\": \"#instanceof-expr\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#function-call\" }, { \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#paren-expression\" }] }, \"field-declaration\": { \"begin\": \"(?x)(?<!\\\\()(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s+)?(?=\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|\\\\}|$))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" } }, \"end\": \"(?x)(?=\\\\}|;|,|$|(^(?!\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|$))))|(?<=\\\\})\", \"name\": \"meta.field.declaration.ts\", \"patterns\": [{ \"include\": \"#variable-initializer\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"meta.definition.property.ts entity.name.function.ts\" }, \"2\": { \"name\": \"keyword.operator.optional.ts\" }, \"3\": { \"name\": \"keyword.operator.definiteassignment.ts\" } }, \"match\": \"(?x)(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)(?:(\\\\?)|(\\\\!))?(?=\\\\s*\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"match\": \"\\\\#?[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.property.ts variable.object.property.ts\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ts\" }, { \"match\": \"\\\\!\", \"name\": \"keyword.operator.definiteassignment.ts\" }] }, \"for-loop\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))for(?=((\\\\s+|(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*))await)?\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)?(\\\\())\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.ts\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"await\", \"name\": \"keyword.control.loop.ts\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#return-type\" }, { \"include\": \"#type-function-return-type\" }, { \"include\": \"#decl-block\" }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.ts\" }] }, \"function-call\": { \"patterns\": [{ \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"end\": \"(?<=\\\\))(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"name\": \"meta.function-call.ts\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#paren-expression\" }] }, { \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"end\": \"(?<=\\\\>)(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"name\": \"meta.function-call.ts\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }] }] }, \"function-call-optionals\": { \"patterns\": [{ \"match\": \"\\\\?\\\\.\", \"name\": \"meta.function-call.ts punctuation.accessor.optional.ts\" }, { \"match\": \"\\\\!\", \"name\": \"meta.function-call.ts keyword.operator.definiteassignment.ts\" }] }, \"function-call-target\": { \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.ts\" }] }, \"function-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.async.ts\" }, \"4\": { \"name\": \"storage.type.function.ts\" }, \"5\": { \"name\": \"keyword.generator.asterisk.ts\" }, \"6\": { \"name\": \"meta.definition.function.ts entity.name.function.ts\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|(?<=\\\\})\", \"name\": \"meta.function.ts\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#function-body\" }] }, \"function-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" }, \"2\": { \"name\": \"storage.type.function.ts\" }, \"3\": { \"name\": \"keyword.generator.asterisk.ts\" }, \"4\": { \"name\": \"meta.definition.function.ts entity.name.function.ts\" } }, \"end\": \"(?=;)|(?<=\\\\})\", \"name\": \"meta.function.expression.ts\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#function-body\" }] }, \"function-name\": { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.function.ts entity.name.function.ts\" }, \"function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ts\" } }, \"name\": \"meta.parameters.ts\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#parameter-type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.ts\" }] }, \"identifiers\": { \"patterns\": [{ \"include\": \"#object-identifiers\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"3\": { \"name\": \"entity.name.function.ts\" } }, \"match\": \"(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"3\": { \"name\": \"variable.other.constant.property.ts\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"3\": { \"name\": \"variable.other.property.ts\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"match\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\", \"name\": \"variable.other.constant.ts\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.ts\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\s*(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))\\\\s*(?!\\\\{))\", \"end\": \"(?=;|$|\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.ts\" }, \"2\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"keyword.other.ts\" } }, \"name\": \"string.regexp.ts\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"include\": \"#statements\" }] }] }, \"import-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type)(?!\\\\s+from))?(?!\\\\s*[:\\\\(])(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"keyword.control.import.ts\" }, \"4\": { \"name\": \"keyword.control.type.ts\" } }, \"end\": \"(?<!^import|[^\\\\._$[:alnum:]]import)(?=;|$|^)\", \"name\": \"meta.import.ts\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"begin\": `(?<=^import|[^\\\\._$[:alnum:]]import)(?!\\\\s*[\"'])`, \"end\": \"\\\\bfrom\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.from.ts\" } }, \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }, { \"include\": \"#import-export-declaration\" }] }, \"import-equals-declaration\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(require)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"keyword.control.import.ts\" }, \"4\": { \"name\": \"keyword.control.type.ts\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.ts\" }, \"6\": { \"name\": \"keyword.operator.assignment.ts\" }, \"7\": { \"name\": \"keyword.control.require.ts\" }, \"8\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"name\": \"meta.import-equals.external.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(?!require\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"keyword.control.import.ts\" }, \"4\": { \"name\": \"keyword.control.type.ts\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.ts\" }, \"6\": { \"name\": \"keyword.operator.assignment.ts\" } }, \"end\": \"(?=;|$|^)\", \"name\": \"meta.import-equals.internal.ts\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" }, \"3\": { \"name\": \"punctuation.accessor.optional.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.readwrite.ts\" }] }] }, \"import-export-assert-clause\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(assert)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.assert.ts\" }, \"2\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object-literal.key.ts\" }, { \"match\": \":\", \"name\": \"punctuation.separator.key-value.ts\" }] }, \"import-export-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"meta.block.ts\", \"patterns\": [{ \"include\": \"#import-export-clause\" }] }, \"import-export-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.ts\" }, \"2\": { \"name\": \"keyword.control.default.ts\" }, \"3\": { \"name\": \"constant.language.import-export-all.ts\" }, \"4\": { \"name\": \"variable.other.readwrite.ts\" }, \"5\": { \"name\": \"keyword.control.as.ts\" }, \"6\": { \"name\": \"keyword.control.default.ts\" }, \"7\": { \"name\": \"variable.other.readwrite.alias.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(?:(\\\\btype)\\\\s+)?(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*)))\\\\s+(as)\\\\s+(?:(default(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|([_$[:alpha:]][_$[:alnum:]]*))\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"\\\\*\", \"name\": \"constant.language.import-export-all.ts\" }, { \"match\": \"\\\\b(default)\\\\b\", \"name\": \"keyword.control.default.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.ts\" }, \"2\": { \"name\": \"variable.other.readwrite.alias.ts\" } }, \"match\": \"(?:(\\\\btype)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"import-export-declaration\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#import-export-block\" }, { \"match\": \"\\\\bfrom\\\\b\", \"name\": \"keyword.control.from.ts\" }, { \"include\": \"#import-export-assert-clause\" }, { \"include\": \"#import-export-clause\" }] }, \"indexer-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"meta.brace.square.ts\" }, \"3\": { \"name\": \"variable.parameter.ts\" } }, \"end\": \"(\\\\])\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.ts\" }, \"2\": { \"name\": \"keyword.operator.optional.ts\" } }, \"name\": \"meta.indexer.declaration.ts\", \"patterns\": [{ \"include\": \"#type-annotation\" }] }, \"indexer-mapped-type-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([+-])?(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(in)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.modifier.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"meta.brace.square.ts\" }, \"4\": { \"name\": \"entity.name.type.ts\" }, \"5\": { \"name\": \"keyword.operator.expression.in.ts\" } }, \"end\": \"(\\\\])([+-])?\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.ts\" }, \"2\": { \"name\": \"keyword.operator.type.modifier.ts\" }, \"3\": { \"name\": \"keyword.operator.optional.ts\" } }, \"name\": \"meta.indexer.mappedtype.declaration.ts\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.as.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\" }, { \"include\": \"#type\" }] }, \"inline-tags\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.bracket.square.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.square.end.jsdoc\" } }, \"match\": \"(\\\\[)[^\\\\]]+(\\\\])(?={@(?:link|linkcode|linkplain|tutorial))\", \"name\": \"constant.other.description.jsdoc\" }, { \"begin\": \"({)((@)(?:link(?:code|plain)?|tutorial))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" }, \"2\": { \"name\": \"storage.type.class.jsdoc\" }, \"3\": { \"name\": \"punctuation.definition.inline.tag.jsdoc\" } }, \"end\": \"}|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"name\": \"entity.name.type.instance.jsdoc\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?=https?://)(?:[^|}\\\\s*]|\\\\*[/])+)(\\\\|)?\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.description.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?:[^{}@\\\\s|*]|\\\\*[^/])+)(\\\\|)?\" }] }] }, \"instanceof-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(instanceof)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.expression.instanceof.ts\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|(===|!==|==|!=)|(([\\\\&\\\\~\\\\^\\\\|]\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s+instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"patterns\": [{ \"include\": \"#type\" }] }, \"interface-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(interface)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.ts\" }, \"4\": { \"name\": \"storage.type.interface.ts\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.interface.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.interface.ts\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"jsdoctype\": { \"patterns\": [{ \"begin\": \"\\\\G({)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" } }, \"contentName\": \"entity.name.type.instance.jsdoc\", \"end\": \"((}))\\\\s*|(?=\\\\*/)\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"label\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.label.ts\" }, \"2\": { \"name\": \"punctuation.separator.label.ts\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.ts\" }, \"2\": { \"name\": \"punctuation.separator.label.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#numeric-literal\" }, { \"include\": \"#boolean-literal\" }, { \"include\": \"#null-literal\" }, { \"include\": \"#undefined-literal\" }, { \"include\": \"#numericConstant-literal\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#this-literal\" }, { \"include\": \"#super-literal\" }] }, \"method-declaration\": { \"patterns\": [{ \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?\\\\s*\\\\b(constructor)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.ts\" }, \"4\": { \"name\": \"storage.modifier.async.ts\" }, \"5\": { \"name\": \"storage.type.ts\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ts\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:(?:\\\\s*\\\\b(new)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|(?:(\\\\*)\\\\s*)?)(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.ts\" }, \"4\": { \"name\": \"storage.modifier.async.ts\" }, \"5\": { \"name\": \"keyword.operator.new.ts\" }, \"6\": { \"name\": \"keyword.generator.asterisk.ts\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ts\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.modifier.ts\" }, \"4\": { \"name\": \"storage.modifier.async.ts\" }, \"5\": { \"name\": \"storage.type.property.ts\" }, \"6\": { \"name\": \"keyword.generator.asterisk.ts\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ts\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }] }, \"method-declaration-name\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??)\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.method.ts entity.name.function.ts\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ts\" }] }, \"namespace-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(namespace|module)\\\\s+(?=[_$[:alpha:]\\\"'`]))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.namespace.ts\" } }, \"end\": \"(?<=\\\\})|(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.namespace.declaration.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.type.module.ts\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#decl-block\" }] }, \"new-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.new.ts\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"name\": \"new.expr.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"null-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))null(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.null.ts\" }, \"numeric-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.ts\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.hex.ts\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.ts\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.binary.ts\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.ts\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.octal.ts\" }, { \"captures\": { \"0\": { \"name\": \"constant.numeric.decimal.ts\" }, \"1\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"2\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"3\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"4\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"5\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"6\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"7\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"8\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"9\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"10\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"11\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"12\": { \"name\": \"meta.delimiter.decimal.period.ts\" }, \"13\": { \"name\": \"storage.type.numeric.bigint.ts\" }, \"14\": { \"name\": \"storage.type.numeric.bigint.ts\" } }, \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)\" }] }, \"numericConstant-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))NaN(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.nan.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Infinity(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.infinity.ts\" }] }, \"object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element\" }] }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element-const\" }] }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-propertyName\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(:)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.destructuring.ts\" } }, \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.object.property.ts\" }] }, \"object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"patterns\": [{ \"include\": \"#object-binding-element\" }] }, \"object-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"patterns\": [{ \"include\": \"#object-binding-element-const\" }] }, \"object-identifiers\": { \"patterns\": [{ \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\??\\\\.\\\\s*prototype\\\\b(?!\\\\$))\", \"name\": \"support.class.ts\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"3\": { \"name\": \"variable.other.constant.object.property.ts\" }, \"4\": { \"name\": \"variable.other.object.property.ts\" } }, \"match\": \"(?x)(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(?:\\n  (\\\\#?[[:upper:]][_$[:digit:][:upper:]]*) |\\n  (\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.constant.object.ts\" }, \"2\": { \"name\": \"variable.other.object.ts\" } }, \"match\": \"(?x)(?:\\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\\n  ([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"meta.objectliteral.ts\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"object-literal-method-declaration\": { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" }, \"2\": { \"name\": \"storage.type.property.ts\" }, \"3\": { \"name\": \"keyword.generator.asterisk.ts\" } }, \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ts\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" }, \"2\": { \"name\": \"storage.type.property.ts\" }, \"3\": { \"name\": \"keyword.generator.asterisk.ts\" } }, \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }] }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#object-literal-method-declaration\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\", \"name\": \"meta.object.member.ts meta.object-literal.key.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#array-literal\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\s+(as|satisifies)\\\\s+))))\", \"name\": \"meta.object.member.ts meta.object-literal.key.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?x)(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as|satisifies\\\\s+))\", \"name\": \"meta.object.member.ts meta.object-literal.key.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numeric-literal\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ts\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ts\" }, \"1\": { \"name\": \"constant.numeric.decimal.ts\" } }, \"match\": \"(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ts\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ts\" }, \"1\": { \"name\": \"entity.name.function.ts\" } }, \"match\": \"(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"name\": \"meta.object.member.ts\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ts\" } }, \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ts\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.ts\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.ts\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.ts\" }, \"2\": { \"name\": \"keyword.control.satisfies.ts\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisifies)\\\\s+))\", \"name\": \"meta.object.member.ts\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"meta.object-literal.key.ts punctuation.separator.key-value.ts\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.ts\", \"patterns\": [{ \"begin\": \"(?<=:)\\\\s*(async)?(?=\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" }, \"2\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(?=\\\\<\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" } }, \"end\": \"(?<=\\\\>)\", \"patterns\": [{ \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<=\\\\>)\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"include\": \"#possibly-arrow-return-type\" }, { \"include\": \"#expression\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#decl-block\" }] }, \"parameter-array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.ts\" } }, \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#parameter-array-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.operator.rest.ts\" }, \"3\": { \"name\": \"entity.name.function.ts variable.language.this.ts\" }, \"4\": { \"name\": \"entity.name.function.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.operator.rest.ts\" }, \"3\": { \"name\": \"variable.parameter.ts variable.language.this.ts\" }, \"4\": { \"name\": \"variable.parameter.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameter-object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#parameter-binding-element\" }, { \"include\": \"#paren-expression\" }] }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.ts\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.ts\" } }, \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, \"parameter-type-annotation\": { \"patterns\": [{ \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": \"(?=[,)])|(?==[^>])\", \"name\": \"meta.type.annotation.ts\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"paren-expression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"paren-expression-possibly-arrow\": { \"patterns\": [{ \"begin\": \"(?<=[(=,])\\\\s*(async)?(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"begin\": \"(?<=[(=,]|=>|^return|[^\\\\._$[:alnum:]]return)\\\\s*(async)?(?=\\\\s*((((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\()|(<)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)))\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.ts\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"include\": \"#possibly-arrow-return-type\" }] }, \"paren-expression-possibly-arrow-with-typeparameters\": { \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, \"possibly-arrow-return-type\": { \"begin\": \"(?<=\\\\)|^)\\\\s*(:)(?=\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*=>)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.arrow.ts meta.return.type.arrow.ts keyword.operator.type.annotation.ts\" } }, \"contentName\": \"meta.arrow.ts meta.return.type.arrow.ts\", \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"property-accessor\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(accessor|get|set)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.type.property.ts\" }, \"punctuation-accessor\": { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ts\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, \"punctuation-comma\": { \"match\": \",\", \"name\": \"punctuation.separator.comma.ts\" }, \"punctuation-semicolon\": { \"match\": \";\", \"name\": \"punctuation.terminator.statement.ts\" }, \"qstring-double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"invalid.illegal.newline.ts\" } }, \"name\": \"string.quoted.double.ts\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"qstring-single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"invalid.illegal.newline.ts\" } }, \"name\": \"string.quoted.single.ts\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(?<!\\\\+\\\\+|--|})(?<=[=(:,\\\\[?+!]|^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case|=>|&&|\\\\|\\\\||\\\\*\\\\/)\\\\s*(\\\\/)(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[\\\\()]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\\\]|\\\\(([^\\\\)\\\\\\\\]|\\\\\\\\.)+\\\\))+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"keyword.other.ts\" } }, \"name\": \"string.regexp.ts\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"((?<![_$[:alnum:])\\\\]]|\\\\+\\\\+|--|}|\\\\*\\\\/)|((?<=^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case))\\\\s*)\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ts\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ts\" }, \"2\": { \"name\": \"keyword.other.ts\" } }, \"name\": \"string.regexp.ts\", \"patterns\": [{ \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrnvf]|\\\\.\", \"name\": \"constant.other.character-class.regexp\" }, { \"match\": \"\\\\\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})\", \"name\": \"constant.character.numeric.regexp\" }, { \"match\": \"\\\\\\\\c[A-Z]\", \"name\": \"constant.character.control.regexp\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\\\\\[bB]|\\\\^|\\\\$\", \"name\": \"keyword.control.anchor.regexp\" }, { \"captures\": { \"0\": { \"name\": \"keyword.other.back-reference.regexp\" }, \"1\": { \"name\": \"variable.other.regexp\" } }, \"match\": \"\\\\\\\\[1-9]\\\\d*|\\\\\\\\k<([a-zA-Z_$][\\\\w$]*)>\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp\" }, { \"begin\": \"(\\\\()((\\\\?=)|(\\\\?!)|(\\\\?<=)|(\\\\?<!))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" }, \"2\": { \"name\": \"punctuation.definition.group.assertion.regexp\" }, \"3\": { \"name\": \"meta.assertion.look-ahead.regexp\" }, \"4\": { \"name\": \"meta.assertion.negative-look-ahead.regexp\" }, \"5\": { \"name\": \"meta.assertion.look-behind.regexp\" }, \"6\": { \"name\": \"meta.assertion.negative-look-behind.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.assertion.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"\\\\((?:(\\\\?:)|(?:\\\\?<([a-zA-Z_$][\\\\w$]*)>))?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" }, \"1\": { \"name\": \"punctuation.definition.group.no-capture.regexp\" }, \"2\": { \"name\": \"variable.other.regexp\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" } }, \"name\": \"constant.other.character-class.set.regexp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.control.regexp\" }, \"3\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"4\": { \"name\": \"constant.character.numeric.regexp\" }, \"5\": { \"name\": \"constant.character.control.regexp\" }, \"6\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\", \"name\": \"constant.other.character-class.range.regexp\" }, { \"include\": \"#regex-character-class\" }] }, { \"include\": \"#regex-character-class\" }] }, \"return-type\": { \"patterns\": [{ \"begin\": \"(?<=\\\\))\\\\s*(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": \"(?<![:|&])(?=$|^|[{};,]|//)\", \"name\": \"meta.return.type.ts\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": \"(?<![:|&])((?=[{};,]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.return.type.ts\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }] }, \"return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<=[:|&])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"shebang\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.ts\" } }, \"match\": \"\\\\A(#!).*(?=$)\", \"name\": \"comment.line.shebang.ts\" }, \"single-line-comment-consuming-line-ending\": { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.ts\" }, \"2\": { \"name\": \"comment.line.double-slash.ts\" }, \"3\": { \"name\": \"punctuation.definition.comment.ts\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.ts\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.ts\" } }, \"contentName\": \"comment.line.double-slash.ts\", \"end\": \"(?=^)\" }, \"statements\": { \"patterns\": [{ \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#label\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template\" }] }, \"string-character-escape\": { \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.ts\" }, \"super-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))super\\\\b(?!\\\\$)\", \"name\": \"variable.language.super.ts\" }, \"support-function-call-identifiers\": { \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#object-identifiers\" }, { \"include\": \"#punctuation-accessor\" }, { \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*[\\\\(]\\\\s*[\\\\\\\"\\\\'\\\\`]))\", \"name\": \"keyword.operator.expression.import.ts\" }] }, \"support-objects\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(arguments)\\\\b(?!\\\\$)\", \"name\": \"variable.language.arguments.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(Promise)\\\\b(?!\\\\$)\", \"name\": \"support.class.promise.ts\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.import.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" }, \"3\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"4\": { \"name\": \"support.variable.property.importmeta.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(import)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(meta)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.new.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" }, \"3\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"4\": { \"name\": \"support.variable.property.target.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(target)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ts\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"3\": { \"name\": \"support.variable.property.ts\" }, \"4\": { \"name\": \"support.constant.ts\" } }, \"match\": \"(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s* (?:\\n  (?:(constructor|length|prototype|__proto__)\\\\b(?!\\\\$|\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\\\())\\n  |\\n  (?:(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\\\b(?!\\\\$)))\" }, { \"captures\": { \"1\": { \"name\": \"support.type.object.module.ts\" }, \"2\": { \"name\": \"support.type.object.module.ts\" }, \"3\": { \"name\": \"punctuation.accessor.ts\" }, \"4\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"5\": { \"name\": \"support.type.object.module.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(exports)|(module)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\\\b(?!\\\\$)\" }] }, \"switch-statement\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bswitch\\\\s*\\\\()\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"switch-statement.expr.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(switch)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.ts\" }, \"2\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"name\": \"switch-expression.expr.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"(?=\\\\})\", \"name\": \"switch-block.expr.ts\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.ts\" } }, \"end\": \"(?=:)\", \"name\": \"case-clause.expr.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(:)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"case-clause.expr.ts punctuation.definition.section.case-statement.ts\" }, \"2\": { \"name\": \"meta.block.ts punctuation.definition.block.ts\" } }, \"contentName\": \"meta.block.ts\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"meta.block.ts punctuation.definition.block.ts\" } }, \"patterns\": [{ \"include\": \"#statements\" }] }, { \"captures\": { \"0\": { \"name\": \"case-clause.expr.ts punctuation.definition.section.case-statement.ts\" } }, \"match\": \"(:)\" }, { \"include\": \"#statements\" }] }] }, \"template\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.ts\" }, \"2\": { \"name\": \"string.template.ts punctuation.definition.string.template.begin.ts\" } }, \"contentName\": \"string.template.ts\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.ts punctuation.definition.string.template.end.ts\" } }, \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-call\": { \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"end\": \"(?=`)\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.tagged-template.ts\" }] }, { \"include\": \"#type-arguments\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?\\\\s*(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.ts\" } }, \"end\": \"(?=`)\", \"patterns\": [{ \"include\": \"#type-arguments\" }] }] }, \"template-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.ts\" } }, \"contentName\": \"meta.embedded.line.ts\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.ts\" } }, \"name\": \"meta.template.expression.ts\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"template-type\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.ts\" }, \"2\": { \"name\": \"string.template.ts punctuation.definition.string.template.begin.ts\" } }, \"contentName\": \"string.template.ts\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.ts punctuation.definition.string.template.end.ts\" } }, \"patterns\": [{ \"include\": \"#template-type-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-type-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.ts\" } }, \"contentName\": \"meta.embedded.line.ts\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.ts\" } }, \"name\": \"meta.template.expression.ts\", \"patterns\": [{ \"include\": \"#type\" }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ts\" } }, \"end\": \"\\\\s*(:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ts\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"this-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))this\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.ts\" }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-builtin-literals\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#type-object\" }, { \"include\": \"#type-operators\" }, { \"include\": \"#type-conditional\" }, { \"include\": \"#type-fn-type-parameters\" }, { \"include\": \"#type-paren-or-function-parameters\" }, { \"include\": \"#type-function-return-type\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\" }, { \"include\": \"#type-name\" }] }, \"type-alias-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(type)\\\\b\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.type.ts\" }, \"4\": { \"name\": \"entity.name.type.alias.ts\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.type.declaration.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"begin\": \"(=)\\\\s*(intrinsic)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ts\" }, \"2\": { \"name\": \"keyword.control.intrinsic.ts\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(=)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ts\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": \"(?<![:|&])(?!\\\\s*[|&]\\\\s+)((?=^|[,);\\\\}\\\\]]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.ts\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ts\" } }, \"end\": \"(?<![:|&])((?=[,);\\\\}\\\\]]|\\\\/\\\\/)|(?==[^>])|(?=^\\\\s*$)|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.ts\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-arguments\": { \"begin\": \"\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.begin.ts\" } }, \"end\": \"\\\\>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.end.ts\" } }, \"name\": \"meta.type.parameters.ts\", \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, \"type-arguments-body\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.operator.type.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(_)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"type-builtin-literals\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.builtin.ts\" }, \"type-conditional\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" } }, \"end\": \"(?<=:)\", \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.ts\" } }, \"end\": \":\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.ts\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#type\" }] }] }, \"type-fn-type-parameters\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b(?=\\\\s*\\\\<)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.type.constructor.ts storage.modifier.ts\" }, \"2\": { \"name\": \"meta.type.constructor.ts keyword.control.new.ts\" } }, \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.control.new.ts\" } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.constructor.ts\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }, { \"begin\": \"(?x)(\\n  (?=\\n    [(]\\\\s*(\\n      ([)]) |\\n      (\\\\.\\\\.\\\\.) |\\n      ([_$[:alnum:]]+\\\\s*(\\n        ([:,?=])|\\n        ([)]\\\\s*=>)\\n      ))\\n    )\\n  )\\n)\", \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.function.ts\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }] }, \"type-function-return-type\": { \"patterns\": [{ \"begin\": \"(=>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.arrow.ts\" } }, \"end\": \"(?<!=>)(?<![|&])(?=[,\\\\]\\\\)\\\\{\\\\}=;>:\\\\?]|//|$)\", \"name\": \"meta.type.function.return.ts\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.ts\" } }, \"end\": \"(?<!=>)(?<![|&])((?=[,\\\\]\\\\)\\\\{\\\\}=;:\\\\?>]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.type.function.return.ts\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }] }, \"type-function-return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<==>)(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"type-infer\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.expression.infer.ts\" }, \"2\": { \"name\": \"entity.name.type.ts\" }, \"3\": { \"name\": \"keyword.operator.expression.extends.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(infer)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s+(extends)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))?\", \"name\": \"meta.type.infer.ts\" }] }, \"type-name\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(<)\", \"captures\": { \"1\": { \"name\": \"entity.name.type.module.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" }, \"3\": { \"name\": \"punctuation.accessor.optional.ts\" }, \"4\": { \"name\": \"meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts\" } }, \"contentName\": \"meta.type.parameters.ts\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.ts punctuation.definition.typeparameters.end.ts\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.ts\" }, \"2\": { \"name\": \"meta.type.parameters.ts punctuation.definition.typeparameters.begin.ts\" } }, \"contentName\": \"meta.type.parameters.ts\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.ts punctuation.definition.typeparameters.end.ts\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.ts\" }, \"2\": { \"name\": \"punctuation.accessor.ts\" }, \"3\": { \"name\": \"punctuation.accessor.optional.ts\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"entity.name.type.ts\" }] }, \"type-object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ts\" } }, \"name\": \"meta.object.type.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#indexer-mapped-type-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#type-annotation\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.ts\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#type\" }] }, \"type-operators\": { \"patterns\": [{ \"include\": \"#typeof-operator\" }, { \"include\": \"#type-infer\" }, { \"begin\": \"([&|])(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.ts\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"begin\": \"[&|]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.ts\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))keyof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.keyof.ts\" }, { \"match\": \"(\\\\?|\\\\:)\", \"name\": \"keyword.operator.ternary.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*\\\\()\", \"name\": \"keyword.operator.expression.import.ts\" }] }, \"type-parameters\": { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.begin.ts\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.end.ts\" } }, \"name\": \"meta.type.parameters.ts\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends|in|out|const)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ts\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"(=)(?!>)\", \"name\": \"keyword.operator.assignment.ts\" }] }, \"type-paren-or-function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ts\" } }, \"name\": \"meta.type.paren.cover.ts\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.operator.rest.ts\" }, \"3\": { \"name\": \"entity.name.function.ts variable.language.this.ts\" }, \"4\": { \"name\": \"entity.name.function.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=\\\\s*(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.ts\" }, \"2\": { \"name\": \"keyword.operator.rest.ts\" }, \"3\": { \"name\": \"variable.parameter.ts variable.language.this.ts\" }, \"4\": { \"name\": \"variable.parameter.ts\" }, \"5\": { \"name\": \"keyword.operator.optional.ts\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=:)\" }, { \"include\": \"#type-annotation\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.ts\" }, { \"include\": \"#type\" }] }, \"type-predicate-operator\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.ts\" }, \"2\": { \"name\": \"variable.parameter.ts variable.language.this.ts\" }, \"3\": { \"name\": \"variable.parameter.ts\" }, \"4\": { \"name\": \"keyword.operator.expression.is.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(asserts)\\\\s+)?(?!asserts)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s(is)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.ts\" }, \"2\": { \"name\": \"variable.parameter.ts variable.language.this.ts\" }, \"3\": { \"name\": \"variable.parameter.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(asserts)\\\\s+(?!is)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))asserts(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.type.asserts.ts\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))is(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.is.ts\" }] }, \"type-primitive\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.ts\" }, \"type-string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template-type\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ts\" } }, \"name\": \"meta.type.tuple.ts\", \"patterns\": [{ \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.ts\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.ts\" }, \"2\": { \"name\": \"keyword.operator.optional.ts\" }, \"3\": { \"name\": \"punctuation.separator.label.ts\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeof-operator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))typeof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.expression.typeof.ts\" } }, \"end\": \"(?=[,);}\\\\]=>:&|{\\\\?]|(extends\\\\s+)|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type-arguments\" }, { \"include\": \"#expression\" }] }, \"undefined-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))undefined(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.undefined.ts\" }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^let|[^\\\\._$[:alnum:]]let|^var|[^\\\\._$[:alnum:]]var)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ts\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.ts\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.ts\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.ts\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^const|[^\\\\._$[:alnum:]]const)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ts\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.ts\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.ts\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.ts\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^using|[^\\\\._$[:alnum:]]using|^await\\\\s+using|[^\\\\._$[:alnum:]]await\\\\s+using)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ts\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.ts\" }, \"2\": { \"name\": \"storage.modifier.ts\" }, \"3\": { \"name\": \"storage.type.ts\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*((?!\\\\S)|(?=\\\\/\\\\/))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.ts\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"var-single-const\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ts variable.other.constant.ts entity.name.function.ts\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.ts\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ts variable.other.constant.ts\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.ts\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ts entity.name.function.ts\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.ts\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.ts\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ts variable.other.constant.ts\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.ts\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.ts\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ts variable.other.readwrite.ts\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.ts\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.ts\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable-type-annotation\": { \"patterns\": [{ \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=)(?=\\\\s*\\\\S)(?!\\\\s*.*=>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ts\" } }, \"end\": \"(?=$|^|[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ts\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))|(?=^\\\\s*$)|(?<![\\\\|\\\\&\\\\+\\\\-\\\\*\\\\/])(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] } }, \"scopeName\": \"source.ts\", \"aliases\": [\"ts\"] });\nvar typescript = [\n  lang$d\n];\n\nconst lang$c = Object.freeze({ \"displayName\": \"JSX\", \"name\": \"jsx\", \"patterns\": [{ \"include\": \"#directives\" }, { \"include\": \"#statements\" }, { \"include\": \"#shebang\" }], \"repository\": { \"access-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.js.jsx\" }, \"after-operator-block-as-object-literal\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[:=(,\\\\[?+!>]|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^yield|[^\\\\._$[:alnum:]]yield|^throw|[^\\\\._$[:alnum:]]throw|^in|[^\\\\._$[:alnum:]]in|^of|[^\\\\._$[:alnum:]]of|^typeof|[^\\\\._$[:alnum:]]typeof|&&|\\\\|\\\\||\\\\*)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"name\": \"meta.objectliteral.js.jsx\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"patterns\": [{ \"include\": \"#binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"patterns\": [{ \"include\": \"#binding-element-const\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.js.jsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.js.jsx\" } }, \"name\": \"meta.array.literal.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"arrow-function\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"2\": { \"name\": \"variable.parameter.js.jsx\" } }, \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?==>)\", \"name\": \"meta.arrow.js.jsx\" }, { \"begin\": \"(?x) (?:\\n  (?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\n)? ((?<![})!\\\\]])\\\\s*\\n  (?=\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  )\\n)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.arrow.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#arrow-return-type\" }, { \"include\": \"#possibly-arrow-return-type\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.js.jsx\" } }, \"end\": \"((?<=\\\\}|\\\\S)(?<!=>)|((?!\\\\{)(?=\\\\S)))(?!\\\\/[\\\\/\\\\*])\", \"name\": \"meta.arrow.js.jsx\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }] }] }, \"arrow-return-type\": { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js.jsx\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.return.type.arrow.js.jsx\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"arrow-return-type-body\": { \"patterns\": [{ \"begin\": \"(?<=[:])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"async-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(async)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.async.js.jsx\" }, \"binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#array-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }] }, \"boolean-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))true(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.true.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))false(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.false.js.jsx\" }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"{\", \"end\": \"}|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"cast\": { \"patterns\": [{ \"include\": \"#jsx\" }] }, \"class-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(class)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.js.jsx\" }, \"4\": { \"name\": \"storage.type.class.js.jsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.js.jsx\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-declaration-or-expression-patterns\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.js.jsx\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"class-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(class)\\\\b(?=\\\\s+|[<{]|\\\\/[\\\\/*])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"storage.type.class.js.jsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.js.jsx\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-or-interface-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#decorator\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#string\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#property-accessor\" }, { \"include\": \"#async-modifier\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-or-interface-heritage\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(extends|implements)\\\\b)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js.jsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)*\\\\s*)\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.inherited-class.js.jsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"include\": \"#expressionPunctuations\" }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js.jsx\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js.jsx\" } }, \"name\": \"comment.block.documentation.js.jsx\", \"patterns\": [{ \"include\": \"#docblock\" }] }, { \"begin\": \"(/\\\\*)(?:\\\\s*((@)internal)(?=\\\\s|(\\\\*/)))?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.js.jsx\" }, \"2\": { \"name\": \"storage.type.internaldeclaration.js.jsx\" }, \"3\": { \"name\": \"punctuation.decorator.internaldeclaration.js.jsx\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.js.jsx\" } }, \"name\": \"comment.block.js.jsx\" }, { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.js.jsx\" }, \"2\": { \"name\": \"comment.line.double-slash.js.jsx\" }, \"3\": { \"name\": \"punctuation.definition.comment.js.jsx\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.js.jsx\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.js.jsx\" } }, \"contentName\": \"comment.line.double-slash.js.jsx\", \"end\": \"(?=$)\" }] }, \"control-statement\": { \"patterns\": [{ \"include\": \"#switch-statement\" }, { \"include\": \"#for-loop\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.trycatch.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.loop.js.jsx\" }, \"2\": { \"name\": \"entity.name.label.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|goto)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.loop.js.jsx\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.js.jsx\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.switch.js.jsx\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(with)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.with.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(package)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(debugger)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.other.debugger.js.jsx\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"name\": \"meta.block.js.jsx\", \"patterns\": [{ \"include\": \"#statements\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#decorator\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#function-declaration\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#interface-declaration\" }, { \"include\": \"#enum-declaration\" }, { \"include\": \"#namespace-declaration\" }, { \"include\": \"#type-alias-declaration\" }, { \"include\": \"#import-equals-declaration\" }, { \"include\": \"#import-declaration\" }, { \"include\": \"#export-declaration\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(declare|export)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.js.jsx\" }] }, \"decorator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.decorator.js.jsx\" } }, \"end\": \"(?=\\\\s)\", \"name\": \"meta.decorator.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"destructuring-const\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.js.jsx\", \"patterns\": [{ \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.js.jsx\", \"patterns\": [{ \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-parameter\": { \"patterns\": [{ \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"name\": \"meta.parameter.object-binding-pattern.js.jsx\", \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, { \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"name\": \"meta.paramter.array-binding-pattern.js.jsx\", \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }] }, \"destructuring-parameter-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"variable.parameter.js.jsx\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.js.jsx\", \"patterns\": [{ \"include\": \"#object-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.js.jsx\", \"patterns\": [{ \"include\": \"#array-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-variable-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"meta.definition.variable.js.jsx variable.other.readwrite.js.jsx\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable-rest-const\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"meta.definition.variable.js.jsx variable.other.constant.js.jsx\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"directives\": { \"begin\": \"^(///)\\\\s*(?=<(reference|amd-dependency|amd-module)(\\\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\\\s*=\\\\s*((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)))+\\\\s*/>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.js.jsx\" } }, \"end\": \"(?=$)\", \"name\": \"comment.line.triple-slash.directive.js.jsx\", \"patterns\": [{ \"begin\": \"(<)(reference|amd-dependency|amd-module)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.directive.js.jsx\" }, \"2\": { \"name\": \"entity.name.tag.directive.js.jsx\" } }, \"end\": \"/>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.directive.js.jsx\" } }, \"name\": \"meta.tag.js.jsx\", \"patterns\": [{ \"match\": \"path|types|no-default-lib|lib|name|resolution-mode\", \"name\": \"entity.other.attribute-name.directive.js.jsx\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.js.jsx\" }, { \"include\": \"#string\" }] }] }, \"docblock\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.access-type.jsdoc\" } }, \"match\": \"(?x)\\n((@)(?:access|api))\\n\\\\s+\\n(private|protected|public)\\n\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"5\": { \"name\": \"constant.other.email.link.underline.jsdoc\" }, \"6\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"match\": \"(?x)\\n((@)author)\\n\\\\s+\\n(\\n  [^@\\\\s<>*/]\\n  (?:[^@<>*/]|\\\\*[^/])*\\n)\\n(?:\\n  \\\\s*\\n  (<)\\n  ([^>\\\\s]+)\\n  (>)\\n)?\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"keyword.operator.control.jsdoc\" }, \"5\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)borrows) \\\\s+\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <that namepath>\\n\\\\s+ (as) \\\\s+              # as\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <this namepath>\" }, { \"begin\": \"((@)example)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=@|\\\\*/)\", \"name\": \"meta.example.jsdoc\", \"patterns\": [{ \"match\": \"^\\\\s\\\\*\\\\s+\" }, { \"begin\": \"\\\\G(<)caption(>)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"contentName\": \"constant.other.description.jsdoc\", \"end\": \"(</)caption(>)|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } } }, { \"captures\": { \"0\": { \"name\": \"source.embedded.js.jsx\" } }, \"match\": \"[^\\\\s@*](?:[^*]|\\\\*[^/])*\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.symbol-type.jsdoc\" } }, \"match\": \"(?x) ((@)kind) \\\\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"4\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)see)\\n\\\\s+\\n(?:\\n  # URL\\n  (\\n    (?=https?://)\\n    (?:[^\\\\s*]|\\\\*[^/])+\\n  )\\n  |\\n  # JSDoc namepath\\n  (\\n    (?!\\n      # Avoid matching bare URIs (also acceptable as links)\\n      https?://\\n      |\\n      # Avoid matching {@inline tags}; we match those below\\n      (?:\\\\[[^\\\\[\\\\]]*\\\\])? # Possible description [preceding]{@tag}\\n      {@(?:link|linkcode|linkplain|tutorial)\\\\b\\n    )\\n    # Matched namepath\\n    (?:[^@\\\\s*/]|\\\\*[^/])+\\n  )\\n)\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n((@)template)\\n\\\\s+\\n# One or more valid identifiers\\n(\\n  [A-Za-z_$]         # First character: non-numeric word character\\n  [\\\\w$.\\\\[\\\\]]*        # Rest of identifier\\n  (?:                # Possible list of additional identifiers\\n    \\\\s* , \\\\s*\\n    [A-Za-z_$]\\n    [\\\\w$.\\\\[\\\\]]*\\n  )*\\n)\" }, { \"begin\": \"(?x)((@)template)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:arg|argument|const|constant|member|namespace|param|var)\\n)\\n\\\\s+\\n(\\n  [A-Za-z_$]\\n  [\\\\w$.\\\\[\\\\]]*\\n)\" }, { \"begin\": \"((@)typedef)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"(?:[^@\\\\s*/]|\\\\*[^/])+\", \"name\": \"entity.name.type.instance.jsdoc\" }] }, { \"begin\": \"((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.optional-value.begin.bracket.square.jsdoc\" }, \"2\": { \"name\": \"keyword.operator.assignment.jsdoc\" }, \"3\": { \"name\": \"source.embedded.js.jsx\" }, \"4\": { \"name\": \"punctuation.definition.optional-value.end.bracket.square.jsdoc\" }, \"5\": { \"name\": \"invalid.illegal.syntax.jsdoc\" } }, \"match\": `(?x)\n(\\\\[)\\\\s*\n[\\\\w$]+\n(?:\n  (?:\\\\[\\\\])?                                        # Foo[ ].bar properties within an array\n  \\\\.                                                # Foo.Bar namespaced parameter\n  [\\\\w$]+\n)*\n(?:\n  \\\\s*\n  (=)                                                # [foo=bar] Default parameter value\n  \\\\s*\n  (\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\n    (?>\n      \"(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!\"))|[^*\\\\\\\\])*?\" |                      # [foo=\"bar\"] Double-quoted\n      '(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!'))|[^*\\\\\\\\])*?' |                      # [foo='bar'] Single-quoted\n      \\\\[ (?:(?:\\\\*(?!/))|[^*])*? \\\\] |                                # [foo=[1,2]] Array literal\n      (?:(?:\\\\*(?!/))|\\\\s(?!\\\\s*\\\\])|\\\\[.*?(?:\\\\]|(?=\\\\*/))|[^*\\\\s\\\\[\\\\]])*   # Everything else\n    )*\n  )\n)?\n\\\\s*(?:(\\\\])((?:[^*\\\\s]|\\\\*[^\\\\s/])+)?|(?=\\\\*/))`, \"name\": \"variable.other.jsdoc\" }] }, { \"begin\": \"(?x)\\n(\\n  (@)\\n  (?:define|enum|exception|export|extends|lends|implements|modifies\\n  |namespace|private|protected|returns?|satisfies|suppress|this|throws|type\\n  |yields?)\\n)\\n\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\\n)\\n\\\\s+\\n(\\n  (?:\\n    [^{}@\\\\s*] | \\\\*[^/]\\n  )+\\n)\" }, { \"begin\": `((@)(?:default(?:value)?|license|version))\\\\s+(([''\"]))`, \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.string.begin.jsdoc\" } }, \"contentName\": \"variable.other.jsdoc\", \"end\": \"(\\\\3)|(?=$|\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.string.end.jsdoc\" } } }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"((@)(?:default(?:value)?|license|tutorial|variation|version))\\\\s+([^\\\\s*]+)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\\\b\", \"name\": \"storage.type.class.jsdoc\" }, { \"include\": \"#inline-tags\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"((@)(?:[_$[:alpha:]][_$[:alnum:]]*))(?=\\\\s+)\" }] }, \"enum-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.js.jsx\" }, \"4\": { \"name\": \"storage.type.enum.js.jsx\" }, \"5\": { \"name\": \"entity.name.type.enum.js.jsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.js.jsx\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"export-declaration\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"keyword.control.as.js.jsx\" }, \"3\": { \"name\": \"storage.type.namespace.js.jsx\" }, \"4\": { \"name\": \"entity.name.type.module.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)\\\\s+(as)\\\\s+(namespace)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?(?:(?:\\\\s*(=))|(?:\\\\s+(default)(?=\\\\s+)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"keyword.control.type.js.jsx\" }, \"3\": { \"name\": \"keyword.operator.assignment.js.jsx\" }, \"4\": { \"name\": \"keyword.control.default.js.jsx\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.default.js.jsx\", \"patterns\": [{ \"include\": \"#interface-declaration\" }, { \"include\": \"#expression\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?\\\\b(?!(\\\\$)|(\\\\s*:))((?=\\\\s*[\\\\{*])|((?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s|,))(?!\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"keyword.control.type.js.jsx\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.js.jsx\", \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-inside-possibly-arrow-parens\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"3\": { \"name\": \"entity.name.function.js.jsx variable.language.this.js.jsx\" }, \"4\": { \"name\": \"entity.name.function.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"3\": { \"name\": \"variable.parameter.js.jsx variable.language.this.js.jsx\" }, \"4\": { \"name\": \"variable.parameter.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*[:,]|$)\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.js.jsx\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(await)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.flow.js.jsx\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?=\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*\\\\*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.js.jsx\" } }, \"end\": \"\\\\*\", \"endCaptures\": { \"0\": { \"name\": \"keyword.generator.asterisk.js.jsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.js.jsx\" }, \"2\": { \"name\": \"keyword.generator.asterisk.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s*(\\\\*))?\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))delete(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.delete.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))in(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.in.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))of(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.of.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.instanceof.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.new.js.jsx\" }, { \"include\": \"#typeof-operator\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))void(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.void.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*($|[;,:})\\\\]]))\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.js.jsx\" }, \"2\": { \"name\": \"keyword.control.satisfies.js.jsx\" } }, \"end\": \"(?=^|[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisfies)\\\\s+)|(\\\\s+\\\\<))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.spread.js.jsx\" }, { \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.js.jsx\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.js.jsx\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.js.jsx\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.js.jsx\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.js.jsx\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.js.jsx\" } }, \"match\": \"(?<=[_$[:alnum:]])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.js.jsx\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.js.jsx\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.js.jsx\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.js.jsx\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.js.jsx\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.js.jsx\" }, { \"begin\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)+(?:(/=)|(?:(/)(?![/*]))))\", \"end\": \"(?:(/=)|(?:(/)(?!\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.js.jsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.js.jsx\" } }, \"match\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }] }, \"expressionPunctuations\": { \"patterns\": [{ \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-accessor\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#jsx\" }, { \"include\": \"#string\" }, { \"include\": \"#regex\" }, { \"include\": \"#comment\" }, { \"include\": \"#function-expression\" }, { \"include\": \"#class-expression\" }, { \"include\": \"#arrow-function\" }, { \"include\": \"#paren-expression-possibly-arrow\" }, { \"include\": \"#cast\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#new-expr\" }, { \"include\": \"#instanceof-expr\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#function-call\" }, { \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#paren-expression\" }] }, \"field-declaration\": { \"begin\": \"(?x)(?<!\\\\()(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s+)?(?=\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|\\\\}|$))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" } }, \"end\": \"(?x)(?=\\\\}|;|,|$|(^(?!\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|$))))|(?<=\\\\})\", \"name\": \"meta.field.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#variable-initializer\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"meta.definition.property.js.jsx entity.name.function.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.optional.js.jsx\" }, \"3\": { \"name\": \"keyword.operator.definiteassignment.js.jsx\" } }, \"match\": \"(?x)(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)(?:(\\\\?)|(\\\\!))?(?=\\\\s*\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"match\": \"\\\\#?[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.property.js.jsx variable.object.property.js.jsx\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.js.jsx\" }, { \"match\": \"\\\\!\", \"name\": \"keyword.operator.definiteassignment.js.jsx\" }] }, \"for-loop\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))for(?=((\\\\s+|(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*))await)?\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)?(\\\\())\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.js.jsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"await\", \"name\": \"keyword.control.loop.js.jsx\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#return-type\" }, { \"include\": \"#type-function-return-type\" }, { \"include\": \"#decl-block\" }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.js.jsx\" }] }, \"function-call\": { \"patterns\": [{ \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"end\": \"(?<=\\\\))(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"name\": \"meta.function-call.js.jsx\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#paren-expression\" }] }, { \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"end\": \"(?<=\\\\>)(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"name\": \"meta.function-call.js.jsx\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }] }] }, \"function-call-optionals\": { \"patterns\": [{ \"match\": \"\\\\?\\\\.\", \"name\": \"meta.function-call.js.jsx punctuation.accessor.optional.js.jsx\" }, { \"match\": \"\\\\!\", \"name\": \"meta.function-call.js.jsx keyword.operator.definiteassignment.js.jsx\" }] }, \"function-call-target\": { \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.js.jsx\" }] }, \"function-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"4\": { \"name\": \"storage.type.function.js.jsx\" }, \"5\": { \"name\": \"keyword.generator.asterisk.js.jsx\" }, \"6\": { \"name\": \"meta.definition.function.js.jsx entity.name.function.js.jsx\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|(?<=\\\\})\", \"name\": \"meta.function.js.jsx\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#function-body\" }] }, \"function-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"2\": { \"name\": \"storage.type.function.js.jsx\" }, \"3\": { \"name\": \"keyword.generator.asterisk.js.jsx\" }, \"4\": { \"name\": \"meta.definition.function.js.jsx entity.name.function.js.jsx\" } }, \"end\": \"(?=;)|(?<=\\\\})\", \"name\": \"meta.function.expression.js.jsx\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#function-body\" }] }, \"function-name\": { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.function.js.jsx entity.name.function.js.jsx\" }, \"function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.js.jsx\" } }, \"name\": \"meta.parameters.js.jsx\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#parameter-type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.js.jsx\" }] }, \"identifiers\": { \"patterns\": [{ \"include\": \"#object-identifiers\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"3\": { \"name\": \"entity.name.function.js.jsx\" } }, \"match\": \"(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"3\": { \"name\": \"variable.other.constant.property.js.jsx\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"3\": { \"name\": \"variable.other.property.js.jsx\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"match\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\", \"name\": \"variable.other.constant.js.jsx\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.js.jsx\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\s*(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))\\\\s*(?!\\\\{))\", \"end\": \"(?=;|$|\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.js.jsx\" }, \"2\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js.jsx\" }, \"2\": { \"name\": \"keyword.other.js.jsx\" } }, \"name\": \"string.regexp.js.jsx\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"include\": \"#statements\" }] }] }, \"import-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type)(?!\\\\s+from))?(?!\\\\s*[:\\\\(])(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"keyword.control.import.js.jsx\" }, \"4\": { \"name\": \"keyword.control.type.js.jsx\" } }, \"end\": \"(?<!^import|[^\\\\._$[:alnum:]]import)(?=;|$|^)\", \"name\": \"meta.import.js.jsx\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"begin\": `(?<=^import|[^\\\\._$[:alnum:]]import)(?!\\\\s*[\"'])`, \"end\": \"\\\\bfrom\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.from.js.jsx\" } }, \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }, { \"include\": \"#import-export-declaration\" }] }, \"import-equals-declaration\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(require)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"keyword.control.import.js.jsx\" }, \"4\": { \"name\": \"keyword.control.type.js.jsx\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.js.jsx\" }, \"6\": { \"name\": \"keyword.operator.assignment.js.jsx\" }, \"7\": { \"name\": \"keyword.control.require.js.jsx\" }, \"8\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"name\": \"meta.import-equals.external.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(?!require\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"keyword.control.import.js.jsx\" }, \"4\": { \"name\": \"keyword.control.type.js.jsx\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.js.jsx\" }, \"6\": { \"name\": \"keyword.operator.assignment.js.jsx\" } }, \"end\": \"(?=;|$|^)\", \"name\": \"meta.import-equals.internal.js.jsx\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js.jsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.readwrite.js.jsx\" }] }] }, \"import-export-assert-clause\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(assert)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.assert.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object-literal.key.js.jsx\" }, { \"match\": \":\", \"name\": \"punctuation.separator.key-value.js.jsx\" }] }, \"import-export-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"name\": \"meta.block.js.jsx\", \"patterns\": [{ \"include\": \"#import-export-clause\" }] }, \"import-export-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.js.jsx\" }, \"2\": { \"name\": \"keyword.control.default.js.jsx\" }, \"3\": { \"name\": \"constant.language.import-export-all.js.jsx\" }, \"4\": { \"name\": \"variable.other.readwrite.js.jsx\" }, \"5\": { \"name\": \"keyword.control.as.js.jsx\" }, \"6\": { \"name\": \"keyword.control.default.js.jsx\" }, \"7\": { \"name\": \"variable.other.readwrite.alias.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(?:(\\\\btype)\\\\s+)?(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*)))\\\\s+(as)\\\\s+(?:(default(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|([_$[:alpha:]][_$[:alnum:]]*))\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"\\\\*\", \"name\": \"constant.language.import-export-all.js.jsx\" }, { \"match\": \"\\\\b(default)\\\\b\", \"name\": \"keyword.control.default.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.js.jsx\" }, \"2\": { \"name\": \"variable.other.readwrite.alias.js.jsx\" } }, \"match\": \"(?:(\\\\btype)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"import-export-declaration\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#import-export-block\" }, { \"match\": \"\\\\bfrom\\\\b\", \"name\": \"keyword.control.from.js.jsx\" }, { \"include\": \"#import-export-assert-clause\" }, { \"include\": \"#import-export-clause\" }] }, \"indexer-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"meta.brace.square.js.jsx\" }, \"3\": { \"name\": \"variable.parameter.js.jsx\" } }, \"end\": \"(\\\\])\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"name\": \"meta.indexer.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#type-annotation\" }] }, \"indexer-mapped-type-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([+-])?(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(in)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.modifier.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"meta.brace.square.js.jsx\" }, \"4\": { \"name\": \"entity.name.type.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.expression.in.js.jsx\" } }, \"end\": \"(\\\\])([+-])?\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.type.modifier.js.jsx\" }, \"3\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"name\": \"meta.indexer.mappedtype.declaration.js.jsx\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.as.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\" }, { \"include\": \"#type\" }] }, \"inline-tags\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.bracket.square.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.square.end.jsdoc\" } }, \"match\": \"(\\\\[)[^\\\\]]+(\\\\])(?={@(?:link|linkcode|linkplain|tutorial))\", \"name\": \"constant.other.description.jsdoc\" }, { \"begin\": \"({)((@)(?:link(?:code|plain)?|tutorial))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" }, \"2\": { \"name\": \"storage.type.class.jsdoc\" }, \"3\": { \"name\": \"punctuation.definition.inline.tag.jsdoc\" } }, \"end\": \"}|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"name\": \"entity.name.type.instance.jsdoc\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?=https?://)(?:[^|}\\\\s*]|\\\\*[/])+)(\\\\|)?\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.description.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?:[^{}@\\\\s|*]|\\\\*[^/])+)(\\\\|)?\" }] }] }, \"instanceof-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(instanceof)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.expression.instanceof.js.jsx\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|(===|!==|==|!=)|(([\\\\&\\\\~\\\\^\\\\|]\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s+instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"patterns\": [{ \"include\": \"#type\" }] }, \"interface-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(interface)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.js.jsx\" }, \"4\": { \"name\": \"storage.type.interface.js.jsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.interface.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.interface.js.jsx\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"jsdoctype\": { \"patterns\": [{ \"begin\": \"\\\\G({)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" } }, \"contentName\": \"entity.name.type.instance.jsdoc\", \"end\": \"((}))\\\\s*|(?=\\\\*/)\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"jsx\": { \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes-in-expression\" }, { \"include\": \"#jsx-tag-in-expression\" }] }, \"jsx-children\": { \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes\" }, { \"include\": \"#jsx-tag\" }, { \"include\": \"#jsx-evaluated-code\" }, { \"include\": \"#jsx-entities\" }] }, \"jsx-entities\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.js.jsx\" }, \"3\": { \"name\": \"punctuation.definition.entity.js.jsx\" } }, \"match\": \"(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.js.jsx\" }] }, \"jsx-evaluated-code\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.js.jsx\" } }, \"contentName\": \"meta.embedded.expression.js.jsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"jsx-string-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.js.jsx\" } }, \"name\": \"string.quoted.double.js.jsx\", \"patterns\": [{ \"include\": \"#jsx-entities\" }] }, \"jsx-string-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.js.jsx\" } }, \"name\": \"string.quoted.single.js.jsx\", \"patterns\": [{ \"include\": \"#jsx-entities\" }] }, \"jsx-tag\": { \"begin\": \"(?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"end\": \"(/>)|(?:(</)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.tag.begin.js.jsx\" }, \"3\": { \"name\": \"entity.name.tag.namespace.js.jsx\" }, \"4\": { \"name\": \"punctuation.separator.namespace.js.jsx\" }, \"5\": { \"name\": \"entity.name.tag.js.jsx\" }, \"6\": { \"name\": \"support.class.component.js.jsx\" }, \"7\": { \"name\": \"punctuation.definition.tag.end.js.jsx\" } }, \"name\": \"meta.tag.js.jsx\", \"patterns\": [{ \"begin\": \"(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.js.jsx\" }, \"2\": { \"name\": \"entity.name.tag.namespace.js.jsx\" }, \"3\": { \"name\": \"punctuation.separator.namespace.js.jsx\" }, \"4\": { \"name\": \"entity.name.tag.js.jsx\" }, \"5\": { \"name\": \"support.class.component.js.jsx\" } }, \"end\": \"(?=[/]?>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#jsx-tag-attributes\" }] }, { \"begin\": \"(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.js.jsx\" } }, \"contentName\": \"meta.jsx.children.js.jsx\", \"end\": \"(?=</)\", \"patterns\": [{ \"include\": \"#jsx-children\" }] }] }, \"jsx-tag-attribute-assignment\": { \"match\": `=(?=\\\\s*(?:'|\"|{|/\\\\*|//|\\\\n))`, \"name\": \"keyword.operator.assignment.js.jsx\" }, \"jsx-tag-attribute-name\": { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.namespace.js.jsx\" }, \"2\": { \"name\": \"punctuation.separator.namespace.js.jsx\" }, \"3\": { \"name\": \"entity.other.attribute-name.js.jsx\" } }, \"match\": \"(?x)\\n  \\\\s*\\n  (?:([_$[:alpha:]][-_$[:alnum:].]*)(:))?\\n  ([_$[:alpha:]][-_$[:alnum:]]*)\\n  (?=\\\\s|=|/?>|/\\\\*|//)\" }, \"jsx-tag-attributes\": { \"begin\": \"\\\\s+\", \"end\": \"(?=[/]?>)\", \"name\": \"meta.tag.attributes.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#jsx-tag-attribute-name\" }, { \"include\": \"#jsx-tag-attribute-assignment\" }, { \"include\": \"#jsx-string-double-quoted\" }, { \"include\": \"#jsx-string-single-quoted\" }, { \"include\": \"#jsx-evaluated-code\" }, { \"include\": \"#jsx-tag-attributes-illegal\" }] }, \"jsx-tag-attributes-illegal\": { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.attribute.js.jsx\" }, \"jsx-tag-in-expression\": { \"begin\": \"(?x)\\n  (?<!\\\\+\\\\+|--)(?<=[({\\\\[,?=>:*]|&&|\\\\|\\\\||\\\\?|\\\\*\\\\/|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^yield|[^\\\\._$[:alnum:]]yield|^)\\\\s*\\n  (?!<\\\\s*[_$[:alpha:]][_$[:alnum:]]*((\\\\s+extends\\\\s+[^=>])|,)) # look ahead is not type parameter of arrow\\n  (?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"end\": \"(?!(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"patterns\": [{ \"include\": \"#jsx-tag\" }] }, \"jsx-tag-without-attributes\": { \"begin\": \"(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.js.jsx\" }, \"2\": { \"name\": \"entity.name.tag.namespace.js.jsx\" }, \"3\": { \"name\": \"punctuation.separator.namespace.js.jsx\" }, \"4\": { \"name\": \"entity.name.tag.js.jsx\" }, \"5\": { \"name\": \"support.class.component.js.jsx\" }, \"6\": { \"name\": \"punctuation.definition.tag.end.js.jsx\" } }, \"contentName\": \"meta.jsx.children.js.jsx\", \"end\": \"(</)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.js.jsx\" }, \"2\": { \"name\": \"entity.name.tag.namespace.js.jsx\" }, \"3\": { \"name\": \"punctuation.separator.namespace.js.jsx\" }, \"4\": { \"name\": \"entity.name.tag.js.jsx\" }, \"5\": { \"name\": \"support.class.component.js.jsx\" }, \"6\": { \"name\": \"punctuation.definition.tag.end.js.jsx\" } }, \"name\": \"meta.tag.without-attributes.js.jsx\", \"patterns\": [{ \"include\": \"#jsx-children\" }] }, \"jsx-tag-without-attributes-in-expression\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[({\\\\[,?=>:*]|&&|\\\\|\\\\||\\\\?|\\\\*\\\\/|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^yield|[^\\\\._$[:alnum:]]yield|^)\\\\s*(?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"end\": \"(?!(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes\" }] }, \"label\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.label.js.jsx\" }, \"2\": { \"name\": \"punctuation.separator.label.js.jsx\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.js.jsx\" }, \"2\": { \"name\": \"punctuation.separator.label.js.jsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#numeric-literal\" }, { \"include\": \"#boolean-literal\" }, { \"include\": \"#null-literal\" }, { \"include\": \"#undefined-literal\" }, { \"include\": \"#numericConstant-literal\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#this-literal\" }, { \"include\": \"#super-literal\" }] }, \"method-declaration\": { \"patterns\": [{ \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?\\\\s*\\\\b(constructor)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.js.jsx\" }, \"4\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"5\": { \"name\": \"storage.type.js.jsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:(?:\\\\s*\\\\b(new)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|(?:(\\\\*)\\\\s*)?)(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.js.jsx\" }, \"4\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.new.js.jsx\" }, \"6\": { \"name\": \"keyword.generator.asterisk.js.jsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.modifier.js.jsx\" }, \"4\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"5\": { \"name\": \"storage.type.property.js.jsx\" }, \"6\": { \"name\": \"keyword.generator.asterisk.js.jsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }] }, \"method-declaration-name\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??)\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.method.js.jsx entity.name.function.js.jsx\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.js.jsx\" }] }, \"namespace-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(namespace|module)\\\\s+(?=[_$[:alpha:]\\\"'`]))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.namespace.js.jsx\" } }, \"end\": \"(?<=\\\\})|(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.namespace.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.type.module.js.jsx\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#decl-block\" }] }, \"new-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.new.js.jsx\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"name\": \"new.expr.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"null-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))null(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.null.js.jsx\" }, \"numeric-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.hex.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.binary.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.octal.js.jsx\" }, { \"captures\": { \"0\": { \"name\": \"constant.numeric.decimal.js.jsx\" }, \"1\": { \"name\": \"meta.delimiter.decimal.period.js.jsx\" }, \"2\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"3\": { \"name\": \"meta.delimiter.decimal.period.js.jsx\" }, \"4\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"5\": { \"name\": \"meta.delimiter.decimal.period.js.jsx\" }, \"6\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"7\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"8\": { \"name\": \"meta.delimiter.decimal.period.js.jsx\" }, \"9\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"10\": { \"name\": \"meta.delimiter.decimal.period.js.jsx\" }, \"11\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"12\": { \"name\": \"meta.delimiter.decimal.period.js.jsx\" }, \"13\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" }, \"14\": { \"name\": \"storage.type.numeric.bigint.js.jsx\" } }, \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)\" }] }, \"numericConstant-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))NaN(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.nan.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Infinity(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.infinity.js.jsx\" }] }, \"object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element\" }] }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element-const\" }] }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-propertyName\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(:)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.destructuring.js.jsx\" } }, \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.object.property.js.jsx\" }] }, \"object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"patterns\": [{ \"include\": \"#object-binding-element\" }] }, \"object-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"patterns\": [{ \"include\": \"#object-binding-element-const\" }] }, \"object-identifiers\": { \"patterns\": [{ \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\??\\\\.\\\\s*prototype\\\\b(?!\\\\$))\", \"name\": \"support.class.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"3\": { \"name\": \"variable.other.constant.object.property.js.jsx\" }, \"4\": { \"name\": \"variable.other.object.property.js.jsx\" } }, \"match\": \"(?x)(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(?:\\n  (\\\\#?[[:upper:]][_$[:digit:][:upper:]]*) |\\n  (\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.constant.object.js.jsx\" }, \"2\": { \"name\": \"variable.other.object.js.jsx\" } }, \"match\": \"(?x)(?:\\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\\n  ([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"name\": \"meta.objectliteral.js.jsx\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"object-literal-method-declaration\": { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"2\": { \"name\": \"storage.type.property.js.jsx\" }, \"3\": { \"name\": \"keyword.generator.asterisk.js.jsx\" } }, \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"2\": { \"name\": \"storage.type.property.js.jsx\" }, \"3\": { \"name\": \"keyword.generator.asterisk.js.jsx\" } }, \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }] }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#object-literal-method-declaration\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\", \"name\": \"meta.object.member.js.jsx meta.object-literal.key.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#array-literal\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\s+(as|satisifies)\\\\s+))))\", \"name\": \"meta.object.member.js.jsx meta.object-literal.key.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?x)(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as|satisifies\\\\s+))\", \"name\": \"meta.object.member.js.jsx meta.object-literal.key.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numeric-literal\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.js.jsx\" }, \"1\": { \"name\": \"constant.numeric.decimal.js.jsx\" } }, \"match\": \"(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.js.jsx\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.js.jsx\" }, \"1\": { \"name\": \"entity.name.function.js.jsx\" } }, \"match\": \"(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"name\": \"meta.object.member.js.jsx\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.js.jsx\" } }, \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.js.jsx\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.js.jsx\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.js.jsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.js.jsx\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.js.jsx\" }, \"2\": { \"name\": \"keyword.control.satisfies.js.jsx\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisifies)\\\\s+))\", \"name\": \"meta.object.member.js.jsx\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"meta.object-literal.key.js.jsx punctuation.separator.key-value.js.jsx\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.js.jsx\", \"patterns\": [{ \"begin\": \"(?<=:)\\\\s*(async)?(?=\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" }, \"2\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(?=\\\\<\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" } }, \"end\": \"(?<=\\\\>)\", \"patterns\": [{ \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<=\\\\>)\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"include\": \"#possibly-arrow-return-type\" }, { \"include\": \"#expression\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#decl-block\" }] }, \"parameter-array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.js.jsx\" } }, \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#parameter-array-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"3\": { \"name\": \"entity.name.function.js.jsx variable.language.this.js.jsx\" }, \"4\": { \"name\": \"entity.name.function.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"3\": { \"name\": \"variable.parameter.js.jsx variable.language.this.js.jsx\" }, \"4\": { \"name\": \"variable.parameter.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameter-object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#parameter-binding-element\" }, { \"include\": \"#paren-expression\" }] }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.js.jsx\" } }, \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, \"parameter-type-annotation\": { \"patterns\": [{ \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js.jsx\" } }, \"end\": \"(?=[,)])|(?==[^>])\", \"name\": \"meta.type.annotation.js.jsx\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"paren-expression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"paren-expression-possibly-arrow\": { \"patterns\": [{ \"begin\": \"(?<=[(=,])\\\\s*(async)?(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"begin\": \"(?<=[(=,]|=>|^return|[^\\\\._$[:alnum:]]return)\\\\s*(async)?(?=\\\\s*((((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\()|(<)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)))\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.js.jsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"include\": \"#possibly-arrow-return-type\" }] }, \"paren-expression-possibly-arrow-with-typeparameters\": { \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, \"possibly-arrow-return-type\": { \"begin\": \"(?<=\\\\)|^)\\\\s*(:)(?=\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*=>)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.arrow.js.jsx meta.return.type.arrow.js.jsx keyword.operator.type.annotation.js.jsx\" } }, \"contentName\": \"meta.arrow.js.jsx meta.return.type.arrow.js.jsx\", \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"property-accessor\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(accessor|get|set)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.type.property.js.jsx\" }, \"punctuation-accessor\": { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js.jsx\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, \"punctuation-comma\": { \"match\": \",\", \"name\": \"punctuation.separator.comma.js.jsx\" }, \"punctuation-semicolon\": { \"match\": \";\", \"name\": \"punctuation.terminator.statement.js.jsx\" }, \"qstring-double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js.jsx\" }, \"2\": { \"name\": \"invalid.illegal.newline.js.jsx\" } }, \"name\": \"string.quoted.double.js.jsx\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"qstring-single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js.jsx\" }, \"2\": { \"name\": \"invalid.illegal.newline.js.jsx\" } }, \"name\": \"string.quoted.single.js.jsx\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(?<!\\\\+\\\\+|--|})(?<=[=(:,\\\\[?+!]|^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case|=>|&&|\\\\|\\\\||\\\\*\\\\/)\\\\s*(\\\\/)(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[\\\\()]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\\\]|\\\\(([^\\\\)\\\\\\\\]|\\\\\\\\.)+\\\\))+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js.jsx\" }, \"2\": { \"name\": \"keyword.other.js.jsx\" } }, \"name\": \"string.regexp.js.jsx\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"((?<![_$[:alnum:])\\\\]]|\\\\+\\\\+|--|}|\\\\*\\\\/)|((?<=^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case))\\\\s*)\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.js.jsx\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.js.jsx\" }, \"2\": { \"name\": \"keyword.other.js.jsx\" } }, \"name\": \"string.regexp.js.jsx\", \"patterns\": [{ \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrnvf]|\\\\.\", \"name\": \"constant.other.character-class.regexp\" }, { \"match\": \"\\\\\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})\", \"name\": \"constant.character.numeric.regexp\" }, { \"match\": \"\\\\\\\\c[A-Z]\", \"name\": \"constant.character.control.regexp\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\\\\\[bB]|\\\\^|\\\\$\", \"name\": \"keyword.control.anchor.regexp\" }, { \"captures\": { \"0\": { \"name\": \"keyword.other.back-reference.regexp\" }, \"1\": { \"name\": \"variable.other.regexp\" } }, \"match\": \"\\\\\\\\[1-9]\\\\d*|\\\\\\\\k<([a-zA-Z_$][\\\\w$]*)>\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp\" }, { \"begin\": \"(\\\\()((\\\\?=)|(\\\\?!)|(\\\\?<=)|(\\\\?<!))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" }, \"2\": { \"name\": \"punctuation.definition.group.assertion.regexp\" }, \"3\": { \"name\": \"meta.assertion.look-ahead.regexp\" }, \"4\": { \"name\": \"meta.assertion.negative-look-ahead.regexp\" }, \"5\": { \"name\": \"meta.assertion.look-behind.regexp\" }, \"6\": { \"name\": \"meta.assertion.negative-look-behind.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.assertion.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"\\\\((?:(\\\\?:)|(?:\\\\?<([a-zA-Z_$][\\\\w$]*)>))?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" }, \"1\": { \"name\": \"punctuation.definition.group.no-capture.regexp\" }, \"2\": { \"name\": \"variable.other.regexp\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" } }, \"name\": \"constant.other.character-class.set.regexp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.control.regexp\" }, \"3\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"4\": { \"name\": \"constant.character.numeric.regexp\" }, \"5\": { \"name\": \"constant.character.control.regexp\" }, \"6\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\", \"name\": \"constant.other.character-class.range.regexp\" }, { \"include\": \"#regex-character-class\" }] }, { \"include\": \"#regex-character-class\" }] }, \"return-type\": { \"patterns\": [{ \"begin\": \"(?<=\\\\))\\\\s*(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js.jsx\" } }, \"end\": \"(?<![:|&])(?=$|^|[{};,]|//)\", \"name\": \"meta.return.type.js.jsx\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js.jsx\" } }, \"end\": \"(?<![:|&])((?=[{};,]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.return.type.js.jsx\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }] }, \"return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<=[:|&])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"shebang\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.js.jsx\" } }, \"match\": \"\\\\A(#!).*(?=$)\", \"name\": \"comment.line.shebang.js.jsx\" }, \"single-line-comment-consuming-line-ending\": { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.js.jsx\" }, \"2\": { \"name\": \"comment.line.double-slash.js.jsx\" }, \"3\": { \"name\": \"punctuation.definition.comment.js.jsx\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.js.jsx\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.js.jsx\" } }, \"contentName\": \"comment.line.double-slash.js.jsx\", \"end\": \"(?=^)\" }, \"statements\": { \"patterns\": [{ \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#label\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template\" }] }, \"string-character-escape\": { \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.js.jsx\" }, \"super-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))super\\\\b(?!\\\\$)\", \"name\": \"variable.language.super.js.jsx\" }, \"support-function-call-identifiers\": { \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#object-identifiers\" }, { \"include\": \"#punctuation-accessor\" }, { \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*[\\\\(]\\\\s*[\\\\\\\"\\\\'\\\\`]))\", \"name\": \"keyword.operator.expression.import.js.jsx\" }] }, \"support-objects\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(arguments)\\\\b(?!\\\\$)\", \"name\": \"variable.language.arguments.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(Promise)\\\\b(?!\\\\$)\", \"name\": \"support.class.promise.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.import.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"4\": { \"name\": \"support.variable.property.importmeta.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(import)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(meta)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.new.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"4\": { \"name\": \"support.variable.property.target.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(target)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"3\": { \"name\": \"support.variable.property.js.jsx\" }, \"4\": { \"name\": \"support.constant.js.jsx\" } }, \"match\": \"(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s* (?:\\n  (?:(constructor|length|prototype|__proto__)\\\\b(?!\\\\$|\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\\\())\\n  |\\n  (?:(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\\\b(?!\\\\$)))\" }, { \"captures\": { \"1\": { \"name\": \"support.type.object.module.js.jsx\" }, \"2\": { \"name\": \"support.type.object.module.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"4\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"5\": { \"name\": \"support.type.object.module.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(exports)|(module)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\\\b(?!\\\\$)\" }] }, \"switch-statement\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bswitch\\\\s*\\\\()\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"name\": \"switch-statement.expr.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(switch)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.js.jsx\" }, \"2\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"name\": \"switch-expression.expr.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"(?=\\\\})\", \"name\": \"switch-block.expr.js.jsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.js.jsx\" } }, \"end\": \"(?=:)\", \"name\": \"case-clause.expr.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(:)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"case-clause.expr.js.jsx punctuation.definition.section.case-statement.js.jsx\" }, \"2\": { \"name\": \"meta.block.js.jsx punctuation.definition.block.js.jsx\" } }, \"contentName\": \"meta.block.js.jsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"meta.block.js.jsx punctuation.definition.block.js.jsx\" } }, \"patterns\": [{ \"include\": \"#statements\" }] }, { \"captures\": { \"0\": { \"name\": \"case-clause.expr.js.jsx punctuation.definition.section.case-statement.js.jsx\" } }, \"match\": \"(:)\" }, { \"include\": \"#statements\" }] }] }, \"template\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.js.jsx\" }, \"2\": { \"name\": \"string.template.js.jsx punctuation.definition.string.template.begin.js.jsx\" } }, \"contentName\": \"string.template.js.jsx\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.js.jsx punctuation.definition.string.template.end.js.jsx\" } }, \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-call\": { \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"end\": \"(?=`)\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.tagged-template.js.jsx\" }] }, { \"include\": \"#type-arguments\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?\\\\s*(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.js.jsx\" } }, \"end\": \"(?=`)\", \"patterns\": [{ \"include\": \"#type-arguments\" }] }] }, \"template-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.js.jsx\" } }, \"contentName\": \"meta.embedded.line.js.jsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.js.jsx\" } }, \"name\": \"meta.template.expression.js.jsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"template-type\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.js.jsx\" }, \"2\": { \"name\": \"string.template.js.jsx punctuation.definition.string.template.begin.js.jsx\" } }, \"contentName\": \"string.template.js.jsx\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.js.jsx punctuation.definition.string.template.end.js.jsx\" } }, \"patterns\": [{ \"include\": \"#template-type-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-type-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.js.jsx\" } }, \"contentName\": \"meta.embedded.line.js.jsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.js.jsx\" } }, \"name\": \"meta.template.expression.js.jsx\", \"patterns\": [{ \"include\": \"#type\" }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.js.jsx\" } }, \"end\": \"\\\\s*(:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.js.jsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"this-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))this\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.js.jsx\" }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-builtin-literals\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#type-object\" }, { \"include\": \"#type-operators\" }, { \"include\": \"#type-conditional\" }, { \"include\": \"#type-fn-type-parameters\" }, { \"include\": \"#type-paren-or-function-parameters\" }, { \"include\": \"#type-function-return-type\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\" }, { \"include\": \"#type-name\" }] }, \"type-alias-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(type)\\\\b\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.type.js.jsx\" }, \"4\": { \"name\": \"entity.name.type.alias.js.jsx\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.type.declaration.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"begin\": \"(=)\\\\s*(intrinsic)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js.jsx\" }, \"2\": { \"name\": \"keyword.control.intrinsic.js.jsx\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(=)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js.jsx\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js.jsx\" } }, \"end\": \"(?<![:|&])(?!\\\\s*[|&]\\\\s+)((?=^|[,);\\\\}\\\\]]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.js.jsx\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.js.jsx\" } }, \"end\": \"(?<![:|&])((?=[,);\\\\}\\\\]]|\\\\/\\\\/)|(?==[^>])|(?=^\\\\s*$)|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.js.jsx\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-arguments\": { \"begin\": \"\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.begin.js.jsx\" } }, \"end\": \"\\\\>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.end.js.jsx\" } }, \"name\": \"meta.type.parameters.js.jsx\", \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, \"type-arguments-body\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.operator.type.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(_)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"type-builtin-literals\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.builtin.js.jsx\" }, \"type-conditional\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" } }, \"end\": \"(?<=:)\", \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.js.jsx\" } }, \"end\": \":\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.js.jsx\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#type\" }] }] }, \"type-fn-type-parameters\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b(?=\\\\s*\\\\<)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.type.constructor.js.jsx storage.modifier.js.jsx\" }, \"2\": { \"name\": \"meta.type.constructor.js.jsx keyword.control.new.js.jsx\" } }, \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.control.new.js.jsx\" } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.constructor.js.jsx\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }, { \"begin\": \"(?x)(\\n  (?=\\n    [(]\\\\s*(\\n      ([)]) |\\n      (\\\\.\\\\.\\\\.) |\\n      ([_$[:alnum:]]+\\\\s*(\\n        ([:,?=])|\\n        ([)]\\\\s*=>)\\n      ))\\n    )\\n  )\\n)\", \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.function.js.jsx\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }] }, \"type-function-return-type\": { \"patterns\": [{ \"begin\": \"(=>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.arrow.js.jsx\" } }, \"end\": \"(?<!=>)(?<![|&])(?=[,\\\\]\\\\)\\\\{\\\\}=;>:\\\\?]|//|$)\", \"name\": \"meta.type.function.return.js.jsx\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.js.jsx\" } }, \"end\": \"(?<!=>)(?<![|&])((?=[,\\\\]\\\\)\\\\{\\\\}=;:\\\\?>]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.type.function.return.js.jsx\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }] }, \"type-function-return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<==>)(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"type-infer\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.expression.infer.js.jsx\" }, \"2\": { \"name\": \"entity.name.type.js.jsx\" }, \"3\": { \"name\": \"keyword.operator.expression.extends.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(infer)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s+(extends)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))?\", \"name\": \"meta.type.infer.js.jsx\" }] }, \"type-name\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(<)\", \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js.jsx\" }, \"4\": { \"name\": \"meta.type.parameters.js.jsx punctuation.definition.typeparameters.begin.js.jsx\" } }, \"contentName\": \"meta.type.parameters.js.jsx\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.js.jsx punctuation.definition.typeparameters.end.js.jsx\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.js.jsx\" }, \"2\": { \"name\": \"meta.type.parameters.js.jsx punctuation.definition.typeparameters.begin.js.jsx\" } }, \"contentName\": \"meta.type.parameters.js.jsx\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.js.jsx punctuation.definition.typeparameters.end.js.jsx\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.js.jsx\" }, \"2\": { \"name\": \"punctuation.accessor.js.jsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.js.jsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"entity.name.type.js.jsx\" }] }, \"type-object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.js.jsx\" } }, \"name\": \"meta.object.type.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#indexer-mapped-type-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#type-annotation\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.js.jsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#type\" }] }, \"type-operators\": { \"patterns\": [{ \"include\": \"#typeof-operator\" }, { \"include\": \"#type-infer\" }, { \"begin\": \"([&|])(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.js.jsx\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"begin\": \"[&|]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.js.jsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))keyof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.keyof.js.jsx\" }, { \"match\": \"(\\\\?|\\\\:)\", \"name\": \"keyword.operator.ternary.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*\\\\()\", \"name\": \"keyword.operator.expression.import.js.jsx\" }] }, \"type-parameters\": { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.begin.js.jsx\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.end.js.jsx\" } }, \"name\": \"meta.type.parameters.js.jsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends|in|out|const)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.js.jsx\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"(=)(?!>)\", \"name\": \"keyword.operator.assignment.js.jsx\" }] }, \"type-paren-or-function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.js.jsx\" } }, \"name\": \"meta.type.paren.cover.js.jsx\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"3\": { \"name\": \"entity.name.function.js.jsx variable.language.this.js.jsx\" }, \"4\": { \"name\": \"entity.name.function.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=\\\\s*(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.rest.js.jsx\" }, \"3\": { \"name\": \"variable.parameter.js.jsx variable.language.this.js.jsx\" }, \"4\": { \"name\": \"variable.parameter.js.jsx\" }, \"5\": { \"name\": \"keyword.operator.optional.js.jsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=:)\" }, { \"include\": \"#type-annotation\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.js.jsx\" }, { \"include\": \"#type\" }] }, \"type-predicate-operator\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.js.jsx\" }, \"2\": { \"name\": \"variable.parameter.js.jsx variable.language.this.js.jsx\" }, \"3\": { \"name\": \"variable.parameter.js.jsx\" }, \"4\": { \"name\": \"keyword.operator.expression.is.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(asserts)\\\\s+)?(?!asserts)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s(is)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.js.jsx\" }, \"2\": { \"name\": \"variable.parameter.js.jsx variable.language.this.js.jsx\" }, \"3\": { \"name\": \"variable.parameter.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(asserts)\\\\s+(?!is)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))asserts(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.type.asserts.js.jsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))is(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.is.js.jsx\" }] }, \"type-primitive\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.js.jsx\" }, \"type-string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template-type\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.js.jsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.js.jsx\" } }, \"name\": \"meta.type.tuple.js.jsx\", \"patterns\": [{ \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.js.jsx\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.optional.js.jsx\" }, \"3\": { \"name\": \"punctuation.separator.label.js.jsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeof-operator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))typeof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.expression.typeof.js.jsx\" } }, \"end\": \"(?=[,);}\\\\]=>:&|{\\\\?]|(extends\\\\s+)|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type-arguments\" }, { \"include\": \"#expression\" }] }, \"undefined-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))undefined(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.undefined.js.jsx\" }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^let|[^\\\\._$[:alnum:]]let|^var|[^\\\\._$[:alnum:]]var)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.js.jsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.js.jsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.js.jsx\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.js.jsx\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^const|[^\\\\._$[:alnum:]]const)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.js.jsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.js.jsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.js.jsx\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.js.jsx\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^using|[^\\\\._$[:alnum:]]using|^await\\\\s+using|[^\\\\._$[:alnum:]]await\\\\s+using)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.js.jsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.js.jsx\" }, \"2\": { \"name\": \"storage.modifier.js.jsx\" }, \"3\": { \"name\": \"storage.type.js.jsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*((?!\\\\S)|(?=\\\\/\\\\/))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.js.jsx\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"var-single-const\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js.jsx variable.other.constant.js.jsx entity.name.function.js.jsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js.jsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js.jsx variable.other.constant.js.jsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js.jsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js.jsx entity.name.function.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.js.jsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js.jsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js.jsx variable.other.constant.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.js.jsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js.jsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.js.jsx variable.other.readwrite.js.jsx\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.js.jsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.js.jsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable-type-annotation\": { \"patterns\": [{ \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=)(?=\\\\s*\\\\S)(?!\\\\s*.*=>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js.jsx\" } }, \"end\": \"(?=$|^|[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.js.jsx\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))|(?=^\\\\s*$)|(?<![\\\\|\\\\&\\\\+\\\\-\\\\*\\\\/])(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] } }, \"scopeName\": \"source.js.jsx\" });\nvar jsx = [\n  lang$c\n];\n\nconst lang$b = Object.freeze({ \"displayName\": \"TSX\", \"name\": \"tsx\", \"patterns\": [{ \"include\": \"#directives\" }, { \"include\": \"#statements\" }, { \"include\": \"#shebang\" }], \"repository\": { \"access-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(abstract|declare|override|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.tsx\" }, \"after-operator-block-as-object-literal\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[:=(,\\\\[?+!>]|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^yield|[^\\\\._$[:alnum:]]yield|^throw|[^\\\\._$[:alnum:]]throw|^in|[^\\\\._$[:alnum:]]in|^of|[^\\\\._$[:alnum:]]of|^typeof|[^\\\\._$[:alnum:]]typeof|&&|\\\\|\\\\||\\\\*)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"name\": \"meta.objectliteral.tsx\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"patterns\": [{ \"include\": \"#binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"patterns\": [{ \"include\": \"#binding-element-const\" }, { \"include\": \"#punctuation-comma\" }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.tsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.tsx\" } }, \"name\": \"meta.array.literal.tsx\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"arrow-function\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" }, \"2\": { \"name\": \"variable.parameter.tsx\" } }, \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?==>)\", \"name\": \"meta.arrow.tsx\" }, { \"begin\": \"(?x) (?:\\n  (?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(\\\\basync)\\n)? ((?<![})!\\\\]])\\\\s*\\n  (?=\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  )\\n)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.arrow.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#arrow-return-type\" }, { \"include\": \"#possibly-arrow-return-type\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.tsx\" } }, \"end\": \"((?<=\\\\}|\\\\S)(?<!=>)|((?!\\\\{)(?=\\\\S)))(?!\\\\/[\\\\/\\\\*])\", \"name\": \"meta.arrow.tsx\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }] }] }, \"arrow-return-type\": { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.tsx\" } }, \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"name\": \"meta.return.type.arrow.tsx\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"arrow-return-type-body\": { \"patterns\": [{ \"begin\": \"(?<=[:])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"async-modifier\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(async)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.async.tsx\" }, \"binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#array-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }] }, \"boolean-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))true(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.true.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))false(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.boolean.false.tsx\" }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"{\", \"end\": \"}|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]|(?=\\\\*/)\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"cast\": { \"patterns\": [{ \"include\": \"#jsx\" }] }, \"class-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(class)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.tsx\" }, \"4\": { \"name\": \"storage.type.class.tsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.tsx\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-declaration-or-expression-patterns\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.tsx\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"class-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(class)\\\\b(?=\\\\s+|[<{]|\\\\/[\\\\/*])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"storage.type.class.tsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.tsx\", \"patterns\": [{ \"include\": \"#class-declaration-or-expression-patterns\" }] }, \"class-or-interface-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#decorator\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#string\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#property-accessor\" }, { \"include\": \"#async-modifier\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-or-interface-heritage\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(extends|implements)\\\\b)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.tsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)*\\\\s*)\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.inherited-class.tsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"include\": \"#expressionPunctuations\" }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.tsx\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.tsx\" } }, \"name\": \"comment.block.documentation.tsx\", \"patterns\": [{ \"include\": \"#docblock\" }] }, { \"begin\": \"(/\\\\*)(?:\\\\s*((@)internal)(?=\\\\s|(\\\\*/)))?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.tsx\" }, \"2\": { \"name\": \"storage.type.internaldeclaration.tsx\" }, \"3\": { \"name\": \"punctuation.decorator.internaldeclaration.tsx\" } }, \"end\": \"\\\\*/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.tsx\" } }, \"name\": \"comment.block.tsx\" }, { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.tsx\" }, \"2\": { \"name\": \"comment.line.double-slash.tsx\" }, \"3\": { \"name\": \"punctuation.definition.comment.tsx\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.tsx\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.tsx\" } }, \"contentName\": \"comment.line.double-slash.tsx\", \"end\": \"(?=$)\" }] }, \"control-statement\": { \"patterns\": [{ \"include\": \"#switch-statement\" }, { \"include\": \"#for-loop\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.trycatch.tsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.loop.tsx\" }, \"2\": { \"name\": \"entity.name.label.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|goto)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.loop.tsx\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.tsx\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.switch.tsx\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(with)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.with.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(package)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(debugger)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.other.debugger.tsx\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"name\": \"meta.block.tsx\", \"patterns\": [{ \"include\": \"#statements\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#decorator\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#function-declaration\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#interface-declaration\" }, { \"include\": \"#enum-declaration\" }, { \"include\": \"#namespace-declaration\" }, { \"include\": \"#type-alias-declaration\" }, { \"include\": \"#import-equals-declaration\" }, { \"include\": \"#import-declaration\" }, { \"include\": \"#export-declaration\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(declare|export)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.tsx\" }] }, \"decorator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.decorator.tsx\" } }, \"end\": \"(?=\\\\s)\", \"name\": \"meta.decorator.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"destructuring-const\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.tsx\", \"patterns\": [{ \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.tsx\", \"patterns\": [{ \"include\": \"#array-binding-pattern-const\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-parameter\": { \"patterns\": [{ \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"name\": \"meta.parameter.object-binding-pattern.tsx\", \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, { \"begin\": \"(?<!=|:)\\\\s*(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"name\": \"meta.paramter.array-binding-pattern.tsx\", \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }] }, \"destructuring-parameter-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"variable.parameter.tsx\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable\": { \"patterns\": [{ \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.object-binding-pattern-variable.tsx\", \"patterns\": [{ \"include\": \"#object-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"(?<!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)\", \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"name\": \"meta.array-binding-pattern-variable.tsx\", \"patterns\": [{ \"include\": \"#array-binding-pattern\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#comment\" }] }] }, \"destructuring-variable-rest\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"meta.definition.variable.tsx variable.other.readwrite.tsx\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"destructuring-variable-rest-const\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"meta.definition.variable.tsx variable.other.constant.tsx\" } }, \"match\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\" }, \"directives\": { \"begin\": \"^(///)\\\\s*(?=<(reference|amd-dependency|amd-module)(\\\\s+(path|types|no-default-lib|lib|name|resolution-mode)\\\\s*=\\\\s*((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)))+\\\\s*/>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.tsx\" } }, \"end\": \"(?=$)\", \"name\": \"comment.line.triple-slash.directive.tsx\", \"patterns\": [{ \"begin\": \"(<)(reference|amd-dependency|amd-module)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.directive.tsx\" }, \"2\": { \"name\": \"entity.name.tag.directive.tsx\" } }, \"end\": \"/>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.directive.tsx\" } }, \"name\": \"meta.tag.tsx\", \"patterns\": [{ \"match\": \"path|types|no-default-lib|lib|name|resolution-mode\", \"name\": \"entity.other.attribute-name.directive.tsx\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.tsx\" }, { \"include\": \"#string\" }] }] }, \"docblock\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.access-type.jsdoc\" } }, \"match\": \"(?x)\\n((@)(?:access|api))\\n\\\\s+\\n(private|protected|public)\\n\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"5\": { \"name\": \"constant.other.email.link.underline.jsdoc\" }, \"6\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"match\": \"(?x)\\n((@)author)\\n\\\\s+\\n(\\n  [^@\\\\s<>*/]\\n  (?:[^@<>*/]|\\\\*[^/])*\\n)\\n(?:\\n  \\\\s*\\n  (<)\\n  ([^>\\\\s]+)\\n  (>)\\n)?\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"4\": { \"name\": \"keyword.operator.control.jsdoc\" }, \"5\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)borrows) \\\\s+\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <that namepath>\\n\\\\s+ (as) \\\\s+              # as\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # <this namepath>\" }, { \"begin\": \"((@)example)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=@|\\\\*/)\", \"name\": \"meta.example.jsdoc\", \"patterns\": [{ \"match\": \"^\\\\s\\\\*\\\\s+\" }, { \"begin\": \"\\\\G(<)caption(>)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } }, \"contentName\": \"constant.other.description.jsdoc\", \"end\": \"(</)caption(>)|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.tag.inline.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.angle.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.angle.end.jsdoc\" } } }, { \"captures\": { \"0\": { \"name\": \"source.embedded.tsx\" } }, \"match\": \"[^\\\\s@*](?:[^*]|\\\\*[^/])*\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"constant.language.symbol-type.jsdoc\" } }, \"match\": \"(?x) ((@)kind) \\\\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\\\b\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"4\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n((@)see)\\n\\\\s+\\n(?:\\n  # URL\\n  (\\n    (?=https?://)\\n    (?:[^\\\\s*]|\\\\*[^/])+\\n  )\\n  |\\n  # JSDoc namepath\\n  (\\n    (?!\\n      # Avoid matching bare URIs (also acceptable as links)\\n      https?://\\n      |\\n      # Avoid matching {@inline tags}; we match those below\\n      (?:\\\\[[^\\\\[\\\\]]*\\\\])? # Possible description [preceding]{@tag}\\n      {@(?:link|linkcode|linkplain|tutorial)\\\\b\\n    )\\n    # Matched namepath\\n    (?:[^@\\\\s*/]|\\\\*[^/])+\\n  )\\n)\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n((@)template)\\n\\\\s+\\n# One or more valid identifiers\\n(\\n  [A-Za-z_$]         # First character: non-numeric word character\\n  [\\\\w$.\\\\[\\\\]]*        # Rest of identifier\\n  (?:                # Possible list of additional identifiers\\n    \\\\s* , \\\\s*\\n    [A-Za-z_$]\\n    [\\\\w$.\\\\[\\\\]]*\\n  )*\\n)\" }, { \"begin\": \"(?x)((@)template)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:arg|argument|const|constant|member|namespace|param|var)\\n)\\n\\\\s+\\n(\\n  [A-Za-z_$]\\n  [\\\\w$.\\\\[\\\\]]*\\n)\" }, { \"begin\": \"((@)typedef)\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"(?:[^@\\\\s*/]|\\\\*[^/])+\", \"name\": \"entity.name.type.instance.jsdoc\" }] }, { \"begin\": \"((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }, { \"match\": \"([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)\", \"name\": \"variable.other.jsdoc\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.optional-value.begin.bracket.square.jsdoc\" }, \"2\": { \"name\": \"keyword.operator.assignment.jsdoc\" }, \"3\": { \"name\": \"source.embedded.tsx\" }, \"4\": { \"name\": \"punctuation.definition.optional-value.end.bracket.square.jsdoc\" }, \"5\": { \"name\": \"invalid.illegal.syntax.jsdoc\" } }, \"match\": `(?x)\n(\\\\[)\\\\s*\n[\\\\w$]+\n(?:\n  (?:\\\\[\\\\])?                                        # Foo[ ].bar properties within an array\n  \\\\.                                                # Foo.Bar namespaced parameter\n  [\\\\w$]+\n)*\n(?:\n  \\\\s*\n  (=)                                                # [foo=bar] Default parameter value\n  \\\\s*\n  (\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\n    (?>\n      \"(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!\"))|[^*\\\\\\\\])*?\" |                      # [foo=\"bar\"] Double-quoted\n      '(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!'))|[^*\\\\\\\\])*?' |                      # [foo='bar'] Single-quoted\n      \\\\[ (?:(?:\\\\*(?!/))|[^*])*? \\\\] |                                # [foo=[1,2]] Array literal\n      (?:(?:\\\\*(?!/))|\\\\s(?!\\\\s*\\\\])|\\\\[.*?(?:\\\\]|(?=\\\\*/))|[^*\\\\s\\\\[\\\\]])*   # Everything else\n    )*\n  )\n)?\n\\\\s*(?:(\\\\])((?:[^*\\\\s]|\\\\*[^\\\\s/])+)?|(?=\\\\*/))`, \"name\": \"variable.other.jsdoc\" }] }, { \"begin\": \"(?x)\\n(\\n  (@)\\n  (?:define|enum|exception|export|extends|lends|implements|modifies\\n  |namespace|private|protected|returns?|satisfies|suppress|this|throws|type\\n  |yields?)\\n)\\n\\\\s+(?={)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"end\": \"(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])\", \"patterns\": [{ \"include\": \"#jsdoctype\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"entity.name.type.instance.jsdoc\" } }, \"match\": \"(?x)\\n(\\n  (@)\\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\\n)\\n\\\\s+\\n(\\n  (?:\\n    [^{}@\\\\s*] | \\\\*[^/]\\n  )+\\n)\" }, { \"begin\": `((@)(?:default(?:value)?|license|version))\\\\s+(([''\"]))`, \"beginCaptures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" }, \"4\": { \"name\": \"punctuation.definition.string.begin.jsdoc\" } }, \"contentName\": \"variable.other.jsdoc\", \"end\": \"(\\\\3)|(?=$|\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"variable.other.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.string.end.jsdoc\" } } }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" }, \"3\": { \"name\": \"variable.other.jsdoc\" } }, \"match\": \"((@)(?:default(?:value)?|license|tutorial|variation|version))\\\\s+([^\\\\s*]+)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\\\b\", \"name\": \"storage.type.class.jsdoc\" }, { \"include\": \"#inline-tags\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.class.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.block.tag.jsdoc\" } }, \"match\": \"((@)(?:[_$[:alpha:]][_$[:alnum:]]*))(?=\\\\s+)\" }] }, \"enum-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.tsx\" }, \"4\": { \"name\": \"storage.type.enum.tsx\" }, \"5\": { \"name\": \"entity.name.type.enum.tsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.tsx\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"export-declaration\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"keyword.control.as.tsx\" }, \"3\": { \"name\": \"storage.type.namespace.tsx\" }, \"4\": { \"name\": \"entity.name.type.module.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)\\\\s+(as)\\\\s+(namespace)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?(?:(?:\\\\s*(=))|(?:\\\\s+(default)(?=\\\\s+)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"keyword.control.type.tsx\" }, \"3\": { \"name\": \"keyword.operator.assignment.tsx\" }, \"4\": { \"name\": \"keyword.control.default.tsx\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.default.tsx\", \"patterns\": [{ \"include\": \"#interface-declaration\" }, { \"include\": \"#expression\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(export)(?:\\\\s+(type))?\\\\b(?!(\\\\$)|(\\\\s*:))((?=\\\\s*[\\\\{*])|((?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s|,))(?!\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"keyword.control.type.tsx\" } }, \"end\": \"(?=$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.export.tsx\", \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-inside-possibly-arrow-parens\": { \"patterns\": [{ \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.operator.rest.tsx\" }, \"3\": { \"name\": \"entity.name.function.tsx variable.language.this.tsx\" }, \"4\": { \"name\": \"entity.name.function.tsx\" }, \"5\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.operator.rest.tsx\" }, \"3\": { \"name\": \"variable.parameter.tsx variable.language.this.tsx\" }, \"4\": { \"name\": \"variable.parameter.tsx\" }, \"5\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*[:,]|$)\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.tsx\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#expressionPunctuations\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(await)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.flow.tsx\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?=\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*\\\\*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.tsx\" } }, \"end\": \"\\\\*\", \"endCaptures\": { \"0\": { \"name\": \"keyword.generator.asterisk.tsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.tsx\" }, \"2\": { \"name\": \"keyword.generator.asterisk.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s*(\\\\*))?\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))delete(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.delete.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))in(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.in.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))of(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()\", \"name\": \"keyword.operator.expression.of.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.instanceof.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.new.tsx\" }, { \"include\": \"#typeof-operator\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))void(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.void.tsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*($|[;,:})\\\\]]))\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.tsx\" }, \"2\": { \"name\": \"keyword.control.satisfies.tsx\" } }, \"end\": \"(?=^|[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisfies)\\\\s+)|(\\\\s+\\\\<))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.spread.tsx\" }, { \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.tsx\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.tsx\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.tsx\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.tsx\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.tsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.tsx\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.tsx\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.tsx\" } }, \"match\": \"(?<=[_$[:alnum:]])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.tsx\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.tsx\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.tsx\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.tsx\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.tsx\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.tsx\" }, { \"begin\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)+(?:(/=)|(?:(/)(?![/*]))))\", \"end\": \"(?:(/=)|(?:(/)(?!\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.tsx\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.tsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.assignment.compound.tsx\" }, \"2\": { \"name\": \"keyword.operator.arithmetic.tsx\" } }, \"match\": \"(?<=[_$[:alnum:])\\\\]])\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }] }, \"expressionPunctuations\": { \"patterns\": [{ \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-accessor\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#jsx\" }, { \"include\": \"#string\" }, { \"include\": \"#regex\" }, { \"include\": \"#comment\" }, { \"include\": \"#function-expression\" }, { \"include\": \"#class-expression\" }, { \"include\": \"#arrow-function\" }, { \"include\": \"#paren-expression-possibly-arrow\" }, { \"include\": \"#cast\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#new-expr\" }, { \"include\": \"#instanceof-expr\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#function-call\" }, { \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#paren-expression\" }] }, \"field-declaration\": { \"begin\": \"(?x)(?<!\\\\()(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s+)?(?=\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|\\\\}|$))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" } }, \"end\": \"(?x)(?=\\\\}|;|,|$|(^(?!\\\\s*((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(?:(?:(\\\\?)|(\\\\!))\\\\s*)?(=|:|;|,|$))))|(?<=\\\\})\", \"name\": \"meta.field.declaration.tsx\", \"patterns\": [{ \"include\": \"#variable-initializer\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"meta.definition.property.tsx entity.name.function.tsx\" }, \"2\": { \"name\": \"keyword.operator.optional.tsx\" }, \"3\": { \"name\": \"keyword.operator.definiteassignment.tsx\" } }, \"match\": \"(?x)(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)(?:(\\\\?)|(\\\\!))?(?=\\\\s*\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"match\": \"\\\\#?[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.property.tsx variable.object.property.tsx\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.tsx\" }, { \"match\": \"\\\\!\", \"name\": \"keyword.operator.definiteassignment.tsx\" }] }, \"for-loop\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))for(?=((\\\\s+|(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*))await)?\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)?(\\\\())\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.tsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"await\", \"name\": \"keyword.control.loop.tsx\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#function-parameters\" }, { \"include\": \"#return-type\" }, { \"include\": \"#type-function-return-type\" }, { \"include\": \"#decl-block\" }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.tsx\" }] }, \"function-call\": { \"patterns\": [{ \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"end\": \"(?<=\\\\))(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=\\\\s*(?:(\\\\?\\\\.\\\\s*)|(\\\\!))?((<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?\\\\())\", \"name\": \"meta.function-call.tsx\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#paren-expression\" }] }, { \"begin\": \"(?=(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"end\": \"(?<=\\\\>)(?!(((([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))|(?<=[\\\\)]))(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\??\\\\.\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*))*)|(\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*[\\\\{\\\\[\\\\(]\\\\s*$))\", \"name\": \"meta.function-call.tsx\", \"patterns\": [{ \"include\": \"#function-call-target\" }] }, { \"include\": \"#comment\" }, { \"include\": \"#function-call-optionals\" }, { \"include\": \"#type-arguments\" }] }] }, \"function-call-optionals\": { \"patterns\": [{ \"match\": \"\\\\?\\\\.\", \"name\": \"meta.function-call.tsx punctuation.accessor.optional.tsx\" }, { \"match\": \"\\\\!\", \"name\": \"meta.function-call.tsx keyword.operator.definiteassignment.tsx\" }] }, \"function-call-target\": { \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.tsx\" }] }, \"function-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.async.tsx\" }, \"4\": { \"name\": \"storage.type.function.tsx\" }, \"5\": { \"name\": \"keyword.generator.asterisk.tsx\" }, \"6\": { \"name\": \"meta.definition.function.tsx entity.name.function.tsx\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|(?<=\\\\})\", \"name\": \"meta.function.tsx\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#function-body\" }] }, \"function-expression\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?<=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" }, \"2\": { \"name\": \"storage.type.function.tsx\" }, \"3\": { \"name\": \"keyword.generator.asterisk.tsx\" }, \"4\": { \"name\": \"meta.definition.function.tsx entity.name.function.tsx\" } }, \"end\": \"(?=;)|(?<=\\\\})\", \"name\": \"meta.function.expression.tsx\", \"patterns\": [{ \"include\": \"#function-name\" }, { \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#function-body\" }] }, \"function-name\": { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.function.tsx entity.name.function.tsx\" }, \"function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.tsx\" } }, \"name\": \"meta.parameters.tsx\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#decorator\" }, { \"include\": \"#destructuring-parameter\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#parameter-type-annotation\" }, { \"include\": \"#variable-initializer\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.tsx\" }] }, \"identifiers\": { \"patterns\": [{ \"include\": \"#object-identifiers\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"3\": { \"name\": \"entity.name.function.tsx\" } }, \"match\": \"(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"3\": { \"name\": \"variable.other.constant.property.tsx\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"3\": { \"name\": \"variable.other.property.tsx\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"match\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\", \"name\": \"variable.other.constant.tsx\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.tsx\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\s*(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))\\\\s*(?!\\\\{))\", \"end\": \"(?=;|$|\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.tsx\" }, \"2\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.tsx\" }, \"2\": { \"name\": \"keyword.other.tsx\" } }, \"name\": \"string.regexp.tsx\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"include\": \"#statements\" }] }] }, \"import-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type)(?!\\\\s+from))?(?!\\\\s*[:\\\\(])(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"keyword.control.import.tsx\" }, \"4\": { \"name\": \"keyword.control.type.tsx\" } }, \"end\": \"(?<!^import|[^\\\\._$[:alnum:]]import)(?=;|$|^)\", \"name\": \"meta.import.tsx\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"begin\": `(?<=^import|[^\\\\._$[:alnum:]]import)(?!\\\\s*[\"'])`, \"end\": \"\\\\bfrom\\\\b\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.from.tsx\" } }, \"patterns\": [{ \"include\": \"#import-export-declaration\" }] }, { \"include\": \"#import-export-declaration\" }] }, \"import-equals-declaration\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(require)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"keyword.control.import.tsx\" }, \"4\": { \"name\": \"keyword.control.type.tsx\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.tsx\" }, \"6\": { \"name\": \"keyword.operator.assignment.tsx\" }, \"7\": { \"name\": \"keyword.control.require.tsx\" }, \"8\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"name\": \"meta.import-equals.external.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(import)(?:\\\\s+(type))?\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(?!require\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"keyword.control.import.tsx\" }, \"4\": { \"name\": \"keyword.control.type.tsx\" }, \"5\": { \"name\": \"variable.other.readwrite.alias.tsx\" }, \"6\": { \"name\": \"keyword.operator.assignment.tsx\" } }, \"end\": \"(?=;|$|^)\", \"name\": \"meta.import-equals.internal.tsx\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.tsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.readwrite.tsx\" }] }] }, \"import-export-assert-clause\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(assert)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.assert.tsx\" }, \"2\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object-literal.key.tsx\" }, { \"match\": \":\", \"name\": \"punctuation.separator.key-value.tsx\" }] }, \"import-export-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"name\": \"meta.block.tsx\", \"patterns\": [{ \"include\": \"#import-export-clause\" }] }, \"import-export-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.tsx\" }, \"2\": { \"name\": \"keyword.control.default.tsx\" }, \"3\": { \"name\": \"constant.language.import-export-all.tsx\" }, \"4\": { \"name\": \"variable.other.readwrite.tsx\" }, \"5\": { \"name\": \"keyword.control.as.tsx\" }, \"6\": { \"name\": \"keyword.control.default.tsx\" }, \"7\": { \"name\": \"variable.other.readwrite.alias.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(?:(\\\\btype)\\\\s+)?(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*)))\\\\s+(as)\\\\s+(?:(default(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|([_$[:alpha:]][_$[:alnum:]]*))\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"\\\\*\", \"name\": \"constant.language.import-export-all.tsx\" }, { \"match\": \"\\\\b(default)\\\\b\", \"name\": \"keyword.control.default.tsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.type.tsx\" }, \"2\": { \"name\": \"variable.other.readwrite.alias.tsx\" } }, \"match\": \"(?:(\\\\btype)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"import-export-declaration\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#import-export-block\" }, { \"match\": \"\\\\bfrom\\\\b\", \"name\": \"keyword.control.from.tsx\" }, { \"include\": \"#import-export-assert-clause\" }, { \"include\": \"#import-export-clause\" }] }, \"indexer-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"meta.brace.square.tsx\" }, \"3\": { \"name\": \"variable.parameter.tsx\" } }, \"end\": \"(\\\\])\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.tsx\" }, \"2\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"name\": \"meta.indexer.declaration.tsx\", \"patterns\": [{ \"include\": \"#type-annotation\" }] }, \"indexer-mapped-type-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([+-])?(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(in)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.modifier.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"meta.brace.square.tsx\" }, \"4\": { \"name\": \"entity.name.type.tsx\" }, \"5\": { \"name\": \"keyword.operator.expression.in.tsx\" } }, \"end\": \"(\\\\])([+-])?\\\\s*(\\\\?\\\\s*)?|$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.tsx\" }, \"2\": { \"name\": \"keyword.operator.type.modifier.tsx\" }, \"3\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"name\": \"meta.indexer.mappedtype.declaration.tsx\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.as.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\" }, { \"include\": \"#type\" }] }, \"inline-tags\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.bracket.square.begin.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.square.end.jsdoc\" } }, \"match\": \"(\\\\[)[^\\\\]]+(\\\\])(?={@(?:link|linkcode|linkplain|tutorial))\", \"name\": \"constant.other.description.jsdoc\" }, { \"begin\": \"({)((@)(?:link(?:code|plain)?|tutorial))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" }, \"2\": { \"name\": \"storage.type.class.jsdoc\" }, \"3\": { \"name\": \"punctuation.definition.inline.tag.jsdoc\" } }, \"end\": \"}|(?=\\\\*/)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"name\": \"entity.name.type.instance.jsdoc\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.other.link.underline.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?=https?://)(?:[^|}\\\\s*]|\\\\*[/])+)(\\\\|)?\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.description.jsdoc\" }, \"2\": { \"name\": \"punctuation.separator.pipe.jsdoc\" } }, \"match\": \"\\\\G((?:[^{}@\\\\s|*]|\\\\*[^/])+)(\\\\|)?\" }] }] }, \"instanceof-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(instanceof)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.expression.instanceof.tsx\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|(===|!==|==|!=)|(([\\\\&\\\\~\\\\^\\\\|]\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s+instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"patterns\": [{ \"include\": \"#type\" }] }, \"interface-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(interface)\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.tsx\" }, \"4\": { \"name\": \"storage.type.interface.tsx\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.interface.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#class-or-interface-heritage\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.interface.tsx\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#class-or-interface-body\" }] }, \"jsdoctype\": { \"patterns\": [{ \"begin\": \"\\\\G({)\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"1\": { \"name\": \"punctuation.definition.bracket.curly.begin.jsdoc\" } }, \"contentName\": \"entity.name.type.instance.jsdoc\", \"end\": \"((}))\\\\s*|(?=\\\\*/)\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.type.instance.jsdoc\" }, \"2\": { \"name\": \"punctuation.definition.bracket.curly.end.jsdoc\" } }, \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"jsx\": { \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes-in-expression\" }, { \"include\": \"#jsx-tag-in-expression\" }] }, \"jsx-children\": { \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes\" }, { \"include\": \"#jsx-tag\" }, { \"include\": \"#jsx-evaluated-code\" }, { \"include\": \"#jsx-entities\" }] }, \"jsx-entities\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.entity.tsx\" }, \"3\": { \"name\": \"punctuation.definition.entity.tsx\" } }, \"match\": \"(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.tsx\" }] }, \"jsx-evaluated-code\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.tsx\" } }, \"contentName\": \"meta.embedded.expression.tsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.tsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"jsx-string-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.tsx\" } }, \"name\": \"string.quoted.double.tsx\", \"patterns\": [{ \"include\": \"#jsx-entities\" }] }, \"jsx-string-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.tsx\" } }, \"name\": \"string.quoted.single.tsx\", \"patterns\": [{ \"include\": \"#jsx-entities\" }] }, \"jsx-tag\": { \"begin\": \"(?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"end\": \"(/>)|(?:(</)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.tsx\" }, \"2\": { \"name\": \"punctuation.definition.tag.begin.tsx\" }, \"3\": { \"name\": \"entity.name.tag.namespace.tsx\" }, \"4\": { \"name\": \"punctuation.separator.namespace.tsx\" }, \"5\": { \"name\": \"entity.name.tag.tsx\" }, \"6\": { \"name\": \"support.class.component.tsx\" }, \"7\": { \"name\": \"punctuation.definition.tag.end.tsx\" } }, \"name\": \"meta.tag.tsx\", \"patterns\": [{ \"begin\": \"(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.tsx\" }, \"2\": { \"name\": \"entity.name.tag.namespace.tsx\" }, \"3\": { \"name\": \"punctuation.separator.namespace.tsx\" }, \"4\": { \"name\": \"entity.name.tag.tsx\" }, \"5\": { \"name\": \"support.class.component.tsx\" } }, \"end\": \"(?=[/]?>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-arguments\" }, { \"include\": \"#jsx-tag-attributes\" }] }, { \"begin\": \"(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.tsx\" } }, \"contentName\": \"meta.jsx.children.tsx\", \"end\": \"(?=</)\", \"patterns\": [{ \"include\": \"#jsx-children\" }] }] }, \"jsx-tag-attribute-assignment\": { \"match\": `=(?=\\\\s*(?:'|\"|{|/\\\\*|//|\\\\n))`, \"name\": \"keyword.operator.assignment.tsx\" }, \"jsx-tag-attribute-name\": { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.namespace.tsx\" }, \"2\": { \"name\": \"punctuation.separator.namespace.tsx\" }, \"3\": { \"name\": \"entity.other.attribute-name.tsx\" } }, \"match\": \"(?x)\\n  \\\\s*\\n  (?:([_$[:alpha:]][-_$[:alnum:].]*)(:))?\\n  ([_$[:alpha:]][-_$[:alnum:]]*)\\n  (?=\\\\s|=|/?>|/\\\\*|//)\" }, \"jsx-tag-attributes\": { \"begin\": \"\\\\s+\", \"end\": \"(?=[/]?>)\", \"name\": \"meta.tag.attributes.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#jsx-tag-attribute-name\" }, { \"include\": \"#jsx-tag-attribute-assignment\" }, { \"include\": \"#jsx-string-double-quoted\" }, { \"include\": \"#jsx-string-single-quoted\" }, { \"include\": \"#jsx-evaluated-code\" }, { \"include\": \"#jsx-tag-attributes-illegal\" }] }, \"jsx-tag-attributes-illegal\": { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.attribute.tsx\" }, \"jsx-tag-in-expression\": { \"begin\": \"(?x)\\n  (?<!\\\\+\\\\+|--)(?<=[({\\\\[,?=>:*]|&&|\\\\|\\\\||\\\\?|\\\\*\\\\/|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^yield|[^\\\\._$[:alnum:]]yield|^)\\\\s*\\n  (?!<\\\\s*[_$[:alpha:]][_$[:alnum:]]*((\\\\s+extends\\\\s+[^=>])|,)) # look ahead is not type parameter of arrow\\n  (?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"end\": \"(?!(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))(?=((<\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?>))\", \"patterns\": [{ \"include\": \"#jsx-tag\" }] }, \"jsx-tag-without-attributes\": { \"begin\": \"(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.tsx\" }, \"2\": { \"name\": \"entity.name.tag.namespace.tsx\" }, \"3\": { \"name\": \"punctuation.separator.namespace.tsx\" }, \"4\": { \"name\": \"entity.name.tag.tsx\" }, \"5\": { \"name\": \"support.class.component.tsx\" }, \"6\": { \"name\": \"punctuation.definition.tag.end.tsx\" } }, \"contentName\": \"meta.jsx.children.tsx\", \"end\": \"(</)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.tsx\" }, \"2\": { \"name\": \"entity.name.tag.namespace.tsx\" }, \"3\": { \"name\": \"punctuation.separator.namespace.tsx\" }, \"4\": { \"name\": \"entity.name.tag.tsx\" }, \"5\": { \"name\": \"support.class.component.tsx\" }, \"6\": { \"name\": \"punctuation.definition.tag.end.tsx\" } }, \"name\": \"meta.tag.without-attributes.tsx\", \"patterns\": [{ \"include\": \"#jsx-children\" }] }, \"jsx-tag-without-attributes-in-expression\": { \"begin\": \"(?<!\\\\+\\\\+|--)(?<=[({\\\\[,?=>:*]|&&|\\\\|\\\\||\\\\?|\\\\*\\\\/|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^yield|[^\\\\._$[:alnum:]]yield|^)\\\\s*(?=(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"end\": \"(?!(<)\\\\s*(?:([_$[:alpha:]][-_$[:alnum:].]*)(?<!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$[:alpha:]][-_$[:alnum:].]*))(?<!\\\\.|-))?\\\\s*(>))\", \"patterns\": [{ \"include\": \"#jsx-tag-without-attributes\" }] }, \"label\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.label.tsx\" }, \"2\": { \"name\": \"punctuation.separator.label.tsx\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.tsx\" }, \"2\": { \"name\": \"punctuation.separator.label.tsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#numeric-literal\" }, { \"include\": \"#boolean-literal\" }, { \"include\": \"#null-literal\" }, { \"include\": \"#undefined-literal\" }, { \"include\": \"#numericConstant-literal\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#this-literal\" }, { \"include\": \"#super-literal\" }] }, \"method-declaration\": { \"patterns\": [{ \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?\\\\s*\\\\b(constructor)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.tsx\" }, \"4\": { \"name\": \"storage.modifier.async.tsx\" }, \"5\": { \"name\": \"storage.type.tsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.tsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:(?:\\\\s*\\\\b(new)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|(?:(\\\\*)\\\\s*)?)(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.tsx\" }, \"4\": { \"name\": \"storage.modifier.async.tsx\" }, \"5\": { \"name\": \"keyword.operator.new.tsx\" }, \"6\": { \"name\": \"keyword.generator.asterisk.tsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.tsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(override)\\\\s+)?(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.modifier.tsx\" }, \"4\": { \"name\": \"storage.modifier.async.tsx\" }, \"5\": { \"name\": \"storage.type.property.tsx\" }, \"6\": { \"name\": \"keyword.generator.asterisk.tsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"name\": \"meta.method.declaration.tsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }] }] }, \"method-declaration-name\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??)\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"meta.definition.method.tsx entity.name.function.tsx\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.tsx\" }] }, \"namespace-declaration\": { \"begin\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(namespace|module)\\\\s+(?=[_$[:alpha:]\\\"'`]))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.namespace.tsx\" } }, \"end\": \"(?<=\\\\})|(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.namespace.declaration.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.type.module.tsx\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#decl-block\" }] }, \"new-expr\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.new.tsx\" } }, \"end\": \"(?<=\\\\))|(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))\", \"name\": \"new.expr.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"null-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))null(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.null.tsx\" }, \"numeric-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.tsx\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.hex.tsx\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.tsx\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.binary.tsx\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.numeric.bigint.tsx\" } }, \"match\": \"\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$)\", \"name\": \"constant.numeric.octal.tsx\" }, { \"captures\": { \"0\": { \"name\": \"constant.numeric.decimal.tsx\" }, \"1\": { \"name\": \"meta.delimiter.decimal.period.tsx\" }, \"2\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"3\": { \"name\": \"meta.delimiter.decimal.period.tsx\" }, \"4\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"5\": { \"name\": \"meta.delimiter.decimal.period.tsx\" }, \"6\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"7\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"8\": { \"name\": \"meta.delimiter.decimal.period.tsx\" }, \"9\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"10\": { \"name\": \"meta.delimiter.decimal.period.tsx\" }, \"11\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"12\": { \"name\": \"meta.delimiter.decimal.period.tsx\" }, \"13\": { \"name\": \"storage.type.numeric.bigint.tsx\" }, \"14\": { \"name\": \"storage.type.numeric.bigint.tsx\" } }, \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)\" }] }, \"numericConstant-literal\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))NaN(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.nan.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Infinity(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.infinity.tsx\" }] }, \"object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element\" }] }, { \"include\": \"#object-binding-pattern\" }, { \"include\": \"#destructuring-variable-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-const\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#binding-element-const\" }] }, { \"include\": \"#object-binding-pattern-const\" }, { \"include\": \"#destructuring-variable-rest-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-binding-element-propertyName\": { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(:)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.destructuring.tsx\" } }, \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#numeric-literal\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.object.property.tsx\" }] }, \"object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"patterns\": [{ \"include\": \"#object-binding-element\" }] }, \"object-binding-pattern-const\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"patterns\": [{ \"include\": \"#object-binding-element-const\" }] }, \"object-identifiers\": { \"patterns\": [{ \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\??\\\\.\\\\s*prototype\\\\b(?!\\\\$))\", \"name\": \"support.class.tsx\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"3\": { \"name\": \"variable.other.constant.object.property.tsx\" }, \"4\": { \"name\": \"variable.other.object.property.tsx\" } }, \"match\": \"(?x)(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(?:\\n  (\\\\#?[[:upper:]][_$[:digit:][:upper:]]*) |\\n  (\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.constant.object.tsx\" }, \"2\": { \"name\": \"variable.other.object.tsx\" } }, \"match\": \"(?x)(?:\\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\\n  ([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"name\": \"meta.objectliteral.tsx\", \"patterns\": [{ \"include\": \"#object-member\" }] }, \"object-literal-method-declaration\": { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" }, \"2\": { \"name\": \"storage.type.property.tsx\" }, \"3\": { \"name\": \"keyword.generator.asterisk.tsx\" } }, \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.tsx\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }, { \"include\": \"#function-body\" }, { \"begin\": \"(?x)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?[\\\\(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" }, \"2\": { \"name\": \"storage.type.property.tsx\" }, \"3\": { \"name\": \"keyword.generator.asterisk.tsx\" } }, \"end\": \"(?=\\\\(|\\\\<)\", \"patterns\": [{ \"include\": \"#method-declaration-name\" }] }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#object-literal-method-declaration\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\", \"name\": \"meta.object.member.tsx meta.object-literal.key.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#array-literal\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\s+(as|satisifies)\\\\s+))))\", \"name\": \"meta.object.member.tsx meta.object-literal.key.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?x)(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as|satisifies\\\\s+))\", \"name\": \"meta.object.member.tsx meta.object-literal.key.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numeric-literal\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.tsx\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.tsx\" }, \"1\": { \"name\": \"constant.numeric.decimal.tsx\" } }, \"match\": \"(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.tsx\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.tsx\" }, \"1\": { \"name\": \"entity.name.function.tsx\" } }, \"match\": \"(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"name\": \"meta.object.member.tsx\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.tsx\" } }, \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.tsx\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.tsx\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.tsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.tsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.tsx\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(as)|(satisfies))\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.tsx\" }, \"2\": { \"name\": \"keyword.control.satisfies.tsx\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as|satisifies)\\\\s+))\", \"name\": \"meta.object.member.tsx\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"meta.object-literal.key.tsx punctuation.separator.key-value.tsx\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.tsx\", \"patterns\": [{ \"begin\": \"(?<=:)\\\\s*(async)?(?=\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" }, \"2\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"begin\": \"(?<=:)\\\\s*(async)?\\\\s*(?=\\\\<\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" } }, \"end\": \"(?<=\\\\>)\", \"patterns\": [{ \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<=\\\\>)\\\\s*(\\\\()(?=\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }, { \"include\": \"#possibly-arrow-return-type\" }, { \"include\": \"#expression\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#decl-block\" }] }, \"parameter-array-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.array.tsx\" } }, \"patterns\": [{ \"include\": \"#parameter-binding-element\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#regex\" }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#parameter-array-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|protected|private|readonly)\\\\s+(?=(override|public|protected|private|readonly)\\\\s+)\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.operator.rest.tsx\" }, \"3\": { \"name\": \"entity.name.function.tsx variable.language.this.tsx\" }, \"4\": { \"name\": \"entity.name.function.tsx\" }, \"5\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.operator.rest.tsx\" }, \"3\": { \"name\": \"variable.parameter.tsx variable.language.this.tsx\" }, \"4\": { \"name\": \"variable.parameter.tsx\" }, \"5\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(override|public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameter-object-binding-element\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?x)(?=((\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))\", \"end\": \"(?=,|\\\\})\", \"patterns\": [{ \"include\": \"#object-binding-element-propertyName\" }, { \"include\": \"#parameter-binding-element\" }, { \"include\": \"#paren-expression\" }] }, { \"include\": \"#parameter-object-binding-pattern\" }, { \"include\": \"#destructuring-parameter-rest\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }] }, \"parameter-object-binding-pattern\": { \"begin\": \"(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.rest.tsx\" }, \"2\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.binding-pattern.object.tsx\" } }, \"patterns\": [{ \"include\": \"#parameter-object-binding-element\" }] }, \"parameter-type-annotation\": { \"patterns\": [{ \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.tsx\" } }, \"end\": \"(?=[,)])|(?==[^>])\", \"name\": \"meta.type.annotation.tsx\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"paren-expression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"paren-expression-possibly-arrow\": { \"patterns\": [{ \"begin\": \"(?<=[(=,])\\\\s*(async)?(?=\\\\s*((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\(\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"begin\": \"(?<=[(=,]|=>|^return|[^\\\\._$[:alnum:]]return)\\\\s*(async)?(?=\\\\s*((((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*))?\\\\()|(<)|((<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)))\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.async.tsx\" } }, \"end\": \"(?<=\\\\))\", \"patterns\": [{ \"include\": \"#paren-expression-possibly-arrow-with-typeparameters\" }] }, { \"include\": \"#possibly-arrow-return-type\" }] }, \"paren-expression-possibly-arrow-with-typeparameters\": { \"patterns\": [{ \"include\": \"#type-parameters\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"patterns\": [{ \"include\": \"#expression-inside-possibly-arrow-parens\" }] }] }, \"possibly-arrow-return-type\": { \"begin\": \"(?<=\\\\)|^)\\\\s*(:)(?=\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*=>)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.arrow.tsx meta.return.type.arrow.tsx keyword.operator.type.annotation.tsx\" } }, \"contentName\": \"meta.arrow.tsx meta.return.type.arrow.tsx\", \"end\": \"(?==>|\\\\{|(^\\\\s*(export|function|class|interface|let|var|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))\", \"patterns\": [{ \"include\": \"#arrow-return-type-body\" }] }, \"property-accessor\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(accessor|get|set)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.type.property.tsx\" }, \"punctuation-accessor\": { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.tsx\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, \"punctuation-comma\": { \"match\": \",\", \"name\": \"punctuation.separator.comma.tsx\" }, \"punctuation-semicolon\": { \"match\": \";\", \"name\": \"punctuation.terminator.statement.tsx\" }, \"qstring-double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.tsx\" }, \"2\": { \"name\": \"invalid.illegal.newline.tsx\" } }, \"name\": \"string.quoted.double.tsx\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"qstring-single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.tsx\" }, \"2\": { \"name\": \"invalid.illegal.newline.tsx\" } }, \"name\": \"string.quoted.single.tsx\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(?<!\\\\+\\\\+|--|})(?<=[=(:,\\\\[?+!]|^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case|=>|&&|\\\\|\\\\||\\\\*\\\\/)\\\\s*(\\\\/)(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[\\\\()]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\\\]|\\\\(([^\\\\)\\\\\\\\]|\\\\\\\\.)+\\\\))+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.tsx\" }, \"2\": { \"name\": \"keyword.other.tsx\" } }, \"name\": \"string.regexp.tsx\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"((?<![_$[:alnum:])\\\\]]|\\\\+\\\\+|--|}|\\\\*\\\\/)|((?<=^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case))\\\\s*)\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/([dgimsuy]+|(?![\\\\/\\\\*])|(?=\\\\/\\\\*))(?!\\\\s*[a-zA-Z0-9_$]))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tsx\" } }, \"end\": \"(/)([dgimsuy]*)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.tsx\" }, \"2\": { \"name\": \"keyword.other.tsx\" } }, \"name\": \"string.regexp.tsx\", \"patterns\": [{ \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrnvf]|\\\\.\", \"name\": \"constant.other.character-class.regexp\" }, { \"match\": \"\\\\\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})\", \"name\": \"constant.character.numeric.regexp\" }, { \"match\": \"\\\\\\\\c[A-Z]\", \"name\": \"constant.character.control.regexp\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\\\\\[bB]|\\\\^|\\\\$\", \"name\": \"keyword.control.anchor.regexp\" }, { \"captures\": { \"0\": { \"name\": \"keyword.other.back-reference.regexp\" }, \"1\": { \"name\": \"variable.other.regexp\" } }, \"match\": \"\\\\\\\\[1-9]\\\\d*|\\\\\\\\k<([a-zA-Z_$][\\\\w$]*)>\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp\" }, { \"begin\": \"(\\\\()((\\\\?=)|(\\\\?!)|(\\\\?<=)|(\\\\?<!))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" }, \"2\": { \"name\": \"punctuation.definition.group.assertion.regexp\" }, \"3\": { \"name\": \"meta.assertion.look-ahead.regexp\" }, \"4\": { \"name\": \"meta.assertion.negative-look-ahead.regexp\" }, \"5\": { \"name\": \"meta.assertion.look-behind.regexp\" }, \"6\": { \"name\": \"meta.assertion.negative-look-behind.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.assertion.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"\\\\((?:(\\\\?:)|(?:\\\\?<([a-zA-Z_$][\\\\w$]*)>))?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" }, \"1\": { \"name\": \"punctuation.definition.group.no-capture.regexp\" }, \"2\": { \"name\": \"variable.other.regexp\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.regexp\" } }, \"name\": \"meta.group.regexp\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.regexp\" } }, \"name\": \"constant.other.character-class.set.regexp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.control.regexp\" }, \"3\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"4\": { \"name\": \"constant.character.numeric.regexp\" }, \"5\": { \"name\": \"constant.character.control.regexp\" }, \"6\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\", \"name\": \"constant.other.character-class.range.regexp\" }, { \"include\": \"#regex-character-class\" }] }, { \"include\": \"#regex-character-class\" }] }, \"return-type\": { \"patterns\": [{ \"begin\": \"(?<=\\\\))\\\\s*(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.tsx\" } }, \"end\": \"(?<![:|&])(?=$|^|[{};,]|//)\", \"name\": \"meta.return.type.tsx\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }, { \"begin\": \"(?<=\\\\))\\\\s*(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.tsx\" } }, \"end\": \"(?<![:|&])((?=[{};,]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.return.type.tsx\", \"patterns\": [{ \"include\": \"#return-type-core\" }] }] }, \"return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<=[:|&])(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"shebang\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.tsx\" } }, \"match\": \"\\\\A(#!).*(?=$)\", \"name\": \"comment.line.shebang.tsx\" }, \"single-line-comment-consuming-line-ending\": { \"begin\": \"(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.tsx\" }, \"2\": { \"name\": \"comment.line.double-slash.tsx\" }, \"3\": { \"name\": \"punctuation.definition.comment.tsx\" }, \"4\": { \"name\": \"storage.type.internaldeclaration.tsx\" }, \"5\": { \"name\": \"punctuation.decorator.internaldeclaration.tsx\" } }, \"contentName\": \"comment.line.double-slash.tsx\", \"end\": \"(?=^)\" }, \"statements\": { \"patterns\": [{ \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#after-operator-block-as-object-literal\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#label\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template\" }] }, \"string-character-escape\": { \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.tsx\" }, \"super-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))super\\\\b(?!\\\\$)\", \"name\": \"variable.language.super.tsx\" }, \"support-function-call-identifiers\": { \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#support-objects\" }, { \"include\": \"#object-identifiers\" }, { \"include\": \"#punctuation-accessor\" }, { \"match\": \"(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*[\\\\(]\\\\s*[\\\\\\\"\\\\'\\\\`]))\", \"name\": \"keyword.operator.expression.import.tsx\" }] }, \"support-objects\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(arguments)\\\\b(?!\\\\$)\", \"name\": \"variable.language.arguments.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(Promise)\\\\b(?!\\\\$)\", \"name\": \"support.class.promise.tsx\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.import.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"4\": { \"name\": \"support.variable.property.importmeta.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(import)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(meta)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.new.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"4\": { \"name\": \"support.variable.property.target.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(new)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(target)\\\\b(?!\\\\$)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"3\": { \"name\": \"support.variable.property.tsx\" }, \"4\": { \"name\": \"support.constant.tsx\" } }, \"match\": \"(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s* (?:\\n  (?:(constructor|length|prototype|__proto__)\\\\b(?!\\\\$|\\\\s*(<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\\\())\\n  |\\n  (?:(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\\\b(?!\\\\$)))\" }, { \"captures\": { \"1\": { \"name\": \"support.type.object.module.tsx\" }, \"2\": { \"name\": \"support.type.object.module.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.tsx\" }, \"4\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"5\": { \"name\": \"support.type.object.module.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(exports)|(module)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\\\b(?!\\\\$)\" }] }, \"switch-statement\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bswitch\\\\s*\\\\()\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"name\": \"switch-statement.expr.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(switch)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.tsx\" }, \"2\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"name\": \"switch-expression.expr.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"(?=\\\\})\", \"name\": \"switch-block.expr.tsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.switch.tsx\" } }, \"end\": \"(?=:)\", \"name\": \"case-clause.expr.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(:)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"case-clause.expr.tsx punctuation.definition.section.case-statement.tsx\" }, \"2\": { \"name\": \"meta.block.tsx punctuation.definition.block.tsx\" } }, \"contentName\": \"meta.block.tsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"meta.block.tsx punctuation.definition.block.tsx\" } }, \"patterns\": [{ \"include\": \"#statements\" }] }, { \"captures\": { \"0\": { \"name\": \"case-clause.expr.tsx punctuation.definition.section.case-statement.tsx\" } }, \"match\": \"(:)\" }, { \"include\": \"#statements\" }] }] }, \"template\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.tsx\" }, \"2\": { \"name\": \"string.template.tsx punctuation.definition.string.template.begin.tsx\" } }, \"contentName\": \"string.template.tsx\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.tsx punctuation.definition.string.template.end.tsx\" } }, \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-call\": { \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"end\": \"(?=`)\", \"patterns\": [{ \"begin\": \"(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*))\", \"end\": \"(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)?`)\", \"patterns\": [{ \"include\": \"#support-function-call-identifiers\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"entity.name.function.tagged-template.tsx\" }] }, { \"include\": \"#type-arguments\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?\\\\s*(?=(<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))(([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>|\\\\<\\\\s*(((keyof|infer|typeof|readonly)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))(?=\\\\s*([\\\\<\\\\>\\\\,\\\\.\\\\[]|=>|&(?!&)|\\\\|(?!\\\\|)))))([^<>\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(?<==)\\\\>)*(?<!=)\\\\>))*(?<!=)\\\\>)*(?<!=)>\\\\s*)`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.tsx\" } }, \"end\": \"(?=`)\", \"patterns\": [{ \"include\": \"#type-arguments\" }] }] }, \"template-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.tsx\" } }, \"contentName\": \"meta.embedded.line.tsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.tsx\" } }, \"name\": \"meta.template.expression.tsx\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"template-type\": { \"patterns\": [{ \"include\": \"#template-call\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.tsx\" }, \"2\": { \"name\": \"string.template.tsx punctuation.definition.string.template.begin.tsx\" } }, \"contentName\": \"string.template.tsx\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"string.template.tsx punctuation.definition.string.template.end.tsx\" } }, \"patterns\": [{ \"include\": \"#template-type-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"template-type-substitution-element\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.tsx\" } }, \"contentName\": \"meta.embedded.line.tsx\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.tsx\" } }, \"name\": \"meta.template.expression.tsx\", \"patterns\": [{ \"include\": \"#type\" }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.tsx\" } }, \"end\": \"\\\\s*(:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.tsx\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"this-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))this\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.tsx\" }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-string\" }, { \"include\": \"#numeric-literal\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-builtin-literals\" }, { \"include\": \"#type-parameters\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#type-object\" }, { \"include\": \"#type-operators\" }, { \"include\": \"#type-conditional\" }, { \"include\": \"#type-fn-type-parameters\" }, { \"include\": \"#type-paren-or-function-parameters\" }, { \"include\": \"#type-function-return-type\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(readonly)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\" }, { \"include\": \"#type-name\" }] }, \"type-alias-declaration\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(type)\\\\b\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.type.tsx\" }, \"4\": { \"name\": \"entity.name.type.alias.tsx\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"name\": \"meta.type.declaration.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }, { \"begin\": \"(=)\\\\s*(intrinsic)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.tsx\" }, \"2\": { \"name\": \"keyword.control.intrinsic.tsx\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(=)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.tsx\" } }, \"end\": \"(?=\\\\}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(:)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.tsx\" } }, \"end\": \"(?<![:|&])(?!\\\\s*[|&]\\\\s+)((?=^|[,);\\\\}\\\\]]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.tsx\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"begin\": \"(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.tsx\" } }, \"end\": \"(?<![:|&])((?=[,);\\\\}\\\\]]|\\\\/\\\\/)|(?==[^>])|(?=^\\\\s*$)|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))\", \"name\": \"meta.type.annotation.tsx\", \"patterns\": [{ \"include\": \"#type\" }] }] }, \"type-arguments\": { \"begin\": \"\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.begin.tsx\" } }, \"end\": \"\\\\>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.typeparameters.end.tsx\" } }, \"name\": \"meta.type.parameters.tsx\", \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, \"type-arguments-body\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.operator.type.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(_)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"type-builtin-literals\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.builtin.tsx\" }, \"type-conditional\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" } }, \"end\": \"(?<=:)\", \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.tsx\" } }, \"end\": \":\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.tsx\" } }, \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#type\" }] }] }, \"type-fn-type-parameters\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b(?=\\\\s*\\\\<)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.type.constructor.tsx storage.modifier.tsx\" }, \"2\": { \"name\": \"meta.type.constructor.tsx keyword.control.new.tsx\" } }, \"end\": \"(?<=>)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#type-parameters\" }] }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(abstract)\\\\s+)?(new)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.control.new.tsx\" } }, \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.constructor.tsx\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }, { \"begin\": \"(?x)(\\n  (?=\\n    [(]\\\\s*(\\n      ([)]) |\\n      (\\\\.\\\\.\\\\.) |\\n      ([_$[:alnum:]]+\\\\s*(\\n        ([:,?=])|\\n        ([)]\\\\s*=>)\\n      ))\\n    )\\n  )\\n)\", \"end\": \"(?<=\\\\))\", \"name\": \"meta.type.function.tsx\", \"patterns\": [{ \"include\": \"#function-parameters\" }] }] }, \"type-function-return-type\": { \"patterns\": [{ \"begin\": \"(=>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.arrow.tsx\" } }, \"end\": \"(?<!=>)(?<![|&])(?=[,\\\\]\\\\)\\\\{\\\\}=;>:\\\\?]|//|$)\", \"name\": \"meta.type.function.return.tsx\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }, { \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.function.arrow.tsx\" } }, \"end\": \"(?<!=>)(?<![|&])((?=[,\\\\]\\\\)\\\\{\\\\}=;:\\\\?>]|//|^\\\\s*$)|((?<=\\\\S)(?=\\\\s*$)))\", \"name\": \"meta.type.function.return.tsx\", \"patterns\": [{ \"include\": \"#type-function-return-type-core\" }] }] }, \"type-function-return-type-core\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<==>)(?=\\\\s*\\\\{)\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"include\": \"#type-predicate-operator\" }, { \"include\": \"#type\" }] }, \"type-infer\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.expression.infer.tsx\" }, \"2\": { \"name\": \"entity.name.type.tsx\" }, \"3\": { \"name\": \"keyword.operator.expression.extends.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(infer)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s+(extends)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))?\", \"name\": \"meta.type.infer.tsx\" }] }, \"type-name\": { \"patterns\": [{ \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(<)\", \"captures\": { \"1\": { \"name\": \"entity.name.type.module.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.tsx\" }, \"4\": { \"name\": \"meta.type.parameters.tsx punctuation.definition.typeparameters.begin.tsx\" } }, \"contentName\": \"meta.type.parameters.tsx\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.tsx punctuation.definition.typeparameters.end.tsx\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.tsx\" }, \"2\": { \"name\": \"meta.type.parameters.tsx punctuation.definition.typeparameters.begin.tsx\" } }, \"contentName\": \"meta.type.parameters.tsx\", \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"meta.type.parameters.tsx punctuation.definition.typeparameters.end.tsx\" } }, \"patterns\": [{ \"include\": \"#type-arguments-body\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.module.tsx\" }, \"2\": { \"name\": \"punctuation.accessor.tsx\" }, \"3\": { \"name\": \"punctuation.accessor.optional.tsx\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"entity.name.type.tsx\" }] }, \"type-object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.tsx\" } }, \"name\": \"meta.object.type.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#method-declaration\" }, { \"include\": \"#indexer-declaration\" }, { \"include\": \"#indexer-mapped-type-declaration\" }, { \"include\": \"#field-declaration\" }, { \"include\": \"#type-annotation\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.tsx\" } }, \"end\": \"(?=\\\\}|;|,|$)|(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#type\" }] }, \"type-operators\": { \"patterns\": [{ \"include\": \"#typeof-operator\" }, { \"include\": \"#type-infer\" }, { \"begin\": \"([&|])(?=\\\\s*\\\\{)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.tsx\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#type-object\" }] }, { \"begin\": \"[&|]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.type.tsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))keyof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.keyof.tsx\" }, { \"match\": \"(\\\\?|\\\\:)\", \"name\": \"keyword.operator.ternary.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))import(?=\\\\s*\\\\()\", \"name\": \"keyword.operator.expression.import.tsx\" }] }, \"type-parameters\": { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.begin.tsx\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.end.tsx\" } }, \"name\": \"meta.type.parameters.tsx\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends|in|out|const)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.tsx\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }, { \"match\": \"(=)(?!>)\", \"name\": \"keyword.operator.assignment.tsx\" }] }, \"type-paren-or-function-parameters\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.tsx\" } }, \"name\": \"meta.type.paren.cover.tsx\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.operator.rest.tsx\" }, \"3\": { \"name\": \"entity.name.function.tsx variable.language.this.tsx\" }, \"4\": { \"name\": \"entity.name.function.tsx\" }, \"5\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=\\\\s*(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))))\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.tsx\" }, \"2\": { \"name\": \"keyword.operator.rest.tsx\" }, \"3\": { \"name\": \"variable.parameter.tsx variable.language.this.tsx\" }, \"4\": { \"name\": \"variable.parameter.tsx\" }, \"5\": { \"name\": \"keyword.operator.optional.tsx\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=:)\" }, { \"include\": \"#type-annotation\" }, { \"match\": \",\", \"name\": \"punctuation.separator.parameter.tsx\" }, { \"include\": \"#type\" }] }, \"type-predicate-operator\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.tsx\" }, \"2\": { \"name\": \"variable.parameter.tsx variable.language.this.tsx\" }, \"3\": { \"name\": \"variable.parameter.tsx\" }, \"4\": { \"name\": \"keyword.operator.expression.is.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(asserts)\\\\s+)?(?!asserts)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s(is)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.type.asserts.tsx\" }, \"2\": { \"name\": \"variable.parameter.tsx variable.language.this.tsx\" }, \"3\": { \"name\": \"variable.parameter.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(asserts)\\\\s+(?!is)(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))asserts(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.type.asserts.tsx\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))is(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.operator.expression.is.tsx\" }] }, \"type-primitive\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|number|bigint|boolean|symbol|any|void|never|unknown)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.tsx\" }, \"type-string\": { \"patterns\": [{ \"include\": \"#qstring-single\" }, { \"include\": \"#qstring-double\" }, { \"include\": \"#template-type\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.tsx\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.tsx\" } }, \"name\": \"meta.type.tuple.tsx\", \"patterns\": [{ \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.tsx\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.tsx\" }, \"2\": { \"name\": \"keyword.operator.optional.tsx\" }, \"3\": { \"name\": \"punctuation.separator.label.tsx\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeof-operator\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))typeof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.expression.typeof.tsx\" } }, \"end\": \"(?=[,);}\\\\]=>:&|{\\\\?]|(extends\\\\s+)|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))\", \"patterns\": [{ \"include\": \"#type-arguments\" }, { \"include\": \"#expression\" }] }, \"undefined-literal\": { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))undefined(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"constant.language.undefined.tsx\" }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^let|[^\\\\._$[:alnum:]]let|^var|[^\\\\._$[:alnum:]]var)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.tsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(var|let)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.tsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.tsx\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-variable\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.tsx\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=^|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^const|[^\\\\._$[:alnum:]]const)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.tsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b(const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.tsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*(?=$|\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.tsx\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#destructuring-const\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }, { \"begin\": \"(?=(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.tsx\" } }, \"end\": \"(?!(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))((?=;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b))|((?<!^using|[^\\\\._$[:alnum:]]using|^await\\\\s+using|[^\\\\._$[:alnum:]]await\\\\s+using)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.tsx\", \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:(\\\\bdeclare)\\\\s+)?\\\\b((?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.export.tsx\" }, \"2\": { \"name\": \"storage.modifier.tsx\" }, \"3\": { \"name\": \"storage.type.tsx\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#comment\" }, { \"begin\": \"(,)\\\\s*((?!\\\\S)|(?=\\\\/\\\\/))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.comma.tsx\" } }, \"end\": \"(?<!,)(((?==|;|}|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|^\\\\s*$))|((?<=\\\\S)(?=\\\\s*$)))\", \"patterns\": [{ \"include\": \"#single-line-comment-consuming-line-ending\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#punctuation-comma\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"var-single-const\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.tsx variable.other.constant.tsx entity.name.function.tsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.tsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.tsx variable.other.constant.tsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.tsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"(?x)([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: < | () | (... | (param: | (param, | (param? | (param= | (param) =>\\n(:\\\\s*(\\n  (<) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=>)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))Function(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))) |\\n(:\\\\s*((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))) |\\n(:\\\\s*(=>|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(<[^<>]*>)|[^<>(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(<*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n  )) |\\n  ((async\\\\s*)?(\\n    ((<\\\\s*$)|([\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n    # sure shot arrow functions even if => is on new line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n  [(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [<]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=>]                                                              # < typeparam extends\\n) |\\n# arrow function possible to detect only with => on same line\\n(\\n  (<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*(((const\\\\s+)?[_$[:alpha:]])|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?                                                                        # return type\\n  \\\\s*=>                                                                                               # arrow operator\\n)\\n  ))\\n)))\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.tsx entity.name.function.tsx\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.tsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.tsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.tsx variable.other.constant.tsx\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.tsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.tsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.tsx variable.other.readwrite.tsx\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.tsx\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+)|(;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|(?:\\\\bawait\\\\s+(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)\\\\b)|break|case|catch|class|const|continue|declare|do|else|enum|export|finally|function|for|goto|if|import|interface|let|module|namespace|switch|return|throw|try|type|(?:\\\\busing(?=\\\\s+(?!in\\\\b|of\\\\b(?!\\\\s*(?:of\\\\b|=)))[_$[:alpha:]])\\\\b)|var|while)\\\\b)))\", \"name\": \"meta.var-single-variable.expr.tsx\", \"patterns\": [{ \"include\": \"#var-single-variable-type-annotation\" }] }] }, \"var-single-variable-type-annotation\": { \"patterns\": [{ \"include\": \"#type-annotation\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=)(?=\\\\s*\\\\S)(?!\\\\s*.*=>\\\\s*$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.tsx\" } }, \"end\": \"(?=$|^|[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.tsx\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(of|in)\\\\s+))|(?=^\\\\s*$)|(?<![\\\\|\\\\&\\\\+\\\\-\\\\*\\\\/])(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] } }, \"scopeName\": \"source.tsx\" });\nvar tsx = [\n  lang$b\n];\n\nconst lang$a = Object.freeze({ \"displayName\": \"JSON\", \"name\": \"json\", \"patterns\": [{ \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json\" } }, \"name\": \"meta.structure.array.json\", \"patterns\": [{ \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.json\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.js\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.json\" }, \"number\": { \"match\": \"(?x)        # turn on extended mode\\n  -?        # an optional minus\\n  (?:\\n    0       # a zero\\n    |       # ...or...\\n    [1-9]   # a 1-9 character\\n    \\\\d*     # followed by zero or more digits\\n  )\\n  (?:\\n    (?:\\n      \\\\.    # a period\\n      \\\\d+   # followed by one or more digits\\n    )?\\n    (?:\\n      [eE]  # an e character\\n      [+-]? # followed by an option +/-\\n      \\\\d+   # followed by one or more digits\\n    )?      # make exponent optional\\n  )?        # make decimal portion optional\", \"name\": \"constant.numeric.json\" }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json\" } }, \"name\": \"meta.structure.dictionary.json\", \"patterns\": [{ \"comment\": \"the JSON object key\", \"include\": \"#objectkey\" }, { \"include\": \"#comments\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json\" } }, \"name\": \"meta.structure.dictionary.value.json\", \"patterns\": [{ \"comment\": \"the JSON object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, \"objectkey\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.end.json\" } }, \"name\": \"string.json support.type.property-name.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"string\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json\" } }, \"name\": \"string.quoted.double.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"stringcontent\": { \"patterns\": [{ \"match\": '(?x)                # turn on extended mode\\n  \\\\\\\\                # a literal backslash\\n  (?:               # ...followed by...\\n    [\"\\\\\\\\/bfnrt]     # one of these characters\\n    |               # ...or...\\n    u               # a u\\n    [0-9a-fA-F]{4}) # and four hex digits', \"name\": \"constant.character.escape.json\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }, { \"include\": \"#comments\" }] } }, \"scopeName\": \"source.json\" });\nvar json = [\n  lang$a\n];\n\nconst lang$9 = Object.freeze({ \"displayName\": \"JSON with Comments\", \"name\": \"jsonc\", \"patterns\": [{ \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json.comments\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json.comments\" } }, \"name\": \"meta.structure.array.json.comments\", \"patterns\": [{ \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json.comments\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json.comments\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json.comments\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json.comments\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json.comments\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json.comments\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.json.comments\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.js\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.json.comments\" }, \"number\": { \"match\": \"(?x)        # turn on extended mode\\n  -?        # an optional minus\\n  (?:\\n    0       # a zero\\n    |       # ...or...\\n    [1-9]   # a 1-9 character\\n    \\\\d*     # followed by zero or more digits\\n  )\\n  (?:\\n    (?:\\n      \\\\.    # a period\\n      \\\\d+   # followed by one or more digits\\n    )?\\n    (?:\\n      [eE]  # an e character\\n      [+-]? # followed by an option +/-\\n      \\\\d+   # followed by one or more digits\\n    )?      # make exponent optional\\n  )?        # make decimal portion optional\", \"name\": \"constant.numeric.json.comments\" }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json.comments\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json.comments\" } }, \"name\": \"meta.structure.dictionary.json.comments\", \"patterns\": [{ \"comment\": \"the JSON object key\", \"include\": \"#objectkey\" }, { \"include\": \"#comments\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json.comments\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json.comments\" } }, \"name\": \"meta.structure.dictionary.value.json.comments\", \"patterns\": [{ \"comment\": \"the JSON object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json.comments\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json.comments\" }] }, \"objectkey\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.begin.json.comments\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.end.json.comments\" } }, \"name\": \"string.json.comments support.type.property-name.json.comments\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"string\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json.comments\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json.comments\" } }, \"name\": \"string.quoted.double.json.comments\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"stringcontent\": { \"patterns\": [{ \"match\": '(?x)                # turn on extended mode\\n  \\\\\\\\                # a literal backslash\\n  (?:               # ...followed by...\\n    [\"\\\\\\\\/bfnrt]     # one of these characters\\n    |               # ...or...\\n    u               # a u\\n    [0-9a-fA-F]{4}) # and four hex digits', \"name\": \"constant.character.escape.json.comments\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json.comments\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }, { \"include\": \"#comments\" }] } }, \"scopeName\": \"source.json.comments\" });\nvar jsonc = [\n  lang$9\n];\n\nconst lang$8 = Object.freeze({ \"displayName\": \"JSON5\", \"fileTypes\": [\"json5\"], \"name\": \"json5\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json5\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json5\" } }, \"name\": \"meta.structure.array.json5\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json5\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json5\" }] }, \"comments\": { \"patterns\": [{ \"match\": \"/{2}.*\", \"name\": \"comment.single.json5\" }, { \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json5\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json5\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json5\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json5\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null|Infinity|NaN)\\\\b\", \"name\": \"constant.language.json5\" }, \"infinity\": { \"match\": \"(-)*\\\\b(?:Infinity|NaN)\\\\b\", \"name\": \"constant.language.json5\" }, \"key\": { \"name\": \"string.key.json5\", \"patterns\": [{ \"include\": \"#stringSingle\" }, { \"include\": \"#stringDouble\" }, { \"match\": \"[a-zA-Z0-9_-]\", \"name\": \"string.key.json5\" }] }, \"number\": { \"patterns\": [{ \"comment\": \"handles hexadecimal numbers\", \"match\": \"(0x)[0-9a-fA-f]*\", \"name\": \"constant.hex.numeric.json5\" }, { \"comment\": \"handles integer and decimal numbers\", \"match\": \"[+-.]?(?=[1-9]|0(?!\\\\d))\\\\d+(\\\\.\\\\d+)?([eE][+-]?\\\\d+)?\", \"name\": \"constant.dec.numeric.json5\" }] }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json5\" } }, \"comment\": \"a json5 object\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json5\" } }, \"name\": \"meta.structure.dictionary.json5\", \"patterns\": [{ \"include\": \"#comments\" }, { \"comment\": \"the json5 object key\", \"include\": \"#key\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json5\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json5\" } }, \"name\": \"meta.structure.dictionary.value.json5\", \"patterns\": [{ \"comment\": \"the json5 object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json5\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json5\" }] }, \"stringDouble\": { \"begin\": '[\"]', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json5\" } }, \"end\": '[\"]', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json5\" } }, \"name\": \"string.quoted.json5\", \"patterns\": [{ \"match\": '(?x:                # turn on extended mode\\n                     \\\\\\\\                # a literal backslash\\n                     (?:               # ...followed by...\\n                       [\"\\\\\\\\/bfnrt]     # one of these characters\\n                       |               # ...or...\\n                       u               # a u\\n                       [0-9a-fA-F]{4}  # and four hex digits\\n                     )\\n                   )', \"name\": \"constant.character.escape.json5\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json5\" }] }, \"stringSingle\": { \"begin\": \"[']\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json5\" } }, \"end\": \"[']\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json5\" } }, \"name\": \"string.quoted.json5\", \"patterns\": [{ \"match\": '(?x:                # turn on extended mode\\n                     \\\\\\\\                # a literal backslash\\n                     (?:               # ...followed by...\\n                       [\"\\\\\\\\/bfnrt]     # one of these characters\\n                       |               # ...or...\\n                       u               # a u\\n                       [0-9a-fA-F]{4}  # and four hex digits\\n                     )\\n                   )', \"name\": \"constant.character.escape.json5\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json5\" }] }, \"value\": { \"comment\": \"the 'value' diagram at http://json.org\", \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#infinity\" }, { \"include\": \"#number\" }, { \"include\": \"#stringSingle\" }, { \"include\": \"#stringDouble\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }] } }, \"scopeName\": \"source.json5\" });\nvar json5 = [\n  lang$8\n];\n\nconst lang$7 = Object.freeze({ \"displayName\": \"YAML\", \"name\": \"yaml\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }, { \"include\": \"#directive\" }, { \"match\": \"^---\", \"name\": \"entity.other.document.begin.yaml\" }, { \"match\": \"^\\\\.{3}\", \"name\": \"entity.other.document.end.yaml\" }, { \"include\": \"#node\" }], \"repository\": { \"block-collection\": { \"patterns\": [{ \"include\": \"#block-sequence\" }, { \"include\": \"#block-mapping\" }] }, \"block-mapping\": { \"patterns\": [{ \"include\": \"#block-pair\" }] }, \"block-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#block-scalar\" }, { \"include\": \"#block-collection\" }, { \"include\": \"#flow-scalar-plain-out\" }, { \"include\": \"#flow-node\" }] }, \"block-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=\\\\?)|^ *(:)|(:)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" }, \"2\": { \"name\": \"invalid.illegal.expected-newline.yaml\" } }, \"name\": \"meta.block-mapping.yaml\", \"patterns\": [{ \"include\": \"#block-node\" }] }, { \"begin\": \"(?x)\\n                        (?=\\n                            (?x:\\n                                  [^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n                                | [?:-] \\\\S\\n                            )\\n                            (\\n                                  [^\\\\s:]\\n                                | : \\\\S\\n                                | \\\\s+ (?![#\\\\s])\\n                            )*\\n                            \\\\s*\\n                            :\\n\t\t\t\t\t\t\t(\\\\s|$)\\n                        )\\n                    \", \"end\": \"(?x)\\n                        (?=\\n                              \\\\s* $\\n                            | \\\\s+ \\\\#\\n                            | \\\\s* : (\\\\s|$)\\n                        )\\n                    \", \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n                                  [^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n                                | [?:-] \\\\S\\n                            \", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n                                (?=\\n                                      \\\\s* $\\n                                    | \\\\s+ \\\\#\\n                                    | \\\\s* : (\\\\s|$)\\n                                )\\n                            \", \"name\": \"string.unquoted.plain.out.yaml\" }] }, { \"match\": \":(?=\\\\s|$)\", \"name\": \"punctuation.separator.key-value.mapping.yaml\" }] }, \"block-scalar\": { \"begin\": \"(?:(\\\\|)|(>))([1-9])?([-+])?(.*\\\\n?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.block-scalar.literal.yaml\" }, \"2\": { \"name\": \"keyword.control.flow.block-scalar.folded.yaml\" }, \"3\": { \"name\": \"constant.numeric.indentation-indicator.yaml\" }, \"4\": { \"name\": \"storage.modifier.chomping-indicator.yaml\" }, \"5\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \".+\", \"name\": \"invalid.illegal.expected-comment-or-newline.yaml\" }] } }, \"end\": \"^(?=\\\\S)|(?!\\\\G)\", \"patterns\": [{ \"begin\": \"^([ ]+)(?! )\", \"end\": \"^(?!\\\\1|\\\\s*$)\", \"name\": \"string.unquoted.block.yaml\" }] }, \"block-sequence\": { \"match\": \"(-)(?!\\\\S)\", \"name\": \"punctuation.definition.block.sequence.item.yaml\" }, \"comment\": { \"begin\": \"(?:(^[ \\\\t]*)|[ \\\\t]+)(?=#\\\\p{Print}*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.yaml\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.yaml\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.yaml\" }] }, \"directive\": { \"begin\": \"^%\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.directive.begin.yaml\" } }, \"end\": \"(?=$|[ \\\\t]+($|#))\", \"name\": \"meta.directive.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.directive.yaml.yaml\" }, \"2\": { \"name\": \"constant.numeric.yaml-version.yaml\" } }, \"match\": \"\\\\G(YAML)[ \\\\t]+(\\\\d+\\\\.\\\\d+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.directive.tag.yaml\" }, \"2\": { \"name\": \"storage.type.tag-handle.yaml\" }, \"3\": { \"name\": \"support.type.tag-prefix.yaml\" } }, \"match\": \"(?x)\\n                        \\\\G\\n                        (TAG)\\n                        (?:[ \\\\t]+\\n                            ((?:!(?:[0-9A-Za-z\\\\-]*!)?))\\n                            (?:[ \\\\t]+ (\\n                                  !              (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )*\\n                                | (?![,!\\\\[\\\\]{}]) (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+\\n                                )\\n                            )?\\n                        )?\\n                    \" }, { \"captures\": { \"1\": { \"name\": \"support.other.directive.reserved.yaml\" }, \"2\": { \"name\": \"string.unquoted.directive-name.yaml\" }, \"3\": { \"name\": \"string.unquoted.directive-parameter.yaml\" } }, \"match\": \"(?x) \\\\G (\\\\w+) (?:[ \\\\t]+ (\\\\w+) (?:[ \\\\t]+ (\\\\w+))? )?\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.unrecognized.yaml\" }] }, \"flow-alias\": { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.alias.yaml\" }, \"2\": { \"name\": \"punctuation.definition.alias.yaml\" }, \"3\": { \"name\": \"variable.other.alias.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"((\\\\*))([^\\\\s\\\\[\\\\]/{/},]+)([^\\\\s\\\\]},]\\\\S*)?\" }, \"flow-collection\": { \"patterns\": [{ \"include\": \"#flow-sequence\" }, { \"include\": \"#flow-mapping\" }] }, \"flow-mapping\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.begin.yaml\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.end.yaml\" } }, \"name\": \"meta.flow-mapping.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.mapping.yaml\" }, { \"include\": \"#flow-pair\" }] }, \"flow-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-alias\" }, { \"include\": \"#flow-collection\" }, { \"include\": \"#flow-scalar\" }] }, \"flow-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.explicit.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, { \"begin\": \"(?x)\\n                        (?=\\n                            (?:\\n                                [^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n                              | [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n                            )\\n                            (\\n                                  [^\\\\s:[\\\\[\\\\]{},]]\\n                                | : [^\\\\s[\\\\[\\\\]{},]]\\n                                | \\\\s+ (?![#\\\\s])\\n                            )*\\n                            \\\\s*\\n                            :\\n\t\t\t\t\t\t\t(\\\\s|$)\\n                        )\\n                    \", \"end\": \"(?x)\\n                        (?=\\n                              \\\\s* $\\n                            | \\\\s+ \\\\#\\n                            | \\\\s* : (\\\\s|$)\\n                            | \\\\s* : [\\\\[\\\\]{},]\\n                            | \\\\s* [\\\\[\\\\]{},]\\n                        )\\n                    \", \"name\": \"meta.flow-pair.key.yaml\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n                                  [^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n                                | [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n                            \", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n                                (?=\\n                                      \\\\s* $\\n                                    | \\\\s+ \\\\#\\n                                    | \\\\s* : (\\\\s|$)\\n                                    | \\\\s* : [\\\\[\\\\]{},]\\n                                    | \\\\s* [\\\\[\\\\]{},]\\n                                )\\n                            \", \"name\": \"string.unquoted.plain.in.yaml\" }] }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"captures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.yaml\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, \"flow-scalar\": { \"patterns\": [{ \"include\": \"#flow-scalar-double-quoted\" }, { \"include\": \"#flow-scalar-single-quoted\" }, { \"include\": \"#flow-scalar-plain-in\" }] }, \"flow-scalar-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.double.yaml\", \"patterns\": [{ \"match\": '\\\\\\\\([0abtnvfre \"/\\\\\\\\N_Lp]|x\\\\d\\\\d|u\\\\d{4}|U\\\\d{8})', \"name\": \"constant.character.escape.yaml\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.double-quoted.newline.yaml\" }] }, \"flow-scalar-plain-in\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n                          [^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n                        | [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n                    \", \"end\": \"(?x)\\n                        (?=\\n                              \\\\s* $\\n                            | \\\\s+ \\\\#\\n                            | \\\\s* : (\\\\s|$)\\n                            | \\\\s* : [\\\\[\\\\]{},]\\n                            | \\\\s* [\\\\[\\\\]{},]\\n                        )\\n                    \", \"name\": \"string.unquoted.plain.in.yaml\" }] }, \"flow-scalar-plain-in-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n                        (?x:\\n                              (null|Null|NULL|~)\\n                            | (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n                            | (\\n                                (?:\\n                                      [-+]? 0b [0-1_]+ # (base 2)\\n                                    | [-+]? 0  [0-7_]+ # (base 8)\\n                                    | [-+]? (?: 0|[1-9][0-9_]*) # (base 10)\\n                                    | [-+]? 0x [0-9a-fA-F_]+ # (base 16)\\n                                    | [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+ # (base 60)\\n                                )\\n                              )\\n                            | (\\n                                (?x:\\n                                      [-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)? # (base 10)\\n                                    | [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]* # (base 60)\\n                                    | [-+]? \\\\. (?: inf|Inf|INF) # (infinity)\\n                                    |       \\\\. (?: nan|NaN|NAN) # (not a number)\\n                                )\\n                              )\\n                            | (\\n                                (?x:\\n                                    \\\\d{4} - \\\\d{2} - \\\\d{2}           # (y-m-d)\\n                                  | \\\\d{4}                           # (year)\\n                                    - \\\\d{1,2}                       # (month)\\n                                    - \\\\d{1,2}                       # (day)\\n                                    (?: [Tt] | [ \\\\t]+) \\\\d{1,2}      # (hour)\\n                                    : \\\\d{2}                         # (minute)\\n                                    : \\\\d{2}                         # (second)\\n                                    (?: \\\\.\\\\d*)?                     # (fraction)\\n                                    (?:\\n                                          (?:[ \\\\t]*) Z\\n                                        | [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n                                    )?                              # (time zone)\\n                                )\\n                              )\\n                            | (=)\\n                            | (<<)\\n                        )\\n                        (?:\\n                            (?=\\n                                  \\\\s* $\\n                                | \\\\s+ \\\\#\\n                                | \\\\s* : (\\\\s|$)\\n                                | \\\\s* : [\\\\[\\\\]{},]\\n                                | \\\\s* [\\\\[\\\\]{},]\\n                            )\\n                        )\\n                    \" }] }, \"flow-scalar-plain-out\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n                          [^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n                        | [?:-] \\\\S\\n                    \", \"end\": \"(?x)\\n                        (?=\\n                              \\\\s* $\\n                            | \\\\s+ \\\\#\\n                            | \\\\s* : (\\\\s|$)\\n                        )\\n                    \", \"name\": \"string.unquoted.plain.out.yaml\" }] }, \"flow-scalar-plain-out-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n                        (?x:\\n                              (null|Null|NULL|~)\\n                            | (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n                            | (\\n                                (?:\\n                                      [-+]? 0b [0-1_]+ # (base 2)\\n                                    | [-+]? 0  [0-7_]+ # (base 8)\\n                                    | [-+]? (?: 0|[1-9][0-9_]*) # (base 10)\\n                                    | [-+]? 0x [0-9a-fA-F_]+ # (base 16)\\n                                    | [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+ # (base 60)\\n                                )\\n                              )\\n                            | (\\n                                (?x:\\n                                      [-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)? # (base 10)\\n                                    | [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]* # (base 60)\\n                                    | [-+]? \\\\. (?: inf|Inf|INF) # (infinity)\\n                                    |       \\\\. (?: nan|NaN|NAN) # (not a number)\\n                                )\\n                              )\\n                            | (\\n                                (?x:\\n                                    \\\\d{4} - \\\\d{2} - \\\\d{2}           # (y-m-d)\\n                                  | \\\\d{4}                           # (year)\\n                                    - \\\\d{1,2}                       # (month)\\n                                    - \\\\d{1,2}                       # (day)\\n                                    (?: [Tt] | [ \\\\t]+) \\\\d{1,2}      # (hour)\\n                                    : \\\\d{2}                         # (minute)\\n                                    : \\\\d{2}                         # (second)\\n                                    (?: \\\\.\\\\d*)?                     # (fraction)\\n                                    (?:\\n                                          (?:[ \\\\t]*) Z\\n                                        | [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n                                    )?                              # (time zone)\\n                                )\\n                              )\\n                            | (=)\\n                            | (<<)\\n                        )\\n                        (?x:\\n                            (?=\\n                                  \\\\s* $\\n                                | \\\\s+ \\\\#\\n                                | \\\\s* : (\\\\s|$)\\n                            )\\n                        )\\n                    \" }] }, \"flow-scalar-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": \"'(?!')\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.single.yaml\", \"patterns\": [{ \"match\": \"''\", \"name\": \"constant.character.escape.single-quoted.yaml\" }] }, \"flow-sequence\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.begin.yaml\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.end.yaml\" } }, \"name\": \"meta.flow-sequence.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.sequence.yaml\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }] }, \"flow-value\": { \"patterns\": [{ \"begin\": \"\\\\G(?![},\\\\]])\", \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.value.yaml\", \"patterns\": [{ \"include\": \"#flow-node\" }] }] }, \"node\": { \"patterns\": [{ \"include\": \"#block-node\" }] }, \"property\": { \"begin\": \"(?=!|&)\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.property.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.property.anchor.yaml\" }, \"2\": { \"name\": \"punctuation.definition.anchor.yaml\" }, \"3\": { \"name\": \"entity.name.type.anchor.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"\\\\G((&))([^\\\\s\\\\[\\\\]/{/},]+)(\\\\S+)?\" }, { \"match\": \"(?x)\\n                        \\\\G\\n                        (?:\\n                            ! < (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+ >\\n                          | (?:!(?:[0-9A-Za-z\\\\-]*!)?) (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$_.~*'()] )+\\n                          | !\\n                        )\\n                        (?=\\\\ |\\\\t|$)\\n                    \", \"name\": \"storage.type.tag-handle.yaml\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.tag-handle.yaml\" }] }, \"prototype\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }] } }, \"scopeName\": \"source.yaml\", \"aliases\": [\"yml\"] });\nvar yaml = [\n  lang$7\n];\n\nconst lang$6 = Object.freeze({ \"displayName\": \"TOML\", \"fileTypes\": [\"toml\"], \"name\": \"toml\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#groups\" }, { \"include\": \"#key_pair\" }, { \"include\": \"#invalid\" }], \"repository\": { \"comments\": { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.toml\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.toml\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.toml\" }] }, \"groups\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.section.begin.toml\" }, \"2\": { \"patterns\": [{ \"match\": \"[^\\\\s.]+\", \"name\": \"entity.name.section.toml\" }] }, \"3\": { \"name\": \"punctuation.definition.section.begin.toml\" } }, \"match\": \"^\\\\s*(\\\\[)([^\\\\[\\\\]]*)(\\\\])\", \"name\": \"meta.group.toml\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.section.begin.toml\" }, \"2\": { \"patterns\": [{ \"match\": \"[^\\\\s.]+\", \"name\": \"entity.name.section.toml\" }] }, \"3\": { \"name\": \"punctuation.definition.section.begin.toml\" } }, \"match\": \"^\\\\s*(\\\\[\\\\[)([^\\\\[\\\\]]*)(\\\\]\\\\])\", \"name\": \"meta.group.double.toml\" }] }, \"invalid\": { \"match\": \"\\\\S+(\\\\s*(?=\\\\S))?\", \"name\": \"invalid.illegal.not-allowed-here.toml\" }, \"key_pair\": { \"patterns\": [{ \"begin\": \"([A-Za-z0-9_-]+)\\\\s*(=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\" }, \"2\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }, { \"begin\": '((\")(.*?)(\"))\\\\s*(=)\\\\s*', \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\" }, \"2\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"3\": { \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\]', \"name\": \"invalid.illegal.escape.toml\" }, { \"match\": '\"', \"name\": \"invalid.illegal.not-allowed-here.toml\" }] }, \"4\": { \"name\": \"punctuation.definition.variable.end.toml\" }, \"5\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }, { \"begin\": \"((')([^']*)('))\\\\s*(=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\" }, \"2\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"4\": { \"name\": \"punctuation.definition.variable.end.toml\" }, \"5\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }, { \"begin\": `(?x)\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t(?:\n\t\t\t\t\t\t\t\t\t[A-Za-z0-9_-]+\t\t\t\t# Bare key\n\t\t\t\t\t\t\t\t  | \"  (?:[^\"\\\\\\\\]|\\\\\\\\.)* \"\t\t# Double quoted key\n\t\t\t\t\t\t\t\t  | ' [^']*          '\t\t# Sindle quoted key\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t(?:\n\t\t\t\t\t\t\t\t\t\\\\s* \\\\. \\\\s*\t\t\t\t\t# Dot\n\t\t\t\t\t\t\t\t  | (?= \\\\s* =)\t\t\t\t\t#   or look-ahead for equals\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t){2,}\t\t\t\t\t\t\t\t# Ensure at least one dot\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\\\\s*(=)\\\\s*\n\t\t\t\t\t`, \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\", \"patterns\": [{ \"match\": \"\\\\.\", \"name\": \"punctuation.separator.variable.toml\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"2\": { \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\]', \"name\": \"invalid.illegal.escape.toml\" }] }, \"3\": { \"name\": \"punctuation.definition.variable.end.toml\" } }, \"match\": '(\")((?:[^\"\\\\\\\\]|\\\\\\\\.)*)(\")' }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"2\": { \"name\": \"punctuation.definition.variable.end.toml\" } }, \"match\": \"(')[^']*(')\" }] }, \"3\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"comment\": \"Dotted key\", \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }] }, \"primatives\": { \"patterns\": [{ \"begin\": '\\\\G\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": '\"{3,5}', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.triple.double.toml\", \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\\\\\n]', \"name\": \"invalid.illegal.escape.toml\" }] }, { \"begin\": '\\\\G\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.double.toml\", \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\]', \"name\": \"invalid.illegal.escape.toml\" }] }, { \"begin\": \"\\\\G'''\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": \"'{3,5}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.triple.single.toml\" }, { \"begin\": \"\\\\G'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.single.toml\" }, { \"match\": \"\\\\G(?x)\\n\t\t\t\t\t\t[0-9]{4}\\n\t\t\t\t\t\t-\\n\t\t\t\t\t\t(0[1-9]|1[012])\\n\t\t\t\t\t\t-\\n\t\t\t\t\t\t(?!00|3[2-9])[0-3][0-9]\\n\t\t\t\t\t\t(\\n\t\t\t\t\t\t\t[Tt ]\\n\t\t\t\t\t\t\t(?!2[5-9])[0-2][0-9]\\n\t\t\t\t\t\t\t:\\n\t\t\t\t\t\t\t[0-5][0-9]\\n\t\t\t\t\t\t\t:\\n\t\t\t\t\t\t\t(?!6[1-9])[0-6][0-9]\\n\t\t\t\t\t\t\t(\\\\.[0-9]+)?\\n\t\t\t\t\t\t\t(\\n\t\t\t\t\t\t\t\tZ\\n\t\t\t\t\t\t\t  | [+-](?!2[5-9])[0-2][0-9]:[0-5][0-9]\\n\t\t\t\t\t\t\t)?\\n\t\t\t\t\t\t)?\\n\t\t\t\t\t\", \"name\": \"constant.other.date.toml\" }, { \"match\": \"\\\\G(?x)\\n\t\t\t\t\t\t(?!2[5-9])[0-2][0-9]\\n\t\t\t\t\t\t:\\n\t\t\t\t\t\t[0-5][0-9]\\n\t\t\t\t\t\t:\\n\t\t\t\t\t\t(?!6[1-9])[0-6][0-9]\\n\t\t\t\t\t\t(\\\\.[0-9]+)?\\n\t\t\t\t\t\", \"name\": \"constant.other.time.toml\" }, { \"match\": \"\\\\G(true|false)\", \"name\": \"constant.language.boolean.toml\" }, { \"match\": \"\\\\G0x\\\\h(\\\\h|_\\\\h)*\", \"name\": \"constant.numeric.hex.toml\" }, { \"match\": \"\\\\G0o[0-7]([0-7]|_[0-7])*\", \"name\": \"constant.numeric.octal.toml\" }, { \"match\": \"\\\\G0b[01]([01]|_[01])*\", \"name\": \"constant.numeric.binary.toml\" }, { \"match\": \"\\\\G[+-]?(inf|nan)\", \"name\": \"constant.numeric.toml\" }, { \"match\": \"(?x)\\n\t\t\t\t\t\t\\\\G\\n\t\t\t\t\t\t(\\n\t\t\t\t\t\t    [+-]?\\n\t\t\t\t\t\t    (\\n\t\t\t\t\t\t\t\t0\\n\t\t\t\t\t\t\t  | ([1-9](([0-9]|_[0-9])+)?)\\n\t\t\t\t\t\t\t)\\n\t\t\t\t\t\t)\\n\t\t\t\t\t\t(?=[.eE])\\n\t\t\t\t\t\t(\\n\t\t\t\t\t\t    \\\\.\\n\t\t\t\t\t\t    ([0-9](([0-9]|_[0-9])+)?)\\n\t\t\t\t\t\t)?\\n\t\t\t\t\t\t(\\n\t\t\t\t\t\t    [eE]\\n\t\t\t\t\t\t    ([+-]?[0-9](([0-9]|_[0-9])+)?)\\n\t\t\t\t\t\t)?\\n\t\t\t\t\t\", \"name\": \"constant.numeric.float.toml\" }, { \"match\": \"(?x)\\n\t\t\t\t\t\t\\\\G\\n\t\t\t\t\t\t(\\n\t\t\t\t\t\t    [+-]?\\n\t\t\t\t\t\t    (\\n\t\t\t\t\t\t\t\t0\\n\t\t\t\t\t\t\t  | ([1-9](([0-9]|_[0-9])+)?)\\n\t\t\t\t\t\t\t)\\n\t\t\t\t\t\t)\\n\t\t\t\t\t\", \"name\": \"constant.numeric.integer.toml\" }, { \"begin\": \"\\\\G\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.toml\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.toml\" } }, \"name\": \"meta.array.toml\", \"patterns\": [{ \"begin\": `(?=[\"'']|[+-]?[0-9]|[+-]?(inf|nan)|true|false|\\\\[|\\\\{)`, \"end\": \",|(?=])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.separator.array.toml\" } }, \"patterns\": [{ \"include\": \"#primatives\" }, { \"include\": \"#comments\" }, { \"include\": \"#invalid\" }] }, { \"include\": \"#comments\" }, { \"include\": \"#invalid\" }] }, { \"begin\": \"\\\\G\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.inline-table.begin.toml\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.inline-table.end.toml\" } }, \"name\": \"meta.inline-table.toml\", \"patterns\": [{ \"begin\": \"(?=\\\\S)\", \"end\": \",|(?=})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.separator.inline-table.toml\" } }, \"patterns\": [{ \"include\": \"#key_pair\" }] }, { \"include\": \"#comments\" }] }] } }, \"scopeName\": \"source.toml\" });\nvar toml = [\n  lang$6\n];\n\nconst lang$5 = Object.freeze({ \"displayName\": \"GraphQL\", \"fileTypes\": [\"graphql\", \"graphqls\", \"gql\", \"graphcool\"], \"name\": \"graphql\", \"patterns\": [{ \"include\": \"#graphql\" }], \"repository\": { \"graphql\": { \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-fragment-definition\" }, { \"include\": \"#graphql-directive-definition\" }, { \"include\": \"#graphql-type-interface\" }, { \"include\": \"#graphql-enum\" }, { \"include\": \"#graphql-scalar\" }, { \"include\": \"#graphql-union\" }, { \"include\": \"#graphql-schema\" }, { \"include\": \"#graphql-operation-def\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-ampersand\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.graphql\" } }, \"match\": \"\\\\s*(&)\" }, \"graphql-arguments\": { \"begin\": \"\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.directive.graphql\" } }, \"end\": \"\\\\s*(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.round.directive.graphql\" } }, \"name\": \"meta.arguments.graphql\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"begin\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)(?:\\\\s*(:))\", \"beginCaptures\": { \"1\": { \"name\": \"variable.parameter.graphql\" }, \"2\": { \"name\": \"punctuation.colon.graphql\" } }, \"end\": \"(?=\\\\s*(?:(?:([_A-Za-z][_0-9A-Za-z]*)\\\\s*(:))|\\\\)))|\\\\s*(,)\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.comma.graphql\" } }, \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-value\" }, { \"include\": \"#graphql-skip-newlines\" }] }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-boolean-value\": { \"captures\": { \"1\": { \"name\": \"constant.language.boolean.graphql\" } }, \"match\": \"\\\\s*\\\\b(true|false)\\\\b\" }, \"graphql-colon\": { \"captures\": { \"1\": { \"name\": \"punctuation.colon.graphql\" } }, \"match\": \"\\\\s*(:)\" }, \"graphql-comma\": { \"captures\": { \"1\": { \"name\": \"punctuation.comma.graphql\" } }, \"match\": \"\\\\s*(,)\" }, \"graphql-comment\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.graphql\" } }, \"comment\": \"need to prefix comment space with a scope else Atom's reflow cmd doesn't work\", \"match\": \"(\\\\s*)(#).*\", \"name\": \"comment.line.graphql.js\" }, { \"begin\": '(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.graphql\" } }, \"end\": '(\"\"\")', \"name\": \"comment.line.graphql.js\" }, { \"begin\": '(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.graphql\" } }, \"end\": '(\")', \"name\": \"comment.line.graphql.js\" }] }, \"graphql-description-docstring\": { \"begin\": '\"\"\"', \"end\": '\"\"\"', \"name\": \"comment.block.graphql\" }, \"graphql-description-singleline\": { \"match\": '#(?=([^\"]*\"[^\"]*\")*[^\"]*$).*$', \"name\": \"comment.line.number-sign.graphql\" }, \"graphql-directive\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*((@)\\\\s*([_A-Za-z][_0-9A-Za-z]*))\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.directive.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-arguments\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"include\": \"#graphql-skip-newlines\" }] }, \"graphql-directive-definition\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*(\\\\bdirective\\\\b)\\\\s*(@[_A-Za-z][_0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.directive.graphql\" }, \"2\": { \"name\": \"entity.name.function.directive.graphql\" }, \"3\": { \"name\": \"keyword.on.graphql\" }, \"4\": { \"name\": \"support.type.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"include\": \"#graphql-variable-definitions\" }, { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*(\\\\bon\\\\b)\\\\s*([_A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.on.graphql\" }, \"2\": { \"name\": \"support.type.location.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"include\": \"#graphql-skip-newlines\" }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"captures\": { \"2\": { \"name\": \"support.type.location.graphql\" } }, \"match\": \"\\\\s*(\\\\|)\\\\s*([_A-Za-z]*)\" }] }, { \"include\": \"#graphql-skip-newlines\" }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-enum\": { \"begin\": \"\\\\s*+\\\\b(enum)\\\\b\\\\s*([_A-Za-z][_0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.enum.graphql\" }, \"2\": { \"name\": \"support.type.enum.graphql\" } }, \"end\": \"(?<=})\", \"name\": \"meta.enum.graphql\", \"patterns\": [{ \"begin\": \"\\\\s*({)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"end\": \"\\\\s*(})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"name\": \"meta.type.object.graphql\", \"patterns\": [{ \"include\": \"#graphql-object-type\" }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-enum-value\" }, { \"include\": \"#literal-quasi-embedded\" }] }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }] }, \"graphql-enum-value\": { \"match\": \"\\\\s*(?!=\\\\b(true|false|null)\\\\b)([_A-Za-z][_0-9A-Za-z]*)\", \"name\": \"constant.character.enum.graphql\" }, \"graphql-field\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.unquoted.alias.graphql\" }, \"2\": { \"name\": \"punctuation.colon.graphql\" } }, \"match\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)\\\\s*(:)\" }, { \"captures\": { \"1\": { \"name\": \"variable.graphql\" } }, \"match\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)\" }, { \"include\": \"#graphql-arguments\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-selection-set\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"include\": \"#graphql-skip-newlines\" }] }, \"graphql-float-value\": { \"captures\": { \"1\": { \"name\": \"constant.numeric.float.graphql\" } }, \"match\": \"\\\\s*(-?(0|[1-9][0-9]*)(\\\\.[0-9]+)?((e|E)(\\\\+|-)?[0-9]+)?)\" }, \"graphql-fragment-definition\": { \"begin\": \"\\\\s*(?:(\\\\bfragment\\\\b)\\\\s*([_A-Za-z][_0-9A-Za-z]*)?\\\\s*(?:(\\\\bon\\\\b)\\\\s*([_A-Za-z][_0-9A-Za-z]*)))\", \"captures\": { \"1\": { \"name\": \"keyword.fragment.graphql\" }, \"2\": { \"name\": \"entity.name.fragment.graphql\" }, \"3\": { \"name\": \"keyword.on.graphql\" }, \"4\": { \"name\": \"support.type.graphql\" } }, \"end\": \"(?<=})\", \"name\": \"meta.fragment.graphql\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-selection-set\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-skip-newlines\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-fragment-spread\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*(\\\\.\\\\.\\\\.)\\\\s*(?!\\\\bon\\\\b)([_A-Za-z][_0-9A-Za-z]*)\", \"captures\": { \"1\": { \"name\": \"keyword.operator.spread.graphql\" }, \"2\": { \"name\": \"variable.fragment.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-selection-set\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"include\": \"#graphql-skip-newlines\" }] }, \"graphql-ignore-spaces\": { \"match\": \"\\\\s*\" }, \"graphql-inline-fragment\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*(\\\\.\\\\.\\\\.)\\\\s*(?:(\\\\bon\\\\b)\\\\s*([_A-Za-z][_0-9A-Za-z]*))?\", \"captures\": { \"1\": { \"name\": \"keyword.operator.spread.graphql\" }, \"2\": { \"name\": \"keyword.on.graphql\" }, \"3\": { \"name\": \"support.type.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-selection-set\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-skip-newlines\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-input-types\": { \"patterns\": [{ \"include\": \"#graphql-scalar-type\" }, { \"captures\": { \"1\": { \"name\": \"support.type.graphql\" }, \"2\": { \"name\": \"keyword.operator.nulltype.graphql\" } }, \"match\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)(?:\\\\s*(!))?\" }, { \"begin\": \"\\\\s*(\\\\[)\", \"captures\": { \"1\": { \"name\": \"meta.brace.square.graphql\" }, \"2\": { \"name\": \"keyword.operator.nulltype.graphql\" } }, \"end\": \"\\\\s*(\\\\])(?:\\\\s*(!))?\", \"name\": \"meta.type.list.graphql\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-input-types\" }, { \"include\": \"#graphql-comma\" }, { \"include\": \"#literal-quasi-embedded\" }] }] }, \"graphql-list-value\": { \"patterns\": [{ \"begin\": \"\\\\s*+(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.graphql\" } }, \"end\": \"\\\\s*(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.graphql\" } }, \"name\": \"meta.listvalues.graphql\", \"patterns\": [{ \"include\": \"#graphql-value\" }] }] }, \"graphql-name\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.graphql\" } }, \"match\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)\" }, \"graphql-null-value\": { \"captures\": { \"1\": { \"name\": \"constant.language.null.graphql\" } }, \"match\": \"\\\\s*\\\\b(null)\\\\b\" }, \"graphql-object-field\": { \"captures\": { \"1\": { \"name\": \"constant.object.key.graphql\" }, \"2\": { \"name\": \"string.unquoted.graphql\" }, \"3\": { \"name\": \"punctuation.graphql\" } }, \"match\": \"\\\\s*(([_A-Za-z][_0-9A-Za-z]*))\\\\s*(:)\" }, \"graphql-object-value\": { \"patterns\": [{ \"begin\": \"\\\\s*+({)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.curly.graphql\" } }, \"end\": \"\\\\s*(})\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.curly.graphql\" } }, \"name\": \"meta.objectvalues.graphql\", \"patterns\": [{ \"include\": \"#graphql-object-field\" }, { \"include\": \"#graphql-value\" }] }] }, \"graphql-operation-def\": { \"patterns\": [{ \"include\": \"#graphql-query-mutation\" }, { \"include\": \"#graphql-name\" }, { \"include\": \"#graphql-variable-definitions\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-selection-set\" }] }, \"graphql-query-mutation\": { \"captures\": { \"1\": { \"name\": \"keyword.operation.graphql\" } }, \"match\": \"\\\\s*\\\\b(query|mutation)\\\\b\" }, \"graphql-scalar\": { \"captures\": { \"1\": { \"name\": \"keyword.scalar.graphql\" }, \"2\": { \"name\": \"entity.scalar.graphql\" } }, \"match\": \"\\\\s*\\\\b(scalar)\\\\b\\\\s*([_A-Za-z][_0-9A-Za-z]*)\" }, \"graphql-scalar-type\": { \"captures\": { \"1\": { \"name\": \"support.type.builtin.graphql\" }, \"2\": { \"name\": \"keyword.operator.nulltype.graphql\" } }, \"match\": \"\\\\s*\\\\b(Int|Float|String|Boolean|ID)\\\\b(?:\\\\s*(!))?\" }, \"graphql-schema\": { \"begin\": \"\\\\s*\\\\b(schema)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.schema.graphql\" } }, \"end\": \"(?<=})\", \"patterns\": [{ \"begin\": \"\\\\s*({)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"end\": \"\\\\s*(})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"patterns\": [{ \"begin\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)(?=\\\\s*\\\\(|:)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.arguments.graphql\" } }, \"end\": \"(?=\\\\s*(([_A-Za-z][_0-9A-Za-z]*)\\\\s*(\\\\(|:)|(})))|\\\\s*(,)\", \"endCaptures\": { \"5\": { \"name\": \"punctuation.comma.graphql\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.type.graphql\" } }, \"match\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)\" }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-colon\" }, { \"include\": \"#graphql-skip-newlines\" }] }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-skip-newlines\" }] }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-skip-newlines\" }] }, \"graphql-selection-set\": { \"begin\": \"\\\\s*({)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"end\": \"\\\\s*(})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"name\": \"meta.selectionset.graphql\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-field\" }, { \"include\": \"#graphql-fragment-spread\" }, { \"include\": \"#graphql-inline-fragment\" }, { \"include\": \"#graphql-comma\" }, { \"include\": \"#native-interpolation\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-skip-newlines\": { \"match\": \"\\\\s*\\n\" }, \"graphql-string-content\": { \"patterns\": [{ \"match\": `\\\\\\\\[/'\"\\\\\\\\nrtbf]`, \"name\": \"constant.character.escape.graphql\" }, { \"match\": \"\\\\\\\\u([0-9a-fA-F]{4})\", \"name\": \"constant.character.escape.graphql\" }] }, \"graphql-string-value\": { \"begin\": '\\\\s*+((\"))', \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.double.graphql\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.graphql\" } }, \"contentName\": \"string.quoted.double.graphql\", \"end\": '\\\\s*+(?:((\"))|(\\n))', \"endCaptures\": { \"1\": { \"name\": \"string.quoted.double.graphql\" }, \"2\": { \"name\": \"punctuation.definition.string.end.graphql\" }, \"3\": { \"name\": \"invalid.illegal.newline.graphql\" } }, \"patterns\": [{ \"include\": \"#graphql-string-content\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-type-definition\": { \"begin\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)(?=\\\\s*\\\\(|:)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.graphql\" } }, \"comment\": \"key (optionalArgs): Type\", \"end\": \"(?=\\\\s*(([_A-Za-z][_0-9A-Za-z]*)\\\\s*(\\\\(|:)|(})))|\\\\s*(,)\", \"endCaptures\": { \"5\": { \"name\": \"punctuation.comma.graphql\" } }, \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-variable-definitions\" }, { \"include\": \"#graphql-type-object\" }, { \"include\": \"#graphql-colon\" }, { \"include\": \"#graphql-input-types\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-type-interface\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*\\\\b(?:(extends?)?\\\\b\\\\s*\\\\b(type)|(interface)|(input))\\\\b\\\\s*([_A-Za-z][_0-9A-Za-z]*)?\", \"captures\": { \"1\": { \"name\": \"keyword.type.graphql\" }, \"2\": { \"name\": \"keyword.type.graphql\" }, \"3\": { \"name\": \"keyword.interface.graphql\" }, \"4\": { \"name\": \"keyword.input.graphql\" }, \"5\": { \"name\": \"support.type.graphql\" } }, \"end\": \"(?=.)\", \"name\": \"meta.type.interface.graphql\", \"patterns\": [{ \"begin\": \"\\\\s*\\\\b(implements)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.implements.graphql\" } }, \"end\": \"\\\\s*(?={)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.type.graphql\" } }, \"match\": \"\\\\s*([_A-Za-z][_0-9A-Za-z]*)\" }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-ampersand\" }, { \"include\": \"#graphql-comma\" }] }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-type-object\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"include\": \"#graphql-ignore-spaces\" }] }, \"graphql-type-object\": { \"begin\": \"\\\\s*({)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"end\": \"\\\\s*(})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.operation.graphql\" } }, \"name\": \"meta.type.object.graphql\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-object-type\" }, { \"include\": \"#graphql-type-definition\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-union\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*\\\\b(union)\\\\b\\\\s*([_A-Za-z][_0-9A-Za-z]*)\", \"captures\": { \"1\": { \"name\": \"keyword.union.graphql\" }, \"2\": { \"name\": \"support.type.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"applyEndPatternLast\": 1, \"begin\": \"\\\\s*(=)\\\\s*([_A-Za-z][_0-9A-Za-z]*)\", \"captures\": { \"1\": { \"name\": \"punctuation.assignment.graphql\" }, \"2\": { \"name\": \"support.type.graphql\" } }, \"end\": \"(?=.)\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-skip-newlines\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.or.graphql\" }, \"2\": { \"name\": \"support.type.graphql\" } }, \"match\": \"\\\\s*(\\\\|)\\\\s*([_A-Za-z][_0-9A-Za-z]*)\" }] }, { \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-skip-newlines\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-union-mark\": { \"captures\": { \"1\": { \"name\": \"punctuation.union.graphql\" } }, \"match\": \"\\\\s*(\\\\|)\" }, \"graphql-value\": { \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-variable-name\" }, { \"include\": \"#graphql-float-value\" }, { \"include\": \"#graphql-string-value\" }, { \"include\": \"#graphql-boolean-value\" }, { \"include\": \"#graphql-null-value\" }, { \"include\": \"#graphql-enum-value\" }, { \"include\": \"#graphql-list-value\" }, { \"include\": \"#graphql-object-value\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-variable-assignment\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\s(=)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.assignment.graphql\" } }, \"end\": \"(?=[\\n,)])\", \"patterns\": [{ \"include\": \"#graphql-value\" }] }, \"graphql-variable-definition\": { \"begin\": \"\\\\s*(\\\\$?[_A-Za-z][_0-9A-Za-z]*)(?=\\\\s*\\\\(|:)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.parameter.graphql\" } }, \"comment\": \"variable: type = value,.... which may be a list\", \"end\": \"(?=\\\\s*((\\\\$?[_A-Za-z][_0-9A-Za-z]*)\\\\s*(\\\\(|:)|(}|\\\\))))|\\\\s*(,)\", \"endCaptures\": { \"5\": { \"name\": \"punctuation.comma.graphql\" } }, \"name\": \"meta.variables.graphql\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-directive\" }, { \"include\": \"#graphql-colon\" }, { \"include\": \"#graphql-input-types\" }, { \"include\": \"#graphql-variable-assignment\" }, { \"include\": \"#literal-quasi-embedded\" }, { \"include\": \"#graphql-skip-newlines\" }] }, \"graphql-variable-definitions\": { \"begin\": \"\\\\s*(\\\\()\", \"captures\": { \"1\": { \"name\": \"meta.brace.round.graphql\" } }, \"end\": \"\\\\s*(\\\\))\", \"patterns\": [{ \"include\": \"#graphql-comment\" }, { \"include\": \"#graphql-description-docstring\" }, { \"include\": \"#graphql-description-singleline\" }, { \"include\": \"#graphql-variable-definition\" }, { \"include\": \"#literal-quasi-embedded\" }] }, \"graphql-variable-name\": { \"captures\": { \"1\": { \"name\": \"variable.graphql\" } }, \"match\": \"\\\\s*(\\\\$[_A-Za-z][_0-9A-Za-z]*)\" }, \"native-interpolation\": { \"begin\": \"\\\\s*(\\\\${)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.substitution.begin\" } }, \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.substitution.end\" } }, \"name\": \"native.interpolation\", \"patterns\": [{ \"include\": \"source.js\" }, { \"include\": \"source.ts\" }, { \"include\": \"source.js.jsx\" }, { \"include\": \"source.tsx\" }] } }, \"scopeName\": \"source.graphql\", \"embeddedLangs\": [\"javascript\", \"typescript\", \"jsx\", \"tsx\"], \"aliases\": [\"gql\"] });\nvar graphql = [\n  ...javascript,\n  ...typescript,\n  ...jsx,\n  ...tsx,\n  lang$5\n];\n\nconst lang$4 = Object.freeze({ \"fileTypes\": [], \"injectTo\": [\"text.html.markdown\"], \"injectionSelector\": \"L:text.html.markdown\", \"name\": \"markdown-vue\", \"patterns\": [{ \"include\": \"#vue-code-block\" }], \"repository\": { \"vue-code-block\": { \"begin\": \"(^|\\\\G)(\\\\s*)(`{3,}|~{3,})\\\\s*(?i:(vue)((\\\\s+|:|,|\\\\{|\\\\?)[^`~]*)?$)\", \"beginCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" }, \"4\": { \"name\": \"fenced_code.block.language.markdown\" }, \"5\": { \"name\": \"fenced_code.block.language.attributes.markdown\" } }, \"end\": \"(^|\\\\G)(\\\\2|\\\\s{0,3})(\\\\3)\\\\s*$\", \"endCaptures\": { \"3\": { \"name\": \"punctuation.definition.markdown\" } }, \"name\": \"markup.fenced_code.block.markdown\", \"patterns\": [{ \"include\": \"source.vue\" }] } }, \"scopeName\": \"markdown.vue.codeblock\" });\nvar markdown_vue = [\n  lang$4\n];\n\nconst lang$3 = Object.freeze({ \"fileTypes\": [], \"injectTo\": [\"source.vue\", \"text.html.markdown\", \"text.html.derivative\", \"text.pug\"], \"injectionSelector\": \"L:meta.tag -meta.attribute -entity.name.tag.pug -attribute_value -source.tsx -source.js.jsx, L:meta.element -meta.attribute\", \"name\": \"vue-directives\", \"patterns\": [{ \"include\": \"source.vue#vue-directives\" }], \"scopeName\": \"vue.directives\" });\nvar vue_directives = [\n  lang$3\n];\n\nconst lang$2 = Object.freeze({ \"fileTypes\": [], \"injectTo\": [\"source.vue\", \"text.html.markdown\", \"text.html.derivative\", \"text.pug\"], \"injectionSelector\": \"L:text.pug -comment -string.comment, L:text.html.derivative -comment.block, L:text.html.markdown -comment.block\", \"name\": \"vue-interpolations\", \"patterns\": [{ \"include\": \"source.vue#vue-interpolations\" }], \"scopeName\": \"vue.interpolations\" });\nvar vue_interpolations = [\n  lang$2\n];\n\nconst lang$1 = Object.freeze({ \"fileTypes\": [], \"injectTo\": [\"source.vue\"], \"injectionSelector\": \"L:source.css -comment, L:source.postcss -comment, L:source.sass -comment, L:source.stylus -comment\", \"name\": \"vue-sfc-style-variable-injection\", \"patterns\": [{ \"include\": \"#vue-sfc-style-variable-injection\" }], \"repository\": { \"vue-sfc-style-variable-injection\": { \"begin\": \"\\\\b(v-bind)\\\\s*\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function\" } }, \"end\": \"\\\\)\", \"name\": \"vue.sfc.style.variable.injection.v-bind\", \"patterns\": [{ \"begin\": `('|\")`, \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" } }, \"end\": \"(\\\\1)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"source.ts.embedded.html.vue\", \"patterns\": [{ \"include\": \"source.js\" }] }, { \"include\": \"source.js\" }] } }, \"scopeName\": \"vue.sfc.style.variable.injection\", \"embeddedLangs\": [\"javascript\"] });\nvar vue_sfc_style_variable_injection = [\n  ...javascript,\n  lang$1\n];\n\nconst lang = Object.freeze({ \"displayName\": \"Vue\", \"name\": \"vue\", \"patterns\": [{ \"include\": \"text.html.basic#comment\" }, { \"include\": \"#self-closing-tag\" }, { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html.vue\" } }, \"patterns\": [{ \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)md\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"text.html.markdown\", \"patterns\": [{ \"include\": \"text.html.markdown\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)html\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"text.html.derivative\", \"patterns\": [{ \"include\": \"#html-stuff\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)pug\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"text.pug\", \"patterns\": [{ \"include\": \"text.pug\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)stylus\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.stylus\", \"patterns\": [{ \"include\": \"source.stylus\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)postcss\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.postcss\", \"patterns\": [{ \"include\": \"source.postcss\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)sass\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.sass\", \"patterns\": [{ \"include\": \"source.sass\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)css\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.css\", \"patterns\": [{ \"include\": \"source.css\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)scss\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.css.scss\", \"patterns\": [{ \"include\": \"source.css.scss\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)less\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.css.less\", \"patterns\": [{ \"include\": \"source.css.less\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)js\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"source.js\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)ts\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.ts\", \"patterns\": [{ \"include\": \"source.ts\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)jsx\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.js.jsx\", \"patterns\": [{ \"include\": \"source.js.jsx\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)tsx\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.tsx\", \"patterns\": [{ \"include\": \"source.tsx\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)json\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.json\", \"patterns\": [{ \"include\": \"source.json\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)jsonc\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.json.comments\", \"patterns\": [{ \"include\": \"source.json.comments\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)json5\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.json5\", \"patterns\": [{ \"include\": \"source.json5\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)yaml\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.yaml\", \"patterns\": [{ \"include\": \"source.yaml\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)toml\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.toml\", \"patterns\": [{ \"include\": \"source.toml\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)(gql|graphql)\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.graphql\", \"patterns\": [{ \"include\": \"source.graphql\" }] }] }, { \"begin\": `([a-zA-Z0-9:-]+)\\\\b(?=[^>]*\\\\blang\\\\s*=\\\\s*(['\"]?)vue\\\\b\\\\2)`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"source.vue\", \"patterns\": [{ \"include\": \"source.vue\" }] }] }, { \"begin\": \"(template)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/template\\\\b)\", \"name\": \"text.html.derivative\", \"patterns\": [{ \"include\": \"#html-stuff\" }] }] }, { \"begin\": \"(script)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/script\\\\b)\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"source.js\" }] }] }, { \"begin\": \"(style)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/style\\\\b)\", \"name\": \"source.css\", \"patterns\": [{ \"include\": \"source.css\" }] }] }, { \"begin\": \"([a-zA-Z0-9:-]+)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.$1.html.vue\" } }, \"end\": \"(</)(\\\\1)\\\\s*(?=>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"begin\": \"(?<=>)\", \"end\": \"(?=<\\\\/)\", \"name\": \"text\" }] }] }], \"repository\": { \"html-stuff\": { \"patterns\": [{ \"include\": \"#template-tag\" }, { \"include\": \"text.html.derivative\" }, { \"include\": \"text.html.basic\" }] }, \"self-closing-tag\": { \"begin\": \"(<)([a-zA-Z0-9:-]+)(?=([^>]+/>))\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"end\": \"(/>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html.vue\" } }, \"name\": \"self-closing-tag\", \"patterns\": [{ \"include\": \"#tag-stuff\" }] }, \"tag-stuff\": { \"begin\": \"\\\\G\", \"end\": \"(?=/>)|(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html.vue\" } }, \"name\": \"meta.tag-stuff\", \"patterns\": [{ \"include\": \"#vue-directives\" }, { \"include\": \"text.html.basic#attribute\" }] }, \"template-tag\": { \"patterns\": [{ \"include\": \"#template-tag-1\" }, { \"include\": \"#template-tag-2\" }] }, \"template-tag-1\": { \"begin\": \"(<)(template)\\\\b(>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html.vue\" } }, \"end\": \"(/?>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html.vue\" } }, \"name\": \"meta.template-tag.start\", \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(?=/>)|((</)(template)\\\\b)\", \"endCaptures\": { \"2\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"3\": { \"name\": \"entity.name.tag.$3.html.vue\" } }, \"name\": \"meta.template-tag.end\", \"patterns\": [{ \"include\": \"#html-stuff\" }] }] }, \"template-tag-2\": { \"begin\": \"(<)(template)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"2\": { \"name\": \"entity.name.tag.$2.html.vue\" } }, \"end\": \"(/?>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html.vue\" } }, \"name\": \"meta.template-tag.start\", \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(?=/>)|((</)(template)\\\\b)\", \"endCaptures\": { \"2\": { \"name\": \"punctuation.definition.tag.begin.html.vue\" }, \"3\": { \"name\": \"entity.name.tag.$3.html.vue\" } }, \"name\": \"meta.template-tag.end\", \"patterns\": [{ \"include\": \"#tag-stuff\" }, { \"include\": \"#html-stuff\" }] }] }, \"vue-directives\": { \"patterns\": [{ \"include\": \"#vue-directives-control\" }, { \"include\": \"#vue-directives-style-attr\" }, { \"include\": \"#vue-directives-original\" }, { \"include\": \"#vue-directives-generic-attr\" }] }, \"vue-directives-control\": { \"begin\": \"(v-for)|(v-if|v-else-if|v-else)\", \"captures\": { \"1\": { \"name\": \"keyword.control.loop.vue\" }, \"2\": { \"name\": \"keyword.control.conditional.vue\" } }, \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"name\": \"meta.attribute.directive.control.vue\", \"patterns\": [{ \"include\": \"#vue-directives-expression\" }] }, \"vue-directives-expression\": { \"patterns\": [{ \"begin\": \"(=)\\\\s*('|\\\"|`)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.html.vue\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.html.vue\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.html.vue\" } }, \"patterns\": [{ \"begin\": \"(?<=('|\\\"|`))\", \"end\": \"(?=\\\\1)\", \"name\": \"source.ts.embedded.html.vue\", \"patterns\": [{ \"include\": \"source.ts\" }] }] }, { \"begin\": \"(=)\\\\s*(?=[^'\\\"`])\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.html.vue\" } }, \"end\": \"(?=(\\\\s|>|\\\\/>))\", \"patterns\": [{ \"begin\": \"(?=[^'\\\"`])\", \"end\": \"(?=(\\\\s|>|\\\\/>))\", \"name\": \"source.ts.embedded.html.vue\", \"patterns\": [{ \"include\": \"source.ts\" }] }] }] }, \"vue-directives-generic-attr\": { \"begin\": \"\\\\b(generic)\\\\s*(=)\", \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.html.vue\" }, \"2\": { \"name\": \"punctuation.separator.key-value.html.vue\" } }, \"end\": `(?<='|\")`, \"name\": \"meta.attribute.generic.vue\", \"patterns\": [{ \"begin\": `('|\")`, \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.html.vue\" } }, \"comment\": \"https://github.com/microsoft/vscode/blob/fd4346210f59135fad81a8b8c4cea7bf5a9ca6b4/extensions/typescript-basics/syntaxes/TypeScript.tmLanguage.json#L4002-L4020\", \"end\": \"(\\\\1)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.html.vue\" } }, \"name\": \"meta.type.parameters.vue\", \"patterns\": [{ \"include\": \"source.ts#comment\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(extends|in|out)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ts\" }, { \"include\": \"source.ts#type\" }, { \"include\": \"source.ts#punctuation-comma\" }, { \"match\": \"(=)(?!>)\", \"name\": \"keyword.operator.assignment.ts\" }] }] }, \"vue-directives-original\": { \"begin\": \"(?:\\\\b(v-)|([:\\\\.])|(@)|(#))(\\\\[?)([\\\\w\\\\-]*)(\\\\]?)(?:\\\\.([\\\\w\\\\-]*))*\", \"beginCaptures\": { \"1\": { \"name\": \"entity.other.attribute-name.html.vue\" }, \"2\": { \"name\": \"punctuation.attribute-shorthand.bind.html.vue\" }, \"3\": { \"name\": \"punctuation.attribute-shorthand.event.html.vue\" }, \"4\": { \"name\": \"punctuation.attribute-shorthand.slot.html.vue\" }, \"5\": { \"name\": \"punctuation.separator.key-value.html.vue\" }, \"6\": { \"name\": \"entity.other.attribute-name.html.vue\" }, \"7\": { \"name\": \"punctuation.separator.key-value.html.vue\" }, \"8\": { \"name\": \"entity.other.attribute-name.html.vue\" }, \"9\": { \"name\": \"punctuation.separator.key-value.html.vue\" } }, \"end\": \"(?=\\\\s*+[^=\\\\s])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.html.vue\" } }, \"name\": \"meta.attribute.directive.vue\", \"patterns\": [{ \"include\": \"#vue-directives-expression\" }] }, \"vue-directives-style-attr\": { \"begin\": \"\\\\b(style)\\\\s*(=)\", \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.html.vue\" }, \"2\": { \"name\": \"punctuation.separator.key-value.html.vue\" } }, \"end\": `(?<='|\")`, \"name\": \"meta.attribute.style.vue\", \"patterns\": [{ \"begin\": `('|\")`, \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.html.vue\" } }, \"comment\": \"Copy from source.css#rule-list-innards\", \"end\": \"(\\\\1)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.html.vue\" } }, \"name\": \"source.css.embedded.html.vue\", \"patterns\": [{ \"include\": \"source.css#comment-block\" }, { \"include\": \"source.css#escapes\" }, { \"include\": \"source.css#font-features\" }, { \"match\": \"(?x) (?<![\\\\w-])\\n--\\n(?:[-a-zA-Z_]    | [^\\\\x00-\\\\x7F])     # First letter\\n(?:[-a-zA-Z0-9_] | [^\\\\x00-\\\\x7F]      # Remainder of identifier\\n  |\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\n)*\", \"name\": \"variable.css\" }, { \"begin\": \"(?<![-a-zA-Z])(?=[-a-zA-Z])\", \"end\": \"$|(?![-a-zA-Z])\", \"name\": \"meta.property-name.css\", \"patterns\": [{ \"include\": \"source.css#property-names\" }] }, { \"begin\": \"(:)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.css\" } }, \"comment\": \"Modify end to fix #199. TODO: handle ' character.\", \"contentName\": \"meta.property-value.css\", \"end\": `\\\\s*(;)|\\\\s*(?='|\")`, \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.rule.css\" } }, \"patterns\": [{ \"include\": \"source.css#comment-block\" }, { \"include\": \"source.css#property-values\" }] }, { \"match\": \";\", \"name\": \"punctuation.terminator.rule.css\" }] }] }, \"vue-interpolations\": { \"patterns\": [{ \"begin\": \"(\\\\{\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.interpolation.begin.html.vue\" } }, \"end\": \"(\\\\}\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.interpolation.end.html.vue\" } }, \"name\": \"expression.embedded.vue\", \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(?=\\\\}\\\\})\", \"name\": \"source.ts.embedded.html.vue\", \"patterns\": [{ \"include\": \"source.ts\" }] }] }] } }, \"scopeName\": \"source.vue\", \"embeddedLangs\": [\"html\", \"markdown\", \"pug\", \"stylus\", \"sass\", \"css\", \"scss\", \"less\", \"javascript\", \"typescript\", \"jsx\", \"tsx\", \"json\", \"jsonc\", \"json5\", \"yaml\", \"toml\", \"graphql\", \"markdown-vue\", \"vue-directives\", \"vue-interpolations\", \"vue-sfc-style-variable-injection\"] });\nvar vue = [\n  ...html,\n  ...markdown,\n  ...pug,\n  ...stylus,\n  ...sass,\n  ...css,\n  ...scss,\n  ...less,\n  ...javascript,\n  ...typescript,\n  ...jsx,\n  ...tsx,\n  ...json,\n  ...jsonc,\n  ...json5,\n  ...yaml,\n  ...toml,\n  ...graphql,\n  ...markdown_vue,\n  ...vue_directives,\n  ...vue_interpolations,\n  ...vue_sfc_style_variable_injection,\n  lang\n];\n\nvar darkPlus = Object.freeze({\n  \"colors\": {\n    \"actionBar.toggledBackground\": \"#383a49\",\n    \"activityBarBadge.background\": \"#007ACC\",\n    \"checkbox.border\": \"#6B6B6B\",\n    \"editor.background\": \"#1E1E1E\",\n    \"editor.foreground\": \"#D4D4D4\",\n    \"editor.inactiveSelectionBackground\": \"#3A3D41\",\n    \"editor.selectionHighlightBackground\": \"#ADD6FF26\",\n    \"editorIndentGuide.activeBackground\": \"#707070\",\n    \"editorIndentGuide.background\": \"#404040\",\n    \"input.placeholderForeground\": \"#A6A6A6\",\n    \"list.activeSelectionIconForeground\": \"#FFF\",\n    \"list.dropBackground\": \"#383B3D\",\n    \"menu.background\": \"#252526\",\n    \"menu.border\": \"#454545\",\n    \"menu.foreground\": \"#CCCCCC\",\n    \"menu.separatorBackground\": \"#454545\",\n    \"ports.iconRunningProcessForeground\": \"#369432\",\n    \"sideBarSectionHeader.background\": \"#0000\",\n    \"sideBarSectionHeader.border\": \"#ccc3\",\n    \"sideBarTitle.foreground\": \"#BBBBBB\",\n    \"statusBarItem.remoteBackground\": \"#16825D\",\n    \"statusBarItem.remoteForeground\": \"#FFF\",\n    \"tab.lastPinnedBorder\": \"#ccc3\",\n    \"terminal.inactiveSelectionBackground\": \"#3A3D41\",\n    \"widget.border\": \"#303031\"\n  },\n  \"displayName\": \"Dark Plus\",\n  \"name\": \"dark-plus\",\n  \"semanticHighlighting\": true,\n  \"semanticTokenColors\": {\n    \"customLiteral\": \"#DCDCAA\",\n    \"newOperator\": \"#C586C0\",\n    \"numberLiteral\": \"#b5cea8\",\n    \"stringLiteral\": \"#ce9178\"\n  },\n  \"tokenColors\": [\n    {\n      \"scope\": [\n        \"meta.embedded\",\n        \"source.groovy.embedded\",\n        \"string meta.image.inline.markdown\",\n        \"variable.legacy.builtin.python\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#D4D4D4\"\n      }\n    },\n    {\n      \"scope\": \"emphasis\",\n      \"settings\": {\n        \"fontStyle\": \"italic\"\n      }\n    },\n    {\n      \"scope\": \"strong\",\n      \"settings\": {\n        \"fontStyle\": \"bold\"\n      }\n    },\n    {\n      \"scope\": \"header\",\n      \"settings\": {\n        \"foreground\": \"#000080\"\n      }\n    },\n    {\n      \"scope\": \"comment\",\n      \"settings\": {\n        \"foreground\": \"#6A9955\"\n      }\n    },\n    {\n      \"scope\": \"constant.language\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": [\n        \"constant.numeric\",\n        \"variable.other.enummember\",\n        \"keyword.operator.plus.exponent\",\n        \"keyword.operator.minus.exponent\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#b5cea8\"\n      }\n    },\n    {\n      \"scope\": \"constant.regexp\",\n      \"settings\": {\n        \"foreground\": \"#646695\"\n      }\n    },\n    {\n      \"scope\": \"entity.name.tag\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"entity.name.tag.css\",\n      \"settings\": {\n        \"foreground\": \"#d7ba7d\"\n      }\n    },\n    {\n      \"scope\": \"entity.other.attribute-name\",\n      \"settings\": {\n        \"foreground\": \"#9cdcfe\"\n      }\n    },\n    {\n      \"scope\": [\n        \"entity.other.attribute-name.class.css\",\n        \"entity.other.attribute-name.class.mixin.css\",\n        \"entity.other.attribute-name.id.css\",\n        \"entity.other.attribute-name.parent-selector.css\",\n        \"entity.other.attribute-name.pseudo-class.css\",\n        \"entity.other.attribute-name.pseudo-element.css\",\n        \"source.css.less entity.other.attribute-name.id\",\n        \"entity.other.attribute-name.scss\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#d7ba7d\"\n      }\n    },\n    {\n      \"scope\": \"invalid\",\n      \"settings\": {\n        \"foreground\": \"#f44747\"\n      }\n    },\n    {\n      \"scope\": \"markup.underline\",\n      \"settings\": {\n        \"fontStyle\": \"underline\"\n      }\n    },\n    {\n      \"scope\": \"markup.bold\",\n      \"settings\": {\n        \"fontStyle\": \"bold\",\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"markup.heading\",\n      \"settings\": {\n        \"fontStyle\": \"bold\",\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"markup.italic\",\n      \"settings\": {\n        \"fontStyle\": \"italic\"\n      }\n    },\n    {\n      \"scope\": \"markup.strikethrough\",\n      \"settings\": {\n        \"fontStyle\": \"strikethrough\"\n      }\n    },\n    {\n      \"scope\": \"markup.inserted\",\n      \"settings\": {\n        \"foreground\": \"#b5cea8\"\n      }\n    },\n    {\n      \"scope\": \"markup.deleted\",\n      \"settings\": {\n        \"foreground\": \"#ce9178\"\n      }\n    },\n    {\n      \"scope\": \"markup.changed\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"punctuation.definition.quote.begin.markdown\",\n      \"settings\": {\n        \"foreground\": \"#6A9955\"\n      }\n    },\n    {\n      \"scope\": \"punctuation.definition.list.begin.markdown\",\n      \"settings\": {\n        \"foreground\": \"#6796e6\"\n      }\n    },\n    {\n      \"scope\": \"markup.inline.raw\",\n      \"settings\": {\n        \"foreground\": \"#ce9178\"\n      }\n    },\n    {\n      \"scope\": \"punctuation.definition.tag\",\n      \"settings\": {\n        \"foreground\": \"#808080\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.preprocessor\",\n        \"entity.name.function.preprocessor\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"meta.preprocessor.string\",\n      \"settings\": {\n        \"foreground\": \"#ce9178\"\n      }\n    },\n    {\n      \"scope\": \"meta.preprocessor.numeric\",\n      \"settings\": {\n        \"foreground\": \"#b5cea8\"\n      }\n    },\n    {\n      \"scope\": \"meta.structure.dictionary.key.python\",\n      \"settings\": {\n        \"foreground\": \"#9cdcfe\"\n      }\n    },\n    {\n      \"scope\": \"meta.diff.header\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"storage\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"storage.type\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": [\n        \"storage.modifier\",\n        \"keyword.operator.noexcept\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": [\n        \"string\",\n        \"meta.embedded.assembly\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#ce9178\"\n      }\n    },\n    {\n      \"scope\": \"string.tag\",\n      \"settings\": {\n        \"foreground\": \"#ce9178\"\n      }\n    },\n    {\n      \"scope\": \"string.value\",\n      \"settings\": {\n        \"foreground\": \"#ce9178\"\n      }\n    },\n    {\n      \"scope\": \"string.regexp\",\n      \"settings\": {\n        \"foreground\": \"#d16969\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.definition.template-expression.begin\",\n        \"punctuation.definition.template-expression.end\",\n        \"punctuation.section.embedded\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.template.expression\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#d4d4d4\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.type.vendored.property-name\",\n        \"support.type.property-name\",\n        \"variable.css\",\n        \"variable.scss\",\n        \"variable.other.less\",\n        \"source.coffee.embedded\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#9cdcfe\"\n      }\n    },\n    {\n      \"scope\": \"keyword\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"keyword.control\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"keyword.operator\",\n      \"settings\": {\n        \"foreground\": \"#d4d4d4\"\n      }\n    },\n    {\n      \"scope\": [\n        \"keyword.operator.new\",\n        \"keyword.operator.expression\",\n        \"keyword.operator.cast\",\n        \"keyword.operator.sizeof\",\n        \"keyword.operator.alignof\",\n        \"keyword.operator.typeid\",\n        \"keyword.operator.alignas\",\n        \"keyword.operator.instanceof\",\n        \"keyword.operator.logical.python\",\n        \"keyword.operator.wordlike\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"keyword.other.unit\",\n      \"settings\": {\n        \"foreground\": \"#b5cea8\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.section.embedded.begin.php\",\n        \"punctuation.section.embedded.end.php\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"support.function.git-rebase\",\n      \"settings\": {\n        \"foreground\": \"#9cdcfe\"\n      }\n    },\n    {\n      \"scope\": \"constant.sha.git-rebase\",\n      \"settings\": {\n        \"foreground\": \"#b5cea8\"\n      }\n    },\n    {\n      \"scope\": [\n        \"storage.modifier.import.java\",\n        \"variable.language.wildcard.java\",\n        \"storage.modifier.package.java\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#d4d4d4\"\n      }\n    },\n    {\n      \"scope\": \"variable.language\",\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": [\n        \"entity.name.function\",\n        \"support.function\",\n        \"support.constant.handlebars\",\n        \"source.powershell variable.other.member\",\n        \"entity.name.operator.custom-literal\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#DCDCAA\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.class\",\n        \"support.type\",\n        \"entity.name.type\",\n        \"entity.name.namespace\",\n        \"entity.other.attribute\",\n        \"entity.name.scope-resolution\",\n        \"entity.name.class\",\n        \"storage.type.numeric.go\",\n        \"storage.type.byte.go\",\n        \"storage.type.boolean.go\",\n        \"storage.type.string.go\",\n        \"storage.type.uintptr.go\",\n        \"storage.type.error.go\",\n        \"storage.type.rune.go\",\n        \"storage.type.cs\",\n        \"storage.type.generic.cs\",\n        \"storage.type.modifier.cs\",\n        \"storage.type.variable.cs\",\n        \"storage.type.annotation.java\",\n        \"storage.type.generic.java\",\n        \"storage.type.java\",\n        \"storage.type.object.array.java\",\n        \"storage.type.primitive.array.java\",\n        \"storage.type.primitive.java\",\n        \"storage.type.token.java\",\n        \"storage.type.groovy\",\n        \"storage.type.annotation.groovy\",\n        \"storage.type.parameters.groovy\",\n        \"storage.type.generic.groovy\",\n        \"storage.type.object.array.groovy\",\n        \"storage.type.primitive.array.groovy\",\n        \"storage.type.primitive.groovy\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#4EC9B0\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.type.cast.expr\",\n        \"meta.type.new.expr\",\n        \"support.constant.math\",\n        \"support.constant.dom\",\n        \"support.constant.json\",\n        \"entity.other.inherited-class\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#4EC9B0\"\n      }\n    },\n    {\n      \"scope\": [\n        \"keyword.control\",\n        \"source.cpp keyword.operator.new\",\n        \"keyword.operator.delete\",\n        \"keyword.other.using\",\n        \"keyword.other.directive.using\",\n        \"keyword.other.operator\",\n        \"entity.name.operator\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#C586C0\"\n      }\n    },\n    {\n      \"scope\": [\n        \"variable\",\n        \"meta.definition.variable.name\",\n        \"support.variable\",\n        \"entity.name.variable\",\n        \"constant.other.placeholder\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#9CDCFE\"\n      }\n    },\n    {\n      \"scope\": [\n        \"variable.other.constant\",\n        \"variable.other.enummember\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#4FC1FF\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.object-literal.key\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#9CDCFE\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.constant.property-value\",\n        \"support.constant.font-name\",\n        \"support.constant.media-type\",\n        \"support.constant.media\",\n        \"constant.other.color.rgb-value\",\n        \"constant.other.rgb-value\",\n        \"support.constant.color\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#CE9178\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.definition.group.regexp\",\n        \"punctuation.definition.group.assertion.regexp\",\n        \"punctuation.definition.character-class.regexp\",\n        \"punctuation.character.set.begin.regexp\",\n        \"punctuation.character.set.end.regexp\",\n        \"keyword.operator.negation.regexp\",\n        \"support.other.parenthesis.regexp\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#CE9178\"\n      }\n    },\n    {\n      \"scope\": [\n        \"constant.character.character-class.regexp\",\n        \"constant.other.character-class.set.regexp\",\n        \"constant.other.character-class.regexp\",\n        \"constant.character.set.regexp\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#d16969\"\n      }\n    },\n    {\n      \"scope\": [\n        \"keyword.operator.or.regexp\",\n        \"keyword.control.anchor.regexp\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#DCDCAA\"\n      }\n    },\n    {\n      \"scope\": \"keyword.operator.quantifier.regexp\",\n      \"settings\": {\n        \"foreground\": \"#d7ba7d\"\n      }\n    },\n    {\n      \"scope\": [\n        \"constant.character\",\n        \"constant.other.option\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#569cd6\"\n      }\n    },\n    {\n      \"scope\": \"constant.character.escape\",\n      \"settings\": {\n        \"foreground\": \"#d7ba7d\"\n      }\n    },\n    {\n      \"scope\": \"entity.name.label\",\n      \"settings\": {\n        \"foreground\": \"#C8C8C8\"\n      }\n    }\n  ],\n  \"type\": \"dark\"\n});\n\nvar lightPlus = Object.freeze({\n  \"colors\": {\n    \"actionBar.toggledBackground\": \"#dddddd\",\n    \"activityBarBadge.background\": \"#007ACC\",\n    \"checkbox.border\": \"#919191\",\n    \"editor.background\": \"#FFFFFF\",\n    \"editor.foreground\": \"#000000\",\n    \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\n    \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\n    \"editorIndentGuide.activeBackground\": \"#939393\",\n    \"editorIndentGuide.background\": \"#D3D3D3\",\n    \"editorSuggestWidget.background\": \"#F3F3F3\",\n    \"input.placeholderForeground\": \"#767676\",\n    \"list.activeSelectionIconForeground\": \"#FFF\",\n    \"list.focusAndSelectionOutline\": \"#90C2F9\",\n    \"list.hoverBackground\": \"#E8E8E8\",\n    \"menu.border\": \"#D4D4D4\",\n    \"notebook.cellBorderColor\": \"#E8E8E8\",\n    \"notebook.selectedCellBackground\": \"#c8ddf150\",\n    \"ports.iconRunningProcessForeground\": \"#369432\",\n    \"searchEditor.textInputBorder\": \"#CECECE\",\n    \"settings.numberInputBorder\": \"#CECECE\",\n    \"settings.textInputBorder\": \"#CECECE\",\n    \"sideBarSectionHeader.background\": \"#0000\",\n    \"sideBarSectionHeader.border\": \"#61616130\",\n    \"sideBarTitle.foreground\": \"#6F6F6F\",\n    \"statusBarItem.errorBackground\": \"#c72e0f\",\n    \"statusBarItem.remoteBackground\": \"#16825D\",\n    \"statusBarItem.remoteForeground\": \"#FFF\",\n    \"tab.lastPinnedBorder\": \"#61616130\",\n    \"terminal.inactiveSelectionBackground\": \"#E5EBF1\",\n    \"widget.border\": \"#d4d4d4\"\n  },\n  \"displayName\": \"Light Plus\",\n  \"name\": \"light-plus\",\n  \"semanticHighlighting\": true,\n  \"semanticTokenColors\": {\n    \"customLiteral\": \"#795E26\",\n    \"newOperator\": \"#AF00DB\",\n    \"numberLiteral\": \"#098658\",\n    \"stringLiteral\": \"#a31515\"\n  },\n  \"tokenColors\": [\n    {\n      \"scope\": [\n        \"meta.embedded\",\n        \"source.groovy.embedded\",\n        \"string meta.image.inline.markdown\",\n        \"variable.legacy.builtin.python\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#000000ff\"\n      }\n    },\n    {\n      \"scope\": \"emphasis\",\n      \"settings\": {\n        \"fontStyle\": \"italic\"\n      }\n    },\n    {\n      \"scope\": \"strong\",\n      \"settings\": {\n        \"fontStyle\": \"bold\"\n      }\n    },\n    {\n      \"scope\": \"meta.diff.header\",\n      \"settings\": {\n        \"foreground\": \"#000080\"\n      }\n    },\n    {\n      \"scope\": \"comment\",\n      \"settings\": {\n        \"foreground\": \"#008000\"\n      }\n    },\n    {\n      \"scope\": \"constant.language\",\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": [\n        \"constant.numeric\",\n        \"variable.other.enummember\",\n        \"keyword.operator.plus.exponent\",\n        \"keyword.operator.minus.exponent\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#098658\"\n      }\n    },\n    {\n      \"scope\": \"constant.regexp\",\n      \"settings\": {\n        \"foreground\": \"#811f3f\"\n      }\n    },\n    {\n      \"scope\": \"entity.name.tag\",\n      \"settings\": {\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": \"entity.name.selector\",\n      \"settings\": {\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": \"entity.other.attribute-name\",\n      \"settings\": {\n        \"foreground\": \"#e50000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"entity.other.attribute-name.class.css\",\n        \"entity.other.attribute-name.class.mixin.css\",\n        \"entity.other.attribute-name.id.css\",\n        \"entity.other.attribute-name.parent-selector.css\",\n        \"entity.other.attribute-name.pseudo-class.css\",\n        \"entity.other.attribute-name.pseudo-element.css\",\n        \"source.css.less entity.other.attribute-name.id\",\n        \"entity.other.attribute-name.scss\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": \"invalid\",\n      \"settings\": {\n        \"foreground\": \"#cd3131\"\n      }\n    },\n    {\n      \"scope\": \"markup.underline\",\n      \"settings\": {\n        \"fontStyle\": \"underline\"\n      }\n    },\n    {\n      \"scope\": \"markup.bold\",\n      \"settings\": {\n        \"fontStyle\": \"bold\",\n        \"foreground\": \"#000080\"\n      }\n    },\n    {\n      \"scope\": \"markup.heading\",\n      \"settings\": {\n        \"fontStyle\": \"bold\",\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": \"markup.italic\",\n      \"settings\": {\n        \"fontStyle\": \"italic\"\n      }\n    },\n    {\n      \"scope\": \"markup.strikethrough\",\n      \"settings\": {\n        \"fontStyle\": \"strikethrough\"\n      }\n    },\n    {\n      \"scope\": \"markup.inserted\",\n      \"settings\": {\n        \"foreground\": \"#098658\"\n      }\n    },\n    {\n      \"scope\": \"markup.deleted\",\n      \"settings\": {\n        \"foreground\": \"#a31515\"\n      }\n    },\n    {\n      \"scope\": \"markup.changed\",\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.definition.quote.begin.markdown\",\n        \"punctuation.definition.list.begin.markdown\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": \"markup.inline.raw\",\n      \"settings\": {\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": \"punctuation.definition.tag\",\n      \"settings\": {\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.preprocessor\",\n        \"entity.name.function.preprocessor\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"meta.preprocessor.string\",\n      \"settings\": {\n        \"foreground\": \"#a31515\"\n      }\n    },\n    {\n      \"scope\": \"meta.preprocessor.numeric\",\n      \"settings\": {\n        \"foreground\": \"#098658\"\n      }\n    },\n    {\n      \"scope\": \"meta.structure.dictionary.key.python\",\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": \"storage\",\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"storage.type\",\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": [\n        \"storage.modifier\",\n        \"keyword.operator.noexcept\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": [\n        \"string\",\n        \"meta.embedded.assembly\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#a31515\"\n      }\n    },\n    {\n      \"scope\": [\n        \"string.comment.buffered.block.pug\",\n        \"string.quoted.pug\",\n        \"string.interpolated.pug\",\n        \"string.unquoted.plain.in.yaml\",\n        \"string.unquoted.plain.out.yaml\",\n        \"string.unquoted.block.yaml\",\n        \"string.quoted.single.yaml\",\n        \"string.quoted.double.xml\",\n        \"string.quoted.single.xml\",\n        \"string.unquoted.cdata.xml\",\n        \"string.quoted.double.html\",\n        \"string.quoted.single.html\",\n        \"string.unquoted.html\",\n        \"string.quoted.single.handlebars\",\n        \"string.quoted.double.handlebars\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"string.regexp\",\n      \"settings\": {\n        \"foreground\": \"#811f3f\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.definition.template-expression.begin\",\n        \"punctuation.definition.template-expression.end\",\n        \"punctuation.section.embedded\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.template.expression\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#000000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.constant.property-value\",\n        \"support.constant.font-name\",\n        \"support.constant.media-type\",\n        \"support.constant.media\",\n        \"constant.other.color.rgb-value\",\n        \"constant.other.rgb-value\",\n        \"support.constant.color\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.type.vendored.property-name\",\n        \"support.type.property-name\",\n        \"variable.css\",\n        \"variable.scss\",\n        \"variable.other.less\",\n        \"source.coffee.embedded\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#e50000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.type.property-name.json\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": \"keyword\",\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"keyword.control\",\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"keyword.operator\",\n      \"settings\": {\n        \"foreground\": \"#000000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"keyword.operator.new\",\n        \"keyword.operator.expression\",\n        \"keyword.operator.cast\",\n        \"keyword.operator.sizeof\",\n        \"keyword.operator.alignof\",\n        \"keyword.operator.typeid\",\n        \"keyword.operator.alignas\",\n        \"keyword.operator.instanceof\",\n        \"keyword.operator.logical.python\",\n        \"keyword.operator.wordlike\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"keyword.other.unit\",\n      \"settings\": {\n        \"foreground\": \"#098658\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.section.embedded.begin.php\",\n        \"punctuation.section.embedded.end.php\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#800000\"\n      }\n    },\n    {\n      \"scope\": \"support.function.git-rebase\",\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": \"constant.sha.git-rebase\",\n      \"settings\": {\n        \"foreground\": \"#098658\"\n      }\n    },\n    {\n      \"scope\": [\n        \"storage.modifier.import.java\",\n        \"variable.language.wildcard.java\",\n        \"storage.modifier.package.java\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#000000\"\n      }\n    },\n    {\n      \"scope\": \"variable.language\",\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": [\n        \"entity.name.function\",\n        \"support.function\",\n        \"support.constant.handlebars\",\n        \"source.powershell variable.other.member\",\n        \"entity.name.operator.custom-literal\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#795E26\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.class\",\n        \"support.type\",\n        \"entity.name.type\",\n        \"entity.name.namespace\",\n        \"entity.other.attribute\",\n        \"entity.name.scope-resolution\",\n        \"entity.name.class\",\n        \"storage.type.numeric.go\",\n        \"storage.type.byte.go\",\n        \"storage.type.boolean.go\",\n        \"storage.type.string.go\",\n        \"storage.type.uintptr.go\",\n        \"storage.type.error.go\",\n        \"storage.type.rune.go\",\n        \"storage.type.cs\",\n        \"storage.type.generic.cs\",\n        \"storage.type.modifier.cs\",\n        \"storage.type.variable.cs\",\n        \"storage.type.annotation.java\",\n        \"storage.type.generic.java\",\n        \"storage.type.java\",\n        \"storage.type.object.array.java\",\n        \"storage.type.primitive.array.java\",\n        \"storage.type.primitive.java\",\n        \"storage.type.token.java\",\n        \"storage.type.groovy\",\n        \"storage.type.annotation.groovy\",\n        \"storage.type.parameters.groovy\",\n        \"storage.type.generic.groovy\",\n        \"storage.type.object.array.groovy\",\n        \"storage.type.primitive.array.groovy\",\n        \"storage.type.primitive.groovy\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#267f99\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.type.cast.expr\",\n        \"meta.type.new.expr\",\n        \"support.constant.math\",\n        \"support.constant.dom\",\n        \"support.constant.json\",\n        \"entity.other.inherited-class\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#267f99\"\n      }\n    },\n    {\n      \"scope\": [\n        \"keyword.control\",\n        \"source.cpp keyword.operator.new\",\n        \"source.cpp keyword.operator.delete\",\n        \"keyword.other.using\",\n        \"keyword.other.directive.using\",\n        \"keyword.other.operator\",\n        \"entity.name.operator\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#AF00DB\"\n      }\n    },\n    {\n      \"scope\": [\n        \"variable\",\n        \"meta.definition.variable.name\",\n        \"support.variable\",\n        \"entity.name.variable\",\n        \"constant.other.placeholder\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#001080\"\n      }\n    },\n    {\n      \"scope\": [\n        \"variable.other.constant\",\n        \"variable.other.enummember\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0070C1\"\n      }\n    },\n    {\n      \"scope\": [\n        \"meta.object-literal.key\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#001080\"\n      }\n    },\n    {\n      \"scope\": [\n        \"support.constant.property-value\",\n        \"support.constant.font-name\",\n        \"support.constant.media-type\",\n        \"support.constant.media\",\n        \"constant.other.color.rgb-value\",\n        \"constant.other.rgb-value\",\n        \"support.constant.color\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0451a5\"\n      }\n    },\n    {\n      \"scope\": [\n        \"punctuation.definition.group.regexp\",\n        \"punctuation.definition.group.assertion.regexp\",\n        \"punctuation.definition.character-class.regexp\",\n        \"punctuation.character.set.begin.regexp\",\n        \"punctuation.character.set.end.regexp\",\n        \"keyword.operator.negation.regexp\",\n        \"support.other.parenthesis.regexp\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#d16969\"\n      }\n    },\n    {\n      \"scope\": [\n        \"constant.character.character-class.regexp\",\n        \"constant.other.character-class.set.regexp\",\n        \"constant.other.character-class.regexp\",\n        \"constant.character.set.regexp\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#811f3f\"\n      }\n    },\n    {\n      \"scope\": \"keyword.operator.quantifier.regexp\",\n      \"settings\": {\n        \"foreground\": \"#000000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"keyword.operator.or.regexp\",\n        \"keyword.control.anchor.regexp\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#EE0000\"\n      }\n    },\n    {\n      \"scope\": [\n        \"constant.character\",\n        \"constant.other.option\"\n      ],\n      \"settings\": {\n        \"foreground\": \"#0000ff\"\n      }\n    },\n    {\n      \"scope\": \"constant.character.escape\",\n      \"settings\": {\n        \"foreground\": \"#EE0000\"\n      }\n    },\n    {\n      \"scope\": \"entity.name.label\",\n      \"settings\": {\n        \"foreground\": \"#000000\"\n      }\n    }\n  ],\n  \"type\": \"light\"\n});\n\nasync function registerHighlighter() {\n  const highlighter = await getHighlighterCore({\n    themes: [darkPlus, lightPlus],\n    langs: [vue],\n    loadWasm: getWasmInlined\n  });\n  languages.register({ id: \"vue\" });\n  shikijiToMonaco(highlighter, monaco);\n  return {\n    light: lightPlus.name,\n    dark: darkPlus.name\n  };\n}\n\nexport { registerHighlighter };\n"],
  "mappings": "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",
  "names": ["FontStyle", "EncodedTokenAttributes", "containsBalancedBrackets", "matcher", "key", "root", "head", "scopeName", "scopes", "one", "all", "increment", "siblings", "lang", "text", "scope", "i", "_a", "_b", "onigBinding", "clone", "Registry", "p", "langs", "themes", "options", "monaco"]
}
